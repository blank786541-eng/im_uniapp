import { ConnectStore } from './connect';
import { FriendStore } from './friends';
import { MsgStore } from './msgs';
import { RelationStore } from './relations';
import { ConversationStore } from './conversations';
import { TeamStore } from './teams';
import { TeamMemberStore } from './teamMembers';
import { SysMsgStore } from './sysMsgs';
import { UserStore } from './users';
import { AIUserStore } from './aiUsers';
import { UiStore } from './ui';
import { StorageStore } from './storage';
import { ContactType, Relation, LocalOptions } from './types';
import * as storeUtils from './utils';
import * as storeConstants from './constant';
import { NIM } from 'nim-web-sdk-ng/dist/esm/nim';
import { LocalConversationStore } from './localConversation';
import { NIMInitializeOptions } from 'nim-web-sdk-ng/dist/v2/NIM_BROWSER_SDK/NIMInterface';
import { SubscriptionStore } from './subscription';
declare class RootStore {
    static ins: RootStore;
    nim: NIM;
    localOptions: Required<LocalOptions>;
    sdkOptions: Partial<NIMInitializeOptions>;
    connectStore: ConnectStore;
    friendStore: FriendStore;
    msgStore: MsgStore;
    relationStore: RelationStore;
    conversationStore: ConversationStore | null;
    localConversationStore: LocalConversationStore | null;
    teamStore: TeamStore;
    teamMemberStore: TeamMemberStore;
    sysMsgStore: SysMsgStore;
    userStore: UserStore;
    aiUserStore: AIUserStore;
    subscriptionStore: SubscriptionStore;
    uiStore: UiStore;
    logger: typeof storeUtils.logger | null;
    storageStore: StorageStore;
    constructor(nim: NIM, localOptions?: Partial<LocalOptions>, platform?: string);
    resetState(): void;
    /**
     * 销毁根store实例
     */
    destroy(): void;
    /**
     * 获取根store实例
     * @param nim NIM SDK 实例
     * @param t 国际化函数
     */
    static getInstance(nim: NIM, localOptions?: Partial<LocalOptions>, platform?: string): RootStore;
}
export default RootStore;
export type { ContactType, Relation };
export { RootStore, ConnectStore, FriendStore, MsgStore, RelationStore, ConversationStore, LocalConversationStore, TeamStore, TeamMemberStore, SysMsgStore, UserStore, AIUserStore, UiStore, StorageStore, SubscriptionStore, storeUtils, storeConstants, };
