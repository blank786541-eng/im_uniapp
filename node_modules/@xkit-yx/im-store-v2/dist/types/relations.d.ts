import { NIM } from 'nim-web-sdk-ng/dist/esm/nim';
import RootStore from '.';
import { V2NIMP2PMessageMuteMode } from 'nim-web-sdk-ng/dist/esm/nim/src/V2NIMSettingService';
import * as storeUtils from './utils';
/**Mobx 可观察对象，负责管理黑名单和静音列表的子store */
export declare class RelationStore {
    private rootStore;
    private nim;
    blacklist: string[];
    mutes: string[];
    logger: typeof storeUtils.logger | null;
    constructor(rootStore: RootStore, nim: NIM);
    resetState(): void;
    /**
     * 销毁RelationStore，会取消相关事件监听
     */
    destroy(): void;
    /**
     * 内存中增加黑名单列表
     * @param accounts - 账号数组
     */
    addBlacklist(accounts: string[]): void;
    /**
     * 内存中删除黑名单列表
     * @param accounts - 账号数组
     */
    removeBlacklist(accounts: string[]): void;
    /**
     * 是否在黑名单列表
     */
    isInBlacklist(account: string): boolean;
    /**
     * 内存中增加静音列表
     * @param accounts - 账号数组
     */
    addMutes(accounts: string[]): void;
    /**
     * 内存中删除静音列表
     * @param accounts - 账号数组
     */
    removeMutes(accounts: string[]): void;
    getBlockListActive(): Promise<string[]>;
    getP2PMuteListActive(): Promise<string[]>;
    /**
     * 加入 黑名单
     * @param accountId 账号
     */
    addUserToBlockListActive(accountId: string): Promise<void>;
    /**
     * 移除 黑名单
     * @param accountId 账号
     */
    removeUserFromBlockListActive(accountId: string): Promise<void>;
    /**
     * 设置/取消 单聊（点对点）消息免打扰模式
     * @param accountId 账号
     * @param muteMode  消息免打扰模式：免打扰开启或免打扰关闭
     */
    setP2PMessageMuteModeActive(accountId: string, muteMode: V2NIMP2PMessageMuteMode): Promise<void>;
    /**
     * 黑名单新增用户回调，返回新加入黑名单的用户列表。当客户端本端添加用户到黑名单，或者其他端同步添加用户到黑名单时触发该回调
     */
    private _onBlockListAdded;
    /**
     * 黑名单移除用户回调，返回移出黑名单的用户列表。当客户端本端从黑名单移除用户，或者其他端同步从黑名单移除用户时触发该回调。
     */
    private _onBlockListRemoved;
    /**
     * 单聊消息免打扰模式变更事件
     */
    private _onP2PMessageMuteModeChanged;
}
