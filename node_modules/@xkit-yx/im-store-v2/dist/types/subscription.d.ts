import { NIM } from 'nim-web-sdk-ng/dist/esm/nim';
import RootStore from '.';
import * as storeUtils from './utils';
import { V2NIMUserStatus } from 'nim-web-sdk-ng/dist/esm/nim/src/V2NIMSubscriptionService';
/**Mobx 可观察对象，负责管理在线离线等事件订阅的子store */
export declare class SubscriptionStore {
    private rootStore;
    private nim;
    stateMap: Map<string, V2NIMUserStatus>;
    logger: typeof storeUtils.logger | null;
    constructor(rootStore: RootStore, nim: NIM);
    resetState(): void;
    /**
     * 销毁SubscriptionStore，会取消相关事件监听
     */
    destroy(): void;
    /** 获取当前用户在线离线状态
     * @param accountId 用户ID
     **/
    getUserStatus(accountId: string): V2NIMUserStatus | undefined;
    /** 获取当前所有用户在线离线状态
     **/
    getUserStatusList(): V2NIMUserStatus[];
    /**
     * 订阅用户状态，包括在线状态或用户自定义的状态。
     * 成功订阅用户状态后，当订阅的用户状态有变更时，会触发 onUserStatusChanged 回调。
     * @param accountIds 要订阅的用户 ID 列表。
     */
    subscribeUserStatusActive(accountIds: string[]): Promise<Array<string> | undefined>;
    /**
     * 注册用户状态订阅相关监听。
     */
    private _onUserStatusChanged;
}
