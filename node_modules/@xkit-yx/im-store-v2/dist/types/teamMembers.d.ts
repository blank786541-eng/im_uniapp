import RootStore from '.';
import { NIM } from 'nim-web-sdk-ng/dist/esm/nim';
import { V2NIMTeamMember, V2NIMTeamMemberListResult, V2NIMTeamMemberQueryOption, V2NIMTeamType, V2NIMUpdateSelfMemberInfoParams } from 'nim-web-sdk-ng/dist/esm/nim/src/V2NIMTeamService';
import * as storeUtils from './utils';
/**Mobx 可观察对象，负责管理群组成员的子 store*/
export declare class TeamMemberStore {
    private rootStore;
    private nim;
    teamMembers: Map<string, Map<string, V2NIMTeamMember>>;
    logger: typeof storeUtils.logger | null;
    constructor(rootStore: RootStore, nim: NIM);
    resetState(): void;
    /**
     * 销毁TeamMemberStore，会取消相关事件监听
     */
    destroy(): void;
    /**
     * 拉人入群
     * @param options
     * options.teamId - 群id <br>
     * options.type - 群类型, 默认高级群 <br>
     * options.accounts - 要拉进群的成员的帐号列表 <br>
     * options.ps - 邀请附言 <br>
     */
    addTeamMemberActive(options: {
        teamId: string;
        type?: V2NIMTeamType;
        accounts: string[];
        ps?: string;
    }): Promise<void>;
    /**
     * 踢人出群
     * @param options
     * options.teamId - 群id <br>
     * options.type - 群类型, 默认高级群 <br>
     * options.accounts - 要拉进群的成员的帐号列表 <br>
     */
    removeTeamMemberActive(options: {
        teamId: string;
        type?: V2NIMTeamType;
        accounts: string[];
    }): Promise<void>;
    /**
     * 获取群成员
     * @param options
     * options.teamId - 群id <br>
     * options.queryOption - 查询选项 <br>
     * options.type - 群类型, 默认高级群 <br>
     */
    getTeamMemberActive(options: {
        teamId: string;
        queryOption: V2NIMTeamMemberQueryOption;
        type?: V2NIMTeamType;
    }): Promise<V2NIMTeamMemberListResult>;
    /**
     * 更新我在群中的信息
     * @param options
     * options.teamId - 群id <br>
     * options.type - 群类型, 默认高级群 <br>
     * options.memberInfo - 更新的信息 <br>
     */
    updateMyMemberInfoActive(options: {
        teamId: string;
        type?: V2NIMTeamType;
        memberInfo: V2NIMUpdateSelfMemberInfoParams;
    }): Promise<void>;
    /**
     * 内存中设置群成员，会覆盖原有的成员
     * @param teamId - 群id
     * @param members - 群成员
     */
    setTeamMembers(teamId: string, members: V2NIMTeamMember[]): void;
    /**
     * 内存中添加群成员
     * @param teamId - 群id
     * @param members - 群成员
     */
    addTeamMember(teamId: string, members: V2NIMTeamMember[]): void;
    /**
     * 内存中移除群成员
     * @param teamId - 群id
     * @param accounts - 群成员数组
     */
    removeTeamMember(teamId: string, accounts?: string[]): void;
    /**
     * 内存中更新群成员处理函数
     * @param teamId - 群id
     * @param members - 群成员
     */
    updateTeamMember(teamId: string, members: Partial<V2NIMTeamMember>[]): void;
    /**
     * 从内存中获取群成员信息
     * @param teamId - 群id
     * @param accounts - 群成员数组
     */
    getTeamMember(teamId: string, accounts?: string[]): V2NIMTeamMember[];
}
