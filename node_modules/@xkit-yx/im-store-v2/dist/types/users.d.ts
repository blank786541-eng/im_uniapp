import { NIM } from 'nim-web-sdk-ng/dist/esm/nim';
import RootStore from '.';
import { V2NIMUser, V2NIMUserUpdateParams } from 'nim-web-sdk-ng/dist/esm/nim/src/V2NIMUserService';
import { MyUserServerExt } from './types';
import * as storeUtils from './utils';
/**Mobx 可观察对象，负责管理用户信息（包含陌生人）的子 store */
export declare class UserStore {
    private rootStore;
    private nim;
    users: Map<string, V2NIMUser>;
    myUserInfo: V2NIMUser;
    logger: typeof storeUtils.logger | null;
    private _getUserInfo;
    constructor(rootStore: RootStore, nim: NIM);
    resetState(): void;
    /**
     * 销毁UserStore，会取消相关事件监听
     */
    destroy(): void;
    /**
     * 内存中增加users
     * @param users - users数组
     */
    addUsers(users: V2NIMUser[]): void;
    /**
     * 内存中删除users
     * @param users - users数组
     */
    removeUsers(accounts: string[]): void;
    /**
     * 获取我自己的 serverExtension 字段
     */
    getMyUserServerExt(): MyUserServerExt;
    /**
     * 更新自己的用户资料
     * @param updateParams
     * updateParams.nick - 昵称 <br>
     * updateParams.avatar - 头像 <br>
     * updateParams.sign - 签名 <br>
     * updateParams.gender - 性别 <br>
     * updateParams.email - 邮箱 <br>
     * updateParams.birth - 生日 <br>
     * updateParams.tel - 手机号 <br>
     * updateParams.serverExtension - 扩展字段 <br>
     *
     * @param fileObj - 头像文件对象、或者在小程序中，文件路径
     */
    updateSelfUserProfileActive(updateParams: V2NIMUserUpdateParams, fileObj?: File | string): Promise<void>;
    /**
     * 获取用户最新信息（如果内存中存在，就不去服务器取最新的了）
     * @param accountIds - 账号id数组
     */
    getUserActive(accountId: string): Promise<V2NIMUser>;
    /**
     * 获取用户最新信息
     * @param accountIds - 账号id数组
     */
    getUserForceActive(accountId: string): Promise<V2NIMUser>;
    /**
     * 获取用户最新信息（始终从服务器取最新的，用于点开用户头像时）
     * @param accountIds - 账号id数组
     */
    getUserListFromCloudActive(accountIds: string[]): Promise<V2NIMUser[]>;
    getMyUserInfoActive(): Promise<V2NIMUser>;
    private _getUserInfos;
    private _onUserProfileChanged;
}
