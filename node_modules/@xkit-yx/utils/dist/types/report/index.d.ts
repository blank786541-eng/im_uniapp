export * from './event';
import { Event } from './event';
declare type AppInfo = {
    packageId: string;
    appName: string;
    appVer: string;
};
declare global {
    interface Window {
        __XKitReporter__?: AppInfo;
    }
}
interface XKitReporterOptions {
    /** im 版本 */
    imVersion: string;
    /** rtc 版本 */
    nertcVersion: string;
    /** 设备id */
    deviceId: string;
}
interface Common {
    /** im 版本 */
    imVersion: string;
    /** rtc 版本 */
    nertcVersion: string;
    /** 包名 */
    packageId: string;
    /** 应用版本 */
    appName: string;
    /** 应用版本 */
    appVer: string;
    /** 浏览器 userAgent 信息 */
    userAgent: string;
    /** 设备id */
    deviceId: string;
    /** 型号 */
    model: string;
    /** osVer */
    osVer: string;
    /** 制造商 */
    manufacturer: string;
    /** 平台 */
    platform: string;
}
declare class XKitReporter {
    static instance?: XKitReporter;
    common: Common;
    private _eventsCache;
    private _logger;
    private _queueTimer?;
    private _noReport;
    private _configMap;
    private _retryCount;
    constructor(options: XKitReporterOptions);
    getConfig(appKey: string): Promise<void>;
    setNoReport(noReport: boolean): void;
    reportEvent(event: Event, options?: {
        immediate?: boolean;
    }): void;
    private _evictEvent;
    private _scheduleReportEventsTask;
    private _determineMaxRetry;
    private _reportEventsToServer;
    static setAppInfo(info: AppInfo): void;
    static getInstance(options?: XKitReporterOptions): XKitReporter;
}
export default XKitReporter;
