import EventEmitter from 'eventemitter3';
export interface EventMap {
    visibleChange: {
        visible: boolean;
        target: Element;
    };
}
/**
 * 判断元素是否可见
 * 融合了 IntersectionObserver 与 visibilityChange 事件
 */
declare class VisibilityObserver extends EventEmitter<EventMap> {
    intersectionObserver: IntersectionObserver;
    visibilityState: DocumentVisibilityState;
    entries: IntersectionObserverEntry[];
    constructor(options: IntersectionObserverInit);
    observe(target: HTMLElement): void;
    unobserve(target: HTMLElement): void;
    destroy(): void;
    private _intersectionObserverHandler;
    private _visibilitychange;
    private _trigger;
}
export default VisibilityObserver;
