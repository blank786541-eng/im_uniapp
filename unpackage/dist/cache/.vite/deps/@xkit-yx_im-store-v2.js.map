{
  "version": 3,
  "sources": ["../../../../../node_modules/@xkit-yx/im-store-v2/dist/index.esm.js"],
  "sourcesContent": ["import { makeAutoObservable } from 'mobx';\nimport { logDebug, EventTracking } from '@xkit-yx/utils';\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\n/**Mobx 可观察对象，负责连接的子 store */\r\nvar ConnectStore = /** @class */ (function () {\r\n    function ConnectStore(rootStore, nim, localOptions) {\r\n        this.rootStore = rootStore;\r\n        this.nim = nim;\r\n        this.localOptions = localOptions;\r\n        this.connectStatus = 3;\r\n        this.loginStatus = 0;\r\n        this.logger = null;\r\n        makeAutoObservable(this);\r\n        this._onLoginStatus = this._onLoginStatus.bind(this);\r\n        this._onLoginFailed = this._onLoginFailed.bind(this);\r\n        this._onKickedOffline = this._onKickedOffline.bind(this);\r\n        this._onLoginClientChanged = this._onLoginClientChanged.bind(this);\r\n        this._onConnectStatus = this._onConnectStatus.bind(this);\r\n        this._onDisconnected = this._onDisconnected.bind(this);\r\n        this._onConnectFailed = this._onConnectFailed.bind(this);\r\n        this._onDataSync = this._onDataSync.bind(this);\r\n        this.logger = rootStore.logger;\r\n        /** 登录状态变化 */\r\n        nim.V2NIMLoginService.on('onLoginStatus', this._onLoginStatus);\r\n        /** 登录失败 */\r\n        nim.V2NIMLoginService.on('onLoginFailed', this._onLoginFailed);\r\n        /** 被踢下线 */\r\n        nim.V2NIMLoginService.on('onKickedOffline', this._onKickedOffline);\r\n        /** 多端登录回调 */\r\n        nim.V2NIMLoginService.on('onLoginClientChanged', this._onLoginClientChanged);\r\n        /** 连接状态变化 */\r\n        nim.V2NIMLoginService.on('onConnectStatus', this._onConnectStatus);\r\n        /** 登录连接断开 */\r\n        nim.V2NIMLoginService.on('onDisconnected', this._onDisconnected);\r\n        /** 登录连接失败 */\r\n        nim.V2NIMLoginService.on('onConnectFailed', this._onConnectFailed);\r\n        /** 数据同步 */\r\n        nim.V2NIMLoginService.on('onDataSync', this._onDataSync);\r\n    }\r\n    /** 销毁 ConnectStore，并取消相关的监听 */\r\n    ConnectStore.prototype.destroy = function () {\r\n        this.nim.V2NIMLoginService.off('onLoginStatus', this._onLoginStatus);\r\n        this.nim.V2NIMLoginService.off('onLoginFailed', this._onLoginFailed);\r\n        this.nim.V2NIMLoginService.off('onKickedOffline', this._onKickedOffline);\r\n        this.nim.V2NIMLoginService.off('onLoginClientChanged', this._onLoginClientChanged);\r\n        this.nim.V2NIMLoginService.off('onConnectStatus', this._onConnectStatus);\r\n        this.nim.V2NIMLoginService.off('onDisconnected', this._onDisconnected);\r\n        this.nim.V2NIMLoginService.off('onConnectFailed', this._onConnectFailed);\r\n        this.nim.V2NIMLoginService.off('onDataSync', this._onDataSync);\r\n    };\r\n    ConnectStore.prototype._onLoginStatus = function (e) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onLoginStatus', e);\r\n        this.loginStatus = e;\r\n    };\r\n    ConnectStore.prototype._onLoginFailed = function (e) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onLoginFailed', e);\r\n    };\r\n    ConnectStore.prototype._onKickedOffline = function (e) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onKickedOffline', e);\r\n    };\r\n    ConnectStore.prototype._onLoginClientChanged = function (e) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onLoginClientChanged', e);\r\n    };\r\n    ConnectStore.prototype._onConnectStatus = function (e) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onConnectStatus', e);\r\n        this.connectStatus = e;\r\n        // SDK 暂不支持自定义推送相关\r\n        // if (e === V2NIMConnectStatus.V2NIM_CONNECT_STATUS_CONNECTED) {\r\n        //   // 重连时需要重置其他人的登录状态\r\n        //   this.rootStore.eventStore.stateMap.clear()\r\n        // }\r\n        // 同步完成之前需先清理下上次的在线离线状态，避免断开网络 好友退出登录 联网查看好友状态不对。只有在线离线需要处理，因为其他的都会在断网重连后触发其他事件，就在线离线不会触发\r\n        // 注意这里必须同步前重置，否则会导致数据同步时的状态丢失\r\n        if (e === 1 /* V2NIMConst.V2NIMConnectStatus.V2NIM_CONNECT_STATUS_CONNECTED */) {\r\n            this.rootStore.subscriptionStore.resetState();\r\n        }\r\n    };\r\n    ConnectStore.prototype._onDisconnected = function (e) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onDisconnected', e);\r\n    };\r\n    ConnectStore.prototype._onConnectFailed = function (e) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onConnectFailed', e);\r\n    };\r\n    ConnectStore.prototype._onDataSync = function (type, V2NIMDataSyncState) {\r\n        var _a, _b, _c, _d;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onDataSync', type, V2NIMDataSyncState);\r\n        // 获取个人信息\r\n        this.rootStore.userStore.getMyUserInfoActive();\r\n        // 获取黑名单列表\r\n        this.rootStore.relationStore.getBlockListActive();\r\n        // 获取P2P免打扰列表\r\n        this.rootStore.relationStore.getP2PMuteListActive();\r\n        if ((_b = this.rootStore.sdkOptions) === null || _b === void 0 ? void 0 : _b.enableV2CloudConversation) {\r\n            // 获取云端会话列表\r\n            (_c = this.rootStore.conversationStore) === null || _c === void 0 ? void 0 : _c.getConversationListActive(0, this.localOptions.conversationLimit || 100);\r\n        }\r\n        else {\r\n            // 获取本地会话列表\r\n            (_d = this.rootStore.localConversationStore) === null || _d === void 0 ? void 0 : _d.getConversationListActive(0, this.localOptions.conversationLimit || 100);\r\n        }\r\n        // 获取群组\r\n        this.rootStore.teamStore.getJoinedTeamListActive();\r\n        // 获取好友列表\r\n        this.rootStore.friendStore.getFriendListActive();\r\n        // 获取好友申请，先拉一页100条\r\n        this.rootStore.friendStore.getAddApplicationListActive({\r\n            status: [],\r\n            offset: 0,\r\n            limit: 100,\r\n        });\r\n        // 获取群组申请，先拉一页100条\r\n        this.rootStore.teamStore.getTeamJoinActionInfoListActive({\r\n            offset: 0,\r\n            limit: 100,\r\n        });\r\n        // 获取 AI 机器人\r\n        if (this.localOptions.aiVisible) {\r\n            this.rootStore.aiUserStore.getAIUserListActive();\r\n        }\r\n    };\r\n    return ConnectStore;\r\n}());\n\n/**Mobx 可观察对象，负责管理好友信息的子 store */\r\nvar FriendStore = /** @class */ (function () {\r\n    function FriendStore(rootStore, nim) {\r\n        this.rootStore = rootStore;\r\n        this.nim = nim;\r\n        this.friends = new Map();\r\n        this.logger = null;\r\n        makeAutoObservable(this);\r\n        this._onFriendAdded = this._onFriendAdded.bind(this);\r\n        this._onFriendDeleted = this._onFriendDeleted.bind(this);\r\n        this._onFriendAddApplication = this._onFriendAddApplication.bind(this);\r\n        this._onFriendAddRejected = this._onFriendAddRejected.bind(this);\r\n        this._onFriendInfoChanged = this._onFriendInfoChanged.bind(this);\r\n        this.logger = rootStore.logger;\r\n        nim.V2NIMFriendService.on('onFriendAdded', this._onFriendAdded);\r\n        nim.V2NIMFriendService.on('onFriendDeleted', this._onFriendDeleted);\r\n        /** 申请添加好友的相关信息，其他端向本端发送好友申请,会触发该事件，多端登录情况下也会触发 */\r\n        nim.V2NIMFriendService.on('onFriendAddApplication', this._onFriendAddApplication);\r\n        /** 对端拒绝本端好友申请，本端会触发该事件 */\r\n        nim.V2NIMFriendService.on('onFriendAddRejected', this._onFriendAddRejected);\r\n        /** 好友信息更新回调，返回变更的好友信息，包括本端直接更新的好友信息和其他端同步更新的好友信息 */\r\n        nim.V2NIMFriendService.on('onFriendInfoChanged', this._onFriendInfoChanged);\r\n    }\r\n    FriendStore.prototype.resetState = function () {\r\n        this.friends.clear();\r\n    };\r\n    /**\r\n     * 销毁FriendStore，会取消好友事件监听\r\n     */\r\n    FriendStore.prototype.destroy = function () {\r\n        this.resetState();\r\n        this.nim.V2NIMFriendService.off('onFriendAdded', this._onFriendAdded);\r\n        this.nim.V2NIMFriendService.off('onFriendDeleted', this._onFriendDeleted);\r\n        this.nim.V2NIMFriendService.off('onFriendAddApplication', this._onFriendAddApplication);\r\n        this.nim.V2NIMFriendService.off('onFriendAddRejected', this._onFriendAddRejected);\r\n        this.nim.V2NIMFriendService.off('onFriendInfoChanged', this._onFriendInfoChanged);\r\n    };\r\n    /**\r\n     * 查询好友列表\r\n     */\r\n    FriendStore.prototype.getFriendListActive = function () {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var friends, error_1;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('getFriendListActive');\r\n                        return [4 /*yield*/, this.nim.V2NIMFriendService.getFriendList()];\r\n                    case 1:\r\n                        friends = _d.sent();\r\n                        this.addFriend(friends);\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('getFriendListActive success', friends);\r\n                        return [2 /*return*/, friends];\r\n                    case 2:\r\n                        error_1 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('getFriendListActive failed: ', error_1);\r\n                        throw error_1;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 根据Id 查询好友信息\r\n     */\r\n    FriendStore.prototype.getFriendByIdsActive = function (ids) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var friends, error_2;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('getFriendByIdsActive', ids);\r\n                        return [4 /*yield*/, this.nim.V2NIMFriendService.getFriendByIds(ids)];\r\n                    case 1:\r\n                        friends = _d.sent();\r\n                        this.addFriend(friends);\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('getFriendByIdsActive success', friends);\r\n                        return [2 /*return*/, friends];\r\n                    case 2:\r\n                        error_2 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('getFriendByIdsActive failed: ', error_2);\r\n                        throw error_2;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取申请添加好友列表通知\r\n     * @param options V2NIMFriendAddApplicationQueryOption\r\n     */\r\n    FriendStore.prototype.getAddApplicationListActive = function (options) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var res, error_3;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('getAddApplicationListActive');\r\n                        return [4 /*yield*/, this.nim.V2NIMFriendService.getAddApplicationList(options)];\r\n                    case 1:\r\n                        res = _d.sent();\r\n                        this.rootStore.sysMsgStore.addFriendApplyMsg(res.infos);\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('getAddApplicationListActive success', res);\r\n                        return [2 /*return*/, res];\r\n                    case 2:\r\n                        error_3 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('getAddApplicationListActive failed: ', error_3);\r\n                        throw error_3;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 添加好友申请\r\n     * @param accountId 账号\r\n     * @param params 添加好友的配置参数\r\n     */\r\n    FriendStore.prototype.addFriendActive = function (accountId, params) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_4;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('addFriendActive', accountId);\r\n                        return [4 /*yield*/, this.nim.V2NIMFriendService.addFriend(accountId, params)];\r\n                    case 1:\r\n                        _d.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('addFriendActive success', accountId, params);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_4 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('addFriendActive failed: ', accountId, params, error_4);\r\n                        throw error_4;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 接受好友申请\r\n     * @param application 申请添加好友的相关信息\r\n     */\r\n    FriendStore.prototype.acceptAddApplicationActive = function (application) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_5;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('acceptAddApplicationActive', application);\r\n                        return [4 /*yield*/, this.nim.V2NIMFriendService.acceptAddApplication(application)];\r\n                    case 1:\r\n                        _d.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('acceptAddApplicationActive success', application);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_5 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('acceptAddApplicationActive failed: ', application, error_5);\r\n                        throw error_5;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 拒绝好友申请\r\n     * @param application 申请添加好友的相关信息\r\n     * @param postscript 拒绝好友申请的附言\r\n     */\r\n    FriendStore.prototype.rejectAddApplicationActive = function (application, postscript) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_6;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('rejectAddApplicationActive', application, postscript);\r\n                        return [4 /*yield*/, this.nim.V2NIMFriendService.rejectAddApplication(application, postscript)\r\n                            // this.rootStore.sysMsgStore.updateFriendApplyMsg([\r\n                            //   {\r\n                            //     ...application,\r\n                            //     status:\r\n                            //       V2NIMConst.V2NIMFriendAddApplicationStatus\r\n                            //         .V2NIM_FRIEND_ADD_APPLICATION_STATUS_REJECTED,\r\n                            //     isRead: true,\r\n                            //   },\r\n                            // ])\r\n                        ];\r\n                    case 1:\r\n                        _d.sent();\r\n                        // this.rootStore.sysMsgStore.updateFriendApplyMsg([\r\n                        //   {\r\n                        //     ...application,\r\n                        //     status:\r\n                        //       V2NIMConst.V2NIMFriendAddApplicationStatus\r\n                        //         .V2NIM_FRIEND_ADD_APPLICATION_STATUS_REJECTED,\r\n                        //     isRead: true,\r\n                        //   },\r\n                        // ])\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('rejectFriendApplyActive success', application, postscript);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_6 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('rejectFriendApplyActive failed: ', application, postscript, error_6);\r\n                        throw error_6;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 删除好友\r\n     * @param accountId 账号\r\n     */\r\n    FriendStore.prototype.deleteFriendActive = function (accountId) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_7;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('deleteFriendActive', accountId);\r\n                        return [4 /*yield*/, this.nim.V2NIMFriendService.deleteFriend(accountId, {\r\n                                deleteAlias: true,\r\n                            })];\r\n                    case 1:\r\n                        _d.sent();\r\n                        this.removeFriend([accountId]);\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('deleteFriendActive success', accountId);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_7 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('deleteFriendActive failed: ', accountId, error_7);\r\n                        throw error_7;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 更新好友信息\r\n     * @param accountId 账号\r\n     * @param params 设置好友信息的配置参数。\r\n     */\r\n    FriendStore.prototype.setFriendInfoActive = function (accountId, params) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_8;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('setFriendInfoActive', accountId, params);\r\n                        return [4 /*yield*/, this.nim.V2NIMFriendService.setFriendInfo(accountId, params)];\r\n                    case 1:\r\n                        _d.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('setFriendInfoActive success', accountId, params);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_8 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('setFriendInfoActive failed: ', accountId, params, error_8);\r\n                        throw error_8;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 内存中增加好友\r\n     * @param data - 好友数组\r\n     */\r\n    FriendStore.prototype.addFriend = function (data) {\r\n        var _this = this;\r\n        data\r\n            .filter(function (item) { return !!item.accountId; })\r\n            .forEach(function (item) {\r\n            var oldFriend = _this.friends.get(item.accountId);\r\n            if (!oldFriend) {\r\n                _this.friends.set(item.accountId, __assign(__assign({}, item), item.userProfile));\r\n                // 这里不用再去获取用户信息，sdk返回的好友信息的userProfile 已经包含用户信息了 此时再去拉取用户信息会有性能问题\r\n                // this.rootStore.userStore.getUserActive(item.accountId)\r\n            }\r\n            else {\r\n                _this.friends.set(item.accountId, __assign(__assign(__assign({}, oldFriend), item), item.userProfile));\r\n            }\r\n        });\r\n        this.rootStore.userStore.addUsers(data.map(function (item) {\r\n            return __assign(__assign({}, item), item.userProfile);\r\n        }));\r\n    };\r\n    /**\r\n     * 内存中删除好友\r\n     * @param data - 好友数组\r\n     */\r\n    FriendStore.prototype.removeFriend = function (accounts) {\r\n        var _this = this;\r\n        accounts.forEach(function (item) {\r\n            _this.friends.delete(item);\r\n        });\r\n    };\r\n    /**\r\n     * 监听添加好友\r\n     */\r\n    FriendStore.prototype._onFriendAdded = function (friend) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onFriendAdded', friend);\r\n        this.addFriend([friend]);\r\n        // 如果存在系统消息，则更新系统消息，这里只能自己是被申请者\r\n        this.rootStore.sysMsgStore.updateFriendApplyMsg([\r\n            {\r\n                operatorAccountId: this.rootStore.userStore.myUserInfo.accountId,\r\n                applicantAccountId: friend.accountId,\r\n                recipientAccountId: this.rootStore.userStore.myUserInfo.accountId,\r\n                timestamp: Date.now(),\r\n                status: 1 /* V2NIMConst.V2NIMFriendAddApplicationStatus\r\n                            .V2NIM_FRIEND_ADD_APPLICATION_STATUS_AGREED */,\r\n                isRead: true,\r\n                read: true,\r\n            },\r\n        ]);\r\n    };\r\n    /**\r\n     * 监听删除好友\r\n     */\r\n    FriendStore.prototype._onFriendDeleted = function (accountId) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onFriendDeleted', accountId);\r\n        if (accountId) {\r\n            this.removeFriend([accountId]);\r\n        }\r\n    };\r\n    /**\r\n     * 申请添加好友的相关信息，其他端向本端发送好友申请,会触发该事件\r\n     */\r\n    FriendStore.prototype._onFriendAddApplication = function (application) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onFriendAddApplication', application);\r\n        // 多端登录时，本端发送好友申请，多端登录另一端会收到该事件，此时需要过滤，多端登录另一端不需要提醒\r\n        if (application.applicantAccountId !==\r\n            this.rootStore.userStore.myUserInfo.accountId) {\r\n            this.rootStore.sysMsgStore.addFriendApplyMsg([application]);\r\n        }\r\n    };\r\n    /**\r\n     * 对端拒绝本端好友申请，本端会触发该事件\r\n     */\r\n    FriendStore.prototype._onFriendAddRejected = function (rejection) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onFriendAddRejected', rejection);\r\n        // 如果存在系统消息，则更新系统消息\r\n        this.rootStore.sysMsgStore.addFriendApplyMsg([\r\n            __assign(__assign({}, rejection), { isRead: true }),\r\n        ]);\r\n    };\r\n    /**\r\n     * 好友信息更新回调，返回变更的好友信息，包括本端直接更新的好友信息和其他端同步更新的好友信息\r\n     */\r\n    FriendStore.prototype._onFriendInfoChanged = function (friend) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onFriendInfoChanged', friend);\r\n        this.addFriend([friend]);\r\n    };\r\n    return FriendStore;\r\n}());\n\nvar AT_ALL_ACCOUNT = 'ait_all';\r\nvar BE_MENTIONED = 'beMentioned';\r\nvar AT_ALL_ACCOUNT_TOSDK = '#%@all@%#';\r\nvar HISTORY_LIMIT = 20;\r\nvar PIN_CONVERSATION_LIMIT = 20;\r\nvar RECALL_TIME = 2 * 60 * 1000;\r\nvar AI_MESSAGE_LIMIT = 30;\n\nvar constant = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    AT_ALL_ACCOUNT: AT_ALL_ACCOUNT,\n    BE_MENTIONED: BE_MENTIONED,\n    AT_ALL_ACCOUNT_TOSDK: AT_ALL_ACCOUNT_TOSDK,\n    HISTORY_LIMIT: HISTORY_LIMIT,\n    PIN_CONVERSATION_LIMIT: PIN_CONVERSATION_LIMIT,\n    RECALL_TIME: RECALL_TIME,\n    AI_MESSAGE_LIMIT: AI_MESSAGE_LIMIT\n});\n\nvar name$1 = \"@xkit-yx/im-store-v2\";\nvar version$1 = \"0.8.5\";\nvar description$1 = \"云信即时通讯 store V2 版本\";\nvar license$1 = \"MIT\";\nvar main$1 = \"dist/index.cjs.js\";\nvar module = \"dist/index.esm.js\";\nvar typings = \"dist/types/index.d.ts\";\nvar publishConfig = {\n\taccess: \"public\"\n};\nvar scripts$1 = {\n\tdev: \"rollup -c --environment DEV\",\n\tbuild: \"rollup -c --environment PROD\"\n};\nvar files$1 = [\n\t\"dist\"\n];\nvar author$1 = \"\";\nvar devDependencies$1 = {\n\t\"@rollup/plugin-commonjs\": \"^17.1.0\",\n\t\"@rollup/plugin-json\": \"^4.1.0\",\n\t\"@rollup/plugin-node-resolve\": \"^11.2.0\",\n\tdel: \"^6.0.0\",\n\tgulp: \"^4.0.2\",\n\t\"gulp-less\": \"^5.0.0\",\n\t\"gulp-rename\": \"^2.0.0\",\n\t\"gulp-typescript\": \"^6.0.0-alpha.1\",\n\tless: \"^4.1.1\",\n\t\"less-plugin-npm-import\": \"^2.1.0\",\n\t\"nim-web-sdk-ng\": \"10.9.30\",\n\tpostcss: \"^8.3.5\",\n\t\"postcss-nested\": \"^5.0.5\",\n\trollup: \"^2.39.0\",\n\t\"rollup-plugin-postcss\": \"^4.0.0\",\n\t\"rollup-plugin-terser\": \"^7.0.2\",\n\t\"rollup-plugin-typescript2\": \"^0.31.0\",\n\ttslib: \"^2.5.0\",\n\ttypescript: \"^4.6.4\"\n};\nvar peerDependencies = {\n\t\"nim-web-sdk-ng\": \"^10.x\"\n};\nvar dependencies = {\n\t\"@xkit-yx/utils\": \"^0.7.2\",\n\tmobx: \"^6.6.1\"\n};\nvar packageJson = {\n\tname: name$1,\n\tversion: version$1,\n\tdescription: description$1,\n\tlicense: license$1,\n\tmain: main$1,\n\tmodule: module,\n\ttypings: typings,\n\tpublishConfig: publishConfig,\n\tscripts: scripts$1,\n\tfiles: files$1,\n\tauthor: author$1,\n\tdevDependencies: devDependencies$1,\n\tpeerDependencies: peerDependencies,\n\tdependencies: dependencies\n};\n\nvar logger = logDebug({\r\n    level: 'debug',\r\n    version: packageJson.version,\r\n    appName: packageJson.name,\r\n    needStringify: false,\r\n});\r\nvar frequencyControl = function (fn, delay, limit) {\r\n    var promiseQueue = [];\r\n    var requesting = false;\r\n    var timer;\r\n    return function (args) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var p = promiseQueue.find(function (item) { return item.args === args; });\r\n            if (p) {\r\n                p.queue.push({ resolve: resolve, reject: reject });\r\n            }\r\n            else {\r\n                promiseQueue.push({ args: args, queue: [{ resolve: resolve, reject: reject }] });\r\n            }\r\n            if (requesting) {\r\n                return;\r\n            }\r\n            var handler = function (pq) {\r\n                if (!pq.length) {\r\n                    return;\r\n                }\r\n                requesting = true;\r\n                fn.call(\r\n                // @ts-ignore\r\n                _this, pq.map(function (item) { return item.args; }))\r\n                    .then(function (res) {\r\n                    var _loop_1 = function () {\r\n                        var p_1 = pq.shift();\r\n                        if (p_1) {\r\n                            var _1 = res.find(function (j) { return j.accountId === p_1.args; });\r\n                            p_1.queue.forEach(function (j) { return j.resolve(_1); });\r\n                        }\r\n                    };\r\n                    while (pq.length) {\r\n                        _loop_1();\r\n                    }\r\n                })\r\n                    .catch(function (err) {\r\n                    while (pq.length) {\r\n                        var p_2 = pq.shift();\r\n                        if (p_2) {\r\n                            p_2.queue.forEach(function (item) { return item.reject(err); });\r\n                        }\r\n                    }\r\n                })\r\n                    .finally(function () {\r\n                    requesting = false;\r\n                    if (promiseQueue.length) {\r\n                        handler(promiseQueue.splice(0, limit));\r\n                    }\r\n                });\r\n            };\r\n            // 如果参数数量到达 limit，立即执行\r\n            if (promiseQueue.length >= limit) {\r\n                clearTimeout(timer);\r\n                handler(promiseQueue.splice(0, limit));\r\n            }\r\n            else {\r\n                clearTimeout(timer);\r\n                timer = setTimeout(function () {\r\n                    handler(promiseQueue.splice(0, limit));\r\n                }, delay);\r\n            }\r\n        });\r\n    };\r\n};\r\n/**\r\n * 过滤消息，处理了撤回消息的过滤\r\n */\r\nvar getFilterMsgs = function (msgs, filterFn) {\r\n    var filterMsgs = __spreadArray([], __read(msgs), false);\r\n    if (filterFn) {\r\n        filterMsgs = filterMsgs.filter(filterFn);\r\n    }\r\n    var res = [];\r\n    var filterRecallMsg = [];\r\n    var startWithoutRecallMsg;\r\n    filterMsgs.forEach(function (item) {\r\n        // 找到第一条不是撤回消息的消息，记录时间\r\n        if (!(item.messageType ===\r\n            100 /* V2NIMConst.V2NIMMessageType.V2NIM_MESSAGE_TYPE_CUSTOM */ &&\r\n            ['beReCallMsg', 'reCallMsg'].includes(item.recallType || '')) &&\r\n            startWithoutRecallMsg === void 0) {\r\n            startWithoutRecallMsg = item.createTime;\r\n        }\r\n        // 不在上述时间范围内的撤回消息过滤掉不显示\r\n        if (item.messageType ===\r\n            100 /* V2NIMConst.V2NIMMessageType.V2NIM_MESSAGE_TYPE_CUSTOM */ &&\r\n            ['beReCallMsg', 'reCallMsg'].includes(item.recallType || '')) {\r\n            if (startWithoutRecallMsg !== void 0 &&\r\n                item.createTime >= startWithoutRecallMsg) {\r\n                res.push(item);\r\n            }\r\n            else {\r\n                filterRecallMsg.push(item);\r\n            }\r\n        }\r\n        else {\r\n            res.push(item);\r\n        }\r\n    });\r\n    // 如果当前只有撤回消息，则需要显示\r\n    if (!res.length && filterRecallMsg.length) {\r\n        return filterRecallMsg;\r\n    }\r\n    return res;\r\n};\r\nvar batchRequest = function (fn, max) {\r\n    return function (params) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var batches, i, batches_1, batches_1_1, batch, e_1_1;\r\n            var e_1, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!!params.length) return [3 /*break*/, 2];\r\n                        // @ts-ignore\r\n                        return [4 /*yield*/, fn.apply(this, [params].concat(args))];\r\n                    case 1:\r\n                        // @ts-ignore\r\n                        _b.sent();\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        batches = [];\r\n                        for (i = 0; i < params.length; i += max) {\r\n                            batches.push(params.slice(i, i + max));\r\n                        }\r\n                        _b.label = 3;\r\n                    case 3:\r\n                        _b.trys.push([3, 8, 9, 10]);\r\n                        batches_1 = __values(batches), batches_1_1 = batches_1.next();\r\n                        _b.label = 4;\r\n                    case 4:\r\n                        if (!!batches_1_1.done) return [3 /*break*/, 7];\r\n                        batch = batches_1_1.value;\r\n                        // @ts-ignore\r\n                        return [4 /*yield*/, fn.apply(this, [batch].concat(args))];\r\n                    case 5:\r\n                        // @ts-ignore\r\n                        _b.sent();\r\n                        _b.label = 6;\r\n                    case 6:\r\n                        batches_1_1 = batches_1.next();\r\n                        return [3 /*break*/, 4];\r\n                    case 7: return [3 /*break*/, 10];\r\n                    case 8:\r\n                        e_1_1 = _b.sent();\r\n                        e_1 = { error: e_1_1 };\r\n                        return [3 /*break*/, 10];\r\n                    case 9:\r\n                        try {\r\n                            if (batches_1_1 && !batches_1_1.done && (_a = batches_1.return)) _a.call(batches_1);\r\n                        }\r\n                        finally { if (e_1) throw e_1.error; }\r\n                        return [7 /*endfinally*/];\r\n                    case 10: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n};\r\nfunction detectLanguage() {\r\n    var _a, _b;\r\n    // 通过全局变量检测\r\n    if (typeof window !== 'undefined') {\r\n        //@ts-ignore\r\n        if (window === null || window === void 0 ? void 0 : window.__VUE__) {\r\n            //@ts-ignore\r\n            return ((_b = (_a = window === null || window === void 0 ? void 0 : window.Vue) === null || _a === void 0 ? void 0 : _a.version) === null || _b === void 0 ? void 0 : _b.startsWith('2')) ? 'Vue2' : 'Vue3';\r\n        }\r\n        // @ts-ignore\r\n        if (window === null || window === void 0 ? void 0 : window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {\r\n            return 'React';\r\n        }\r\n    }\r\n    return 'unknown';\r\n}\r\nfunction detectContainer(platform) {\r\n    var _a, _b;\r\n    if (platform === 'Web') {\r\n        return 'WEB';\r\n    }\r\n    if (platform === 'H5') {\r\n        return 'H5';\r\n    }\r\n    if (platform === 'UniApp') {\r\n        //@ts-ignore\r\n        return (_b = (_a = uni === null || uni === void 0 ? void 0 : uni.getSystemInfoSync()) === null || _a === void 0 ? void 0 : _a.uniPlatform) === null || _b === void 0 ? void 0 : _b.toUpperCase();\r\n    }\r\n}\n\nvar utils = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    logDebug: logDebug,\n    logger: logger,\n    frequencyControl: frequencyControl,\n    getFilterMsgs: getFilterMsgs,\n    batchRequest: batchRequest,\n    detectLanguage: detectLanguage,\n    detectContainer: detectContainer\n});\n\nvar Queue = /** @class */ (function () {\r\n    /**\r\n     * @param itemLength 队列长度\r\n     * @param flow 队列方向\r\n     */\r\n    function Queue(itemLength, flow) {\r\n        if (itemLength === void 0) { itemLength = 20; }\r\n        if (flow === void 0) { flow = 'rightToLeft'; }\r\n        this.itemLength = itemLength;\r\n        this.flow = flow;\r\n        this.queue = [];\r\n        makeAutoObservable(this);\r\n    }\r\n    Queue.prototype.push = function (item, noLimit) {\r\n        this.queue.push(item);\r\n        this._handle(noLimit);\r\n    };\r\n    Queue.prototype.unshift = function (item, noLimit) {\r\n        this.queue.unshift(item);\r\n        this._handle(noLimit);\r\n    };\r\n    Queue.prototype.pop = function () {\r\n        return this.queue.pop();\r\n    };\r\n    Queue.prototype.shift = function () {\r\n        return this.queue.shift();\r\n    };\r\n    Queue.prototype.resetLimitState = function () {\r\n        this._handle();\r\n    };\r\n    Queue.prototype.clear = function () {\r\n        this.queue.length = 0;\r\n    };\r\n    Queue.prototype.get = function () {\r\n        return this.queue;\r\n    };\r\n    Queue.prototype.set = function (value, noLimit) {\r\n        this.queue = value;\r\n        this._handle(noLimit);\r\n    };\r\n    Object.defineProperty(Queue.prototype, \"length\", {\r\n        get: function () {\r\n            return this.queue.length;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Queue.prototype._handle = function (noLimit) {\r\n        if (noLimit === void 0) { noLimit = false; }\r\n        if (this.queue.length > this.itemLength && !noLimit) {\r\n            if (this.flow === 'leftToRight') {\r\n                this.queue.splice(this.itemLength, this.queue.length - this.itemLength);\r\n            }\r\n            else {\r\n                this.queue.splice(0, this.queue.length - this.itemLength);\r\n            }\r\n        }\r\n    };\r\n    return Queue;\r\n}());\r\nvar QueueMap = /** @class */ (function () {\r\n    function QueueMap(itemLength, flow) {\r\n        if (itemLength === void 0) { itemLength = 20; }\r\n        if (flow === void 0) { flow = 'rightToLeft'; }\r\n        this.itemLength = itemLength;\r\n        this.flow = flow;\r\n        this.map = new Map();\r\n        makeAutoObservable(this);\r\n    }\r\n    QueueMap.prototype.get = function (key) {\r\n        var _a;\r\n        return (_a = this.map.get(key)) === null || _a === void 0 ? void 0 : _a.get();\r\n    };\r\n    QueueMap.prototype.set = function (key, value, noLimit) {\r\n        var queue = new Queue(this.itemLength, this.flow);\r\n        queue.set(value, noLimit);\r\n        this.map.set(key, queue);\r\n    };\r\n    QueueMap.prototype.delete = function (key) {\r\n        var _a;\r\n        (_a = this.map.get(key)) === null || _a === void 0 ? void 0 : _a.clear();\r\n        return this.map.delete(key);\r\n    };\r\n    QueueMap.prototype.resetLimitState = function () {\r\n        this.map.forEach(function (item) { return item.resetLimitState(); });\r\n    };\r\n    QueueMap.prototype.clear = function () {\r\n        this.map.forEach(function (item) { return item.clear(); });\r\n        this.map.clear();\r\n    };\r\n    QueueMap.prototype.values = function () {\r\n        return __spreadArray([], __read(this.map.values()), false).map(function (item) { return item.get(); }).flat();\r\n    };\r\n    return QueueMap;\r\n}());\n\nvar PinMsgsMap = /** @class */ (function () {\r\n    function PinMsgsMap(limit) {\r\n        if (limit === void 0) { limit = PIN_CONVERSATION_LIMIT; }\r\n        this.map = new Map();\r\n        this.pinConversationLimit = PIN_CONVERSATION_LIMIT;\r\n        this.pinConversationLimit = limit;\r\n        makeAutoObservable(this);\r\n    }\r\n    PinMsgsMap.prototype.set = function (conversationId, pinInfos) {\r\n        var map = this.map.get(conversationId) || new Map();\r\n        if (this.map.has(conversationId)) {\r\n            // 更新 LRU 队列\r\n            this.map.delete(conversationId);\r\n        }\r\n        pinInfos.forEach(function (pinInfo) {\r\n            if (pinInfo.pinState !== 0) {\r\n                map.set(pinInfo.messageRefer.messageClientId, pinInfo);\r\n            }\r\n            else {\r\n                // map 里面不维护 pinState 为 0 的 pin\r\n                map.delete(pinInfo.messageRefer.messageClientId);\r\n            }\r\n        });\r\n        this.map.set(conversationId, map);\r\n        if (this.map.size > this.pinConversationLimit) {\r\n            var val = this.map.keys().next().value;\r\n            // 最近最少用的出队\r\n            if (val)\r\n                this.map.delete(val);\r\n        }\r\n    };\r\n    PinMsgsMap.prototype.get = function (conversationId) {\r\n        var map = this.map.get(conversationId);\r\n        if (map) {\r\n            // 更新 LRU 队列\r\n            this.map.delete(conversationId);\r\n            this.map.set(conversationId, map);\r\n            return map;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    PinMsgsMap.prototype.delete = function (conversationId, messageClientIds) {\r\n        var curMap = this.map.get(conversationId);\r\n        if (curMap) {\r\n            // 更新 LRU 队列\r\n            this.map.delete(conversationId);\r\n            messageClientIds.forEach(function (messageClientId) {\r\n                curMap.delete(messageClientId);\r\n            });\r\n            this.map.set(conversationId, curMap);\r\n        }\r\n    };\r\n    PinMsgsMap.prototype.clear = function () {\r\n        if (this.map) {\r\n            this.map.forEach(function (map) {\r\n                map.clear();\r\n            });\r\n            this.map.clear();\r\n        }\r\n    };\r\n    return PinMsgsMap;\r\n}());\r\nvar PinMsgsMap$1 = PinMsgsMap;\n\n/**Mobx 可观察对象，负责管理会话消息的子 store */\r\nvar MsgStore = /** @class */ (function () {\r\n    function MsgStore(rootStore, nim, localOptions) {\r\n        this.rootStore = rootStore;\r\n        this.nim = nim;\r\n        this.localOptions = localOptions;\r\n        this.msgs = new QueueMap(HISTORY_LIMIT, 'rightToLeft');\r\n        /** 回复消息 */\r\n        this.replyMsgs = new Map();\r\n        this.logger = null;\r\n        /** pin 消息 */\r\n        this.pinMsgs = new PinMsgsMap$1();\r\n        /** 收藏消息 */\r\n        this.collectionMsgs = new Map();\r\n        makeAutoObservable(this);\r\n        this.logger = rootStore.logger;\r\n        this._onReceiveMessages = this._onReceiveMessages.bind(this);\r\n        this._onClearHistoryNotifications =\r\n            this._onClearHistoryNotifications.bind(this);\r\n        this._onMessageDeletedNotifications =\r\n            this._onMessageDeletedNotifications.bind(this);\r\n        this._onMessagePinNotification = this._onMessagePinNotification.bind(this);\r\n        this._onMessageQuickCommentNotification =\r\n            this._onMessageQuickCommentNotification.bind(this);\r\n        this._onMessageRevokeNotifications =\r\n            this._onMessageRevokeNotifications.bind(this);\r\n        this._onReceiveP2PMessageReadReceipts =\r\n            this._onReceiveP2PMessageReadReceipts.bind(this);\r\n        this._onReceiveTeamMessageReadReceipts =\r\n            this._onReceiveTeamMessageReadReceipts.bind(this);\r\n        this._onReceiveMessagesModified = this._onReceiveMessagesModified.bind(this);\r\n        this.getTeamMsgReadsActive = batchRequest(this.getTeamMsgReadsActive, 50);\r\n        /** 收到消息 */\r\n        nim.V2NIMMessageService.on('onReceiveMessages', this._onReceiveMessages);\r\n        /** 清空会话历史消息通知 */\r\n        nim.V2NIMMessageService.on('onClearHistoryNotifications', this._onClearHistoryNotifications);\r\n        /** 消息被删除通知 */\r\n        nim.V2NIMMessageService.on('onMessageDeletedNotifications', this._onMessageDeletedNotifications);\r\n        /** 收到消息 pin 状态更新 */\r\n        nim.V2NIMMessageService.on('onMessagePinNotification', this._onMessagePinNotification);\r\n        /** 收到消息快捷评论更新 */\r\n        nim.V2NIMMessageService.on('onMessageQuickCommentNotification', this._onMessageQuickCommentNotification);\r\n        /** 收到消息撤回通知 消息 */\r\n        nim.V2NIMMessageService.on('onMessageRevokeNotifications', this._onMessageRevokeNotifications);\r\n        /** 收到点对点消息的已读回执 */\r\n        nim.V2NIMMessageService.on('onReceiveP2PMessageReadReceipts', this._onReceiveP2PMessageReadReceipts);\r\n        /** 收到群消息的已读回执 */\r\n        nim.V2NIMMessageService.on('onReceiveTeamMessageReadReceipts', this._onReceiveTeamMessageReadReceipts);\r\n        /**\r\n         * 收到消息更新事件\r\n         *\r\n         * 1. 收到更新消息在线同步通知\r\n         * 2. 收到更新消息多端同步通知\r\n         * 3. 收到更新消息漫游通知\r\n         */\r\n        nim.V2NIMMessageService.on('onReceiveMessagesModified', this._onReceiveMessagesModified);\r\n    }\r\n    MsgStore.prototype.resetState = function () {\r\n        this.msgs.clear();\r\n        this.replyMsgs.clear();\r\n        this.pinMsgs.clear();\r\n    };\r\n    /**\r\n     * 销毁MsgStore，会取消消息相关事件监听\r\n     */\r\n    MsgStore.prototype.destroy = function () {\r\n        var _this = this;\r\n        this.resetState();\r\n        this.nim.V2NIMMessageService.off('onReceiveMessages', this._onReceiveMessages);\r\n        this.nim.V2NIMMessageService.off('onClearHistoryNotifications', this._onClearHistoryNotifications);\r\n        this.nim.V2NIMMessageService.off('onMessageDeletedNotifications', this._onMessageDeletedNotifications);\r\n        this.nim.V2NIMMessageService.off('onMessagePinNotification', this._onMessagePinNotification);\r\n        this.nim.V2NIMMessageService.off('onMessageQuickCommentNotification', this._onMessageQuickCommentNotification);\r\n        this.nim.V2NIMMessageService.off('onMessageRevokeNotifications', this._onMessageRevokeNotifications);\r\n        this.nim.V2NIMMessageService.off('onReceiveP2PMessageReadReceipts', this._onReceiveP2PMessageReadReceipts);\r\n        this.nim.V2NIMMessageService.off('onReceiveTeamMessageReadReceipts', this._onReceiveTeamMessageReadReceipts);\r\n        this.getMsg().forEach(function (msg) {\r\n            _this._handleClearMsgTimer(msg);\r\n        });\r\n    };\r\n    /**\r\n     * 回复消息\r\n     * @param msg 消息对象\r\n     */\r\n    MsgStore.prototype.replyMsgActive = function (msg) {\r\n        if (msg === null || msg === void 0 ? void 0 : msg.conversationId) {\r\n            this.replyMsgs.set(msg.conversationId, msg);\r\n        }\r\n    };\r\n    /**\r\n     * 回复消息\r\n     * @param msg 消息对象\r\n     */\r\n    MsgStore.prototype.removeReplyMsgActive = function (conversationId) {\r\n        this.replyMsgs.delete(conversationId);\r\n    };\r\n    /**\r\n     * 获取回复消息\r\n     * @param conversationId\r\n     * @returns\r\n     */\r\n    MsgStore.prototype.getReplyMsgActive = function (conversationId) {\r\n        var msg = this.replyMsgs.get(conversationId);\r\n        if (msg) {\r\n            return this.handleMsgForSDK(msg);\r\n        }\r\n    };\r\n    /**\r\n     * 撤回消息\r\n     * @param msg 消息对象\r\n     */\r\n    MsgStore.prototype.reCallMsgActive = function (msg) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var recallMsg, error_1;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('reCallMsgActive', msg);\r\n                        return [4 /*yield*/, this.nim.V2NIMMessageService.revokeMessage(this.handleMsgForSDK(msg))];\r\n                    case 1:\r\n                        _d.sent();\r\n                        this.removeMsg(msg.conversationId, [msg.messageClientId]);\r\n                        recallMsg = this._createReCallMsg(msg);\r\n                        this.addMsg(recallMsg.conversationId, [recallMsg]);\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('reCallMsgActive success', msg);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_1 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('reCallMsgActive failed: ', msg, error_1);\r\n                        throw error_1;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 单向删除消息\r\n     * @param msgs 消息对象数组\r\n     */\r\n    MsgStore.prototype.deleteMsgActive = function (msgs) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var conversationId, messageClientIds, error_2;\r\n            var _this = this;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('deleteMsgActive', msgs);\r\n                        return [4 /*yield*/, this.nim.V2NIMMessageService.deleteMessages(msgs.map(function (item) { return _this.handleMsgForSDK(item); }))];\r\n                    case 1:\r\n                        _d.sent();\r\n                        conversationId = msgs[0].conversationId;\r\n                        if (conversationId) {\r\n                            messageClientIds = msgs.map(function (item) { return item.messageClientId; });\r\n                            this.removeMsg(conversationId, messageClientIds);\r\n                        }\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('deleteMsgActive success', msgs);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_2 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.warn('deleteMsgActive failed, but delete msgs from memory: ', msgs, error_2);\r\n                        throw error_2;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 回复消息\r\n     * @param msgs 消息对象\r\n     * @param repliedMessages 被回复的消息对象\r\n     * @param conversationId 会话id\r\n     */\r\n    MsgStore.prototype.replyMessageByThreadActive = function (message, repliedMessage, conversationId, params) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result, error_3;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('replyMessageByThreadActive', message, repliedMessage);\r\n                        return [4 /*yield*/, this.nim.V2NIMMessageService.replyMessage(message, repliedMessage, params)];\r\n                    case 1:\r\n                        result = _d.sent();\r\n                        this.removeReplyMsgActive(conversationId);\r\n                        this._handleSendMsgSuccess(result.message);\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('replyMessageByThreadActive success', { message: message, repliedMessage: repliedMessage }, result);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_3 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('replyMessageByThreadActive fail', message, repliedMessage);\r\n                        message.threadReply = repliedMessage;\r\n                        this._handleSendMsgSuccess(message);\r\n                        throw error_3;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 发送消息\r\n     * @param __namedParameters.msg - 消息对象\r\n     * @param __namedParameters.conversationId - 会话id\r\n     * @param __namedParameters.conversationType - 会话类型\r\n     * @param __namedParameters.progress - progress 进度回调\r\n     * @param __namedParameters.sendBefore - sendBefore 进度回调\r\n     * @param __namedParameters.serverExtension - 扩展字段\r\n     * @param __namedParameters.previewImg - 预览图片，一般用于发送图片和视频消息\r\n     * @param __namedParameters.onAISend - AI 单聊或 at AI 发送成功后的回调\r\n     */\r\n    MsgStore.prototype.sendMessageActive = function (params) {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var msg, conversationId, conversationType, progress, sendBefore, serverExtension, previewImg, onAISend, newMsg, finalServerExtension, sendMsgParams, aiConfig, finalAIConfig, finalParams, replyMsg, message, error_4;\r\n            var _this = this;\r\n            return __generator(this, function (_k) {\r\n                switch (_k.label) {\r\n                    case 0:\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('sendMessageActive', params);\r\n                        msg = params.msg, conversationId = params.conversationId, conversationType = params.conversationType, progress = params.progress, sendBefore = params.sendBefore, serverExtension = params.serverExtension, previewImg = params.previewImg, onAISend = params.onAISend;\r\n                        newMsg = __assign({}, msg);\r\n                        finalServerExtension = {};\r\n                        // @ts-ignore 发送回复消息旧模式，使用ext实现，有一系列缺点\r\n                        if ((_b = this.localOptions) === null || _b === void 0 ? void 0 : _b.sendReplyMsgByExt) {\r\n                            finalServerExtension = this._formatExtField(conversationId, serverExtension || JSON.parse(newMsg.serverExtension || '{}'));\r\n                        }\r\n                        else {\r\n                            finalServerExtension =\r\n                                serverExtension || JSON.parse(newMsg.serverExtension || '{}');\r\n                        }\r\n                        newMsg.serverExtension = Object.keys(finalServerExtension).length\r\n                            ? JSON.stringify(finalServerExtension)\r\n                            : void 0;\r\n                        newMsg.senderId = this.rootStore.userStore.myUserInfo.accountId;\r\n                        newMsg.receiverId =\r\n                            this.nim.V2NIMConversationIdUtil.parseConversationTargetId(conversationId);\r\n                        newMsg.conversationId = conversationId;\r\n                        if (conversationType !== void 0) {\r\n                            newMsg.conversationType = conversationType;\r\n                        }\r\n                        newMsg.sendingState =\r\n                            3 /* V2NIMConst.V2NIMMessageSendingState.V2NIM_MESSAGE_SENDING_STATE_SENDING */;\r\n                        if (previewImg) {\r\n                            newMsg.previewImg = previewImg;\r\n                        }\r\n                        if (progress) {\r\n                            newMsg.uploadProgress = 0;\r\n                        }\r\n                        _k.label = 1;\r\n                    case 1:\r\n                        _k.trys.push([1, 6, , 7]);\r\n                        return [4 /*yield*/, ((_d = (_c = this.localOptions).sendMsgBefore) === null || _d === void 0 ? void 0 : _d.call(_c, params))];\r\n                    case 2:\r\n                        sendMsgParams = _k.sent();\r\n                        if (sendMsgParams === false) {\r\n                            (_e = this.logger) === null || _e === void 0 ? void 0 : _e.log('sendMessageActive cancel', params, sendMsgParams);\r\n                            return [2 /*return*/];\r\n                        }\r\n                        aiConfig = this._getAIConfig(newMsg);\r\n                        // 先插入这条消息，快速让消息上屏\r\n                        this.addMsg(newMsg.conversationId, [newMsg]);\r\n                        sendBefore === null || sendBefore === void 0 ? void 0 : sendBefore(newMsg);\r\n                        finalAIConfig = aiConfig || (sendMsgParams === null || sendMsgParams === void 0 ? void 0 : sendMsgParams.aiConfig)\r\n                            ? __assign(__assign({}, aiConfig), sendMsgParams === null || sendMsgParams === void 0 ? void 0 : sendMsgParams.aiConfig)\r\n                            : void 0;\r\n                        finalParams = __assign(__assign({}, sendMsgParams), { pushConfig: (sendMsgParams === null || sendMsgParams === void 0 ? void 0 : sendMsgParams.pushConfig) ||\r\n                                ((finalServerExtension === null || finalServerExtension === void 0 ? void 0 : finalServerExtension.yxAitMsg)\r\n                                    ? this._formatExtAitToPushInfo(finalServerExtension.yxAitMsg, newMsg.text || '')\r\n                                    : void 0), messageConfig: __assign({ \r\n                                // 需要开启已读回执\r\n                                readReceiptEnabled: true }, sendMsgParams === null || sendMsgParams === void 0 ? void 0 : sendMsgParams.messageConfig), aiConfig: finalAIConfig });\r\n                        (_f = this.logger) === null || _f === void 0 ? void 0 : _f.log('sendMessageActive finalParams: ', newMsg, conversationId, finalParams);\r\n                        replyMsg = this.getReplyMsgActive(conversationId);\r\n                        if (!(replyMsg && !((_g = this.localOptions) === null || _g === void 0 ? void 0 : _g.sendReplyMsgByExt))) return [3 /*break*/, 4];\r\n                        newMsg.serverExtension = Object.keys(finalServerExtension).length\r\n                            ? JSON.stringify(finalServerExtension)\r\n                            : void 0;\r\n                        return [4 /*yield*/, this.replyMessageByThreadActive(newMsg, replyMsg, conversationId, finalParams)];\r\n                    case 3:\r\n                        _k.sent();\r\n                        sendBefore === null || sendBefore === void 0 ? void 0 : sendBefore(newMsg);\r\n                        return [2 /*return*/];\r\n                    case 4: return [4 /*yield*/, this.nim.V2NIMMessageService.sendMessage(newMsg, conversationId, finalParams, function (percentage) {\r\n                            var shouldContinue = progress === null || progress === void 0 ? void 0 : progress(percentage);\r\n                            if (shouldContinue) {\r\n                                var _msg = _this.getMsg(conversationId, [\r\n                                    newMsg.messageClientId,\r\n                                ])[0];\r\n                                if (_msg) {\r\n                                    _this.addMsg(conversationId, [\r\n                                        __assign(__assign({}, _msg), { uploadProgress: percentage }),\r\n                                    ]);\r\n                                }\r\n                            }\r\n                        })];\r\n                    case 5:\r\n                        message = (_k.sent()).message;\r\n                        if (finalAIConfig) {\r\n                            onAISend === null || onAISend === void 0 ? void 0 : onAISend(message, finalAIConfig);\r\n                        }\r\n                        //uploadProgress 为UI层需要的字段，当sendMessage返回时，uploadProgress必为100\r\n                        if (msg.messageType ===\r\n                            6 /* V2NIMConst.V2NIMMessageType.V2NIM_MESSAGE_TYPE_FILE */ ||\r\n                            msg.messageType ===\r\n                                1 /* V2NIMConst.V2NIMMessageType.V2NIM_MESSAGE_TYPE_IMAGE */ ||\r\n                            msg.messageType === 3 /* V2NIMConst.V2NIMMessageType.V2NIM_MESSAGE_TYPE_VIDEO */) {\r\n                            // @ts-expect-error\r\n                            message.uploadProgress = 100;\r\n                        }\r\n                        this._handleSendMsgSuccess(message);\r\n                        (_h = this.logger) === null || _h === void 0 ? void 0 : _h.log('sendMessageActive success', message);\r\n                        if (newMsg.messageType ===\r\n                            0 /* V2NIMConst.V2NIMMessageType.V2NIM_MESSAGE_TYPE_TEXT */) {\r\n                            this.removeReplyMsgActive(conversationId);\r\n                        }\r\n                        return [2 /*return*/, message];\r\n                    case 6:\r\n                        error_4 = _k.sent();\r\n                        (_j = this.logger) === null || _j === void 0 ? void 0 : _j.error('sendMessageActive failed: ', error_4.toString(), newMsg);\r\n                        // 手动取消上传\r\n                        if (error_4.code === 191002) {\r\n                            this.removeMsg(conversationId, [newMsg.messageClientId]);\r\n                        }\r\n                        else {\r\n                            this._handleSendMsgFail(newMsg, error_4.code);\r\n                        }\r\n                        if (newMsg.messageType ===\r\n                            0 /* V2NIMConst.V2NIMMessageType.V2NIM_MESSAGE_TYPE_TEXT */) {\r\n                            this.removeReplyMsgActive(conversationId);\r\n                        }\r\n                        throw error_4;\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 取消上传\r\n     * @param msg 消息对象\r\n     */\r\n    MsgStore.prototype.cancelMessageAttachmentUploadActive = function (msg) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_5;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('cancelMessageAttachmentUploadActive', msg);\r\n                        return [4 /*yield*/, this.nim.V2NIMMessageService.cancelMessageAttachmentUpload(this.handleMsgForSDK(msg))];\r\n                    case 1:\r\n                        _d.sent();\r\n                        this.removeMsg(msg.conversationId, [msg.messageClientId]);\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('cancelMessageAttachmentUploadActive success', msg);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_5 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('cancelMessageAttachmentUploadActive failed: ', msg, error_5);\r\n                        throw error_5;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 发送 p2p 消息已读回执\r\n     * @param msg 消息对象\r\n     */\r\n    MsgStore.prototype.sendMsgReceiptActive = function (msg) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_6;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('sendMsgReceiptActive', msg);\r\n                        return [4 /*yield*/, this.nim.V2NIMMessageService.sendP2PMessageReceipt(this.handleMsgForSDK(msg))];\r\n                    case 1:\r\n                        _d.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('sendMsgReceiptActive success', msg);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_6 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('sendMsgReceiptActive failed: ', msg, error_6.toString());\r\n                        throw error_6;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 添加一个收藏\r\n     * @param params 添加收藏的相关参数\r\n     */\r\n    MsgStore.prototype.addCollectionActive = function (params) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_7;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('addCollectionActive', params);\r\n                        return [4 /*yield*/, this.nim.V2NIMMessageService.addCollection(params)];\r\n                    case 1:\r\n                        _d.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('addCollectionActive success', params);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_7 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('addCollectionActive failed: ', params, error_7.toString());\r\n                        throw error_7;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 移除相关收藏\r\n     * @param collections 需要移除的相关收藏\r\n     */\r\n    MsgStore.prototype.removeCollectionsActive = function (collections) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_8;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('removeCollectionsActive', collections);\r\n                        return [4 /*yield*/, this.nim.V2NIMMessageService.removeCollections(collections)];\r\n                    case 1:\r\n                        _d.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('removeCollectionsActive success', collections);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_8 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('removeCollectionsActive failed: ', collections, error_8.toString());\r\n                        throw error_8;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取收藏列表\r\n     * @param option 查询参数\r\n     */\r\n    MsgStore.prototype.getCollectionListByOptionActive = function (option) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var res, error_9;\r\n            var _this = this;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        res = [];\r\n                        _d.label = 1;\r\n                    case 1:\r\n                        _d.trys.push([1, 3, , 4]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('getCollectionListByOptionActive', option);\r\n                        return [4 /*yield*/, this.nim.V2NIMMessageService.getCollectionListByOption(option)];\r\n                    case 2:\r\n                        res = _d.sent();\r\n                        res.forEach(function (item) {\r\n                            var collectionData = JSON.parse(item.collectionData);\r\n                            // 反序列化\r\n                            var msg = _this.nim.V2NIMMessageConverter.messageDeserialization(collectionData.message);\r\n                            if (msg) {\r\n                                _this.collectionMsgs.set(msg.messageClientId, msg);\r\n                            }\r\n                        });\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('getCollectionListByOptionActive success', option);\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_9 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('getCollectionListByOptionActive failed: ', option, error_9.toString());\r\n                        throw error_9;\r\n                    case 4: return [2 /*return*/, res];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 发送群组消息已读回执\r\n     * @param msgs 消息数组\r\n     */\r\n    MsgStore.prototype.sendTeamMsgReceiptActive = function (msgs) {\r\n        var _a, _b, _c, _d;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var finalMsgs, error_10;\r\n            var _this = this;\r\n            return __generator(this, function (_e) {\r\n                switch (_e.label) {\r\n                    case 0:\r\n                        _e.trys.push([0, 3, , 4]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('sendTeamMsgReceiptActive', msgs);\r\n                        if (!msgs.length) return [3 /*break*/, 2];\r\n                        finalMsgs = msgs.map(function (item) { return _this.handleMsgForSDK(item); });\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('sendTeamMsgReceiptActive finalParams: ', finalMsgs);\r\n                        return [4 /*yield*/, this.nim.V2NIMMessageService.sendTeamMessageReceipts(finalMsgs)];\r\n                    case 1:\r\n                        _e.sent();\r\n                        _e.label = 2;\r\n                    case 2:\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.log('sendTeamMsgReceiptActive success', msgs);\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_10 = _e.sent();\r\n                        (_d = this.logger) === null || _d === void 0 ? void 0 : _d.error('sendTeamMsgReceiptActive failed: ', msgs, error_10.toString());\r\n                        throw error_10;\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取群消息已读未读详情\r\n     * @param message 消息\r\n     */\r\n    MsgStore.prototype.getTeamMessageReceiptDetailsActive = function (message, memberAccountIds) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var res, error_11;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('getTeamMessageReceiptDetailsActive', message, memberAccountIds);\r\n                        return [4 /*yield*/, this.nim.V2NIMMessageService.getTeamMessageReceiptDetail(message, memberAccountIds)];\r\n                    case 1:\r\n                        res = _d.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('getTeamMessageReceiptDetailsActive success:', message, memberAccountIds, res);\r\n                        return [2 /*return*/, res];\r\n                    case 2:\r\n                        error_11 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('getTeamMessageReceiptDetailsActive failed: ', message, memberAccountIds, error_11.toString());\r\n                        throw error_11;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取历史消息\r\n     * @param options.conversationId - 消息所属的会话的ID\r\n     * @param options.endTime - 结束时间戳, 精确到 ms, 默认为服务器的当前时间\r\n     * @param options.lastMsgId - 上次查询的最后一条消息的 messageServerId, 第一次不填\r\n     * @param options.limit - 本次查询的消息数量限制, 最多 100 条, 默认 100 条\r\n     */\r\n    MsgStore.prototype.getHistoryMsgActive = function (options) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var conversationId, endTime, lastMsgId, _d, limit, conversationType, finalParams, anchorMessage, msgs, myMsgs, error_12;\r\n            return __generator(this, function (_e) {\r\n                switch (_e.label) {\r\n                    case 0:\r\n                        _e.trys.push([0, 4, , 5]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('getHistoryMsgActive', options);\r\n                        conversationId = options.conversationId, endTime = options.endTime, lastMsgId = options.lastMsgId, _d = options.limit, limit = _d === void 0 ? 100 : _d;\r\n                        conversationType = this.nim.V2NIMConversationIdUtil.parseConversationType(conversationId);\r\n                        finalParams = {\r\n                            conversationId: conversationId,\r\n                            endTime: endTime,\r\n                            limit: limit,\r\n                        };\r\n                        if (lastMsgId) {\r\n                            anchorMessage = this.getMsg(conversationId, [lastMsgId])[0];\r\n                            if (anchorMessage) {\r\n                                finalParams.anchorMessage = anchorMessage;\r\n                            }\r\n                        }\r\n                        return [4 /*yield*/, this.nim.V2NIMMessageService.getMessageList(finalParams)];\r\n                    case 1:\r\n                        msgs = _e.sent();\r\n                        this.addMsg(conversationId, msgs);\r\n                        if (!(conversationType ===\r\n                            2 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_TEAM */ &&\r\n                            this.rootStore.localOptions.teamMsgReceiptVisible)) return [3 /*break*/, 3];\r\n                        myMsgs = msgs\r\n                            .filter(function (item) { return item.isSelf; })\r\n                            .filter(function (item) {\r\n                            return ![\r\n                                5 /* V2NIMConst.V2NIMMessageType.V2NIM_MESSAGE_TYPE_NOTIFICATION */,\r\n                                10 /* V2NIMConst.V2NIMMessageType.V2NIM_MESSAGE_TYPE_TIPS */,\r\n                            ].includes(item.messageType);\r\n                        });\r\n                        return [4 /*yield*/, this.getTeamMsgReadsActive(myMsgs, conversationId)];\r\n                    case 2:\r\n                        _e.sent();\r\n                        _e.label = 3;\r\n                    case 3:\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('getHistoryMsgActive success', options, finalParams, msgs);\r\n                        return [2 /*return*/, msgs];\r\n                    case 4:\r\n                        error_12 = _e.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('getHistoryMsgActive failed: ', options, error_12.toString());\r\n                        throw error_12;\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 转发消息\r\n     * @param msg - 消息对象\r\n     * @param conversationId - 会话id\r\n     * @param comment - 评论\r\n     */\r\n    MsgStore.prototype.forwardMsgActive = function (msg, conversationId, comment) {\r\n        var _a, _b, _c, _d;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var serverExtension, deleteKeys, finalMsg, forwardMsg, textMsg, error_13;\r\n            return __generator(this, function (_e) {\r\n                switch (_e.label) {\r\n                    case 0:\r\n                        _e.trys.push([0, 5, , 6]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('forwardMsgActive', msg, conversationId, comment);\r\n                        serverExtension = msg === null || msg === void 0 ? void 0 : msg.serverExtension;\r\n                        if (serverExtension) {\r\n                            try {\r\n                                serverExtension = JSON.parse(serverExtension);\r\n                                // @ts-ignore\r\n                                delete serverExtension.yxReplyMsg;\r\n                                // @ts-ignore\r\n                                delete serverExtension.yxAitMsg;\r\n                                serverExtension = JSON.stringify(serverExtension);\r\n                            }\r\n                            catch (error) {\r\n                                //\r\n                            }\r\n                        }\r\n                        deleteKeys = ['canRecall', 'reCallTimer', 'yxUnread', 'yxRead'];\r\n                        deleteKeys.forEach(function (key) {\r\n                            delete msg[key];\r\n                        });\r\n                        // 之前 IM2 sdk 有问题，这边先保留\r\n                        if (((_b = msg.pushConfig) === null || _b === void 0 ? void 0 : _b.pushContent) === '') {\r\n                            delete msg.pushConfig.pushContent;\r\n                        }\r\n                        finalMsg = this.handleMsgForSDK(__assign(__assign({}, msg), { serverExtension: serverExtension }));\r\n                        forwardMsg = this.nim.V2NIMMessageCreator.createForwardMessage(finalMsg);\r\n                        if (!forwardMsg) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.sendMessageActive({\r\n                                msg: forwardMsg,\r\n                                conversationId: conversationId,\r\n                            })];\r\n                    case 1:\r\n                        _e.sent();\r\n                        _e.label = 2;\r\n                    case 2:\r\n                        if (!comment) return [3 /*break*/, 4];\r\n                        textMsg = this.nim.V2NIMMessageCreator.createTextMessage(comment);\r\n                        return [4 /*yield*/, this.sendMessageActive({ msg: textMsg, conversationId: conversationId })];\r\n                    case 3:\r\n                        _e.sent();\r\n                        _e.label = 4;\r\n                    case 4:\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.log('forwardMsgActive success', msg, conversationId, comment);\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        error_13 = _e.sent();\r\n                        (_d = this.logger) === null || _d === void 0 ? void 0 : _d.error('forwardMsgActive failed: ', error_13);\r\n                        throw error_13;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取群组消息已读未读数\r\n     * @param msgs 消息数组\r\n     * @param conversationId 会话id\r\n     */\r\n    MsgStore.prototype.getTeamMsgReadsActive = function (msgs, conversationId) {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var res, error_14, newMsgs;\r\n            var _this = this;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('getTeamMsgReadsActive', msgs, conversationId);\r\n                        res = [];\r\n                        if (!msgs.length) return [3 /*break*/, 4];\r\n                        _c.label = 1;\r\n                    case 1:\r\n                        _c.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.nim.V2NIMMessageService.getTeamMessageReceipts(msgs.map(function (item) { return _this.handleMsgForSDK(item); }))];\r\n                    case 2:\r\n                        res = _c.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_14 = _c.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.warn('getTeamMsgReadsActive failed but continue: ', error_14.toString());\r\n                        return [3 /*break*/, 4];\r\n                    case 4:\r\n                        newMsgs = msgs\r\n                            .filter(function (msg) {\r\n                            return res.some(function (status) { return msg.messageClientId === status.messageClientId; });\r\n                        })\r\n                            .map(function (item) {\r\n                            var teamMsgReceipt = res.find(function (j) { return j.messageClientId === item.messageClientId; });\r\n                            if (teamMsgReceipt) {\r\n                                return _this._updateReceiptMsg(item, {\r\n                                    unread: teamMsgReceipt.unreadCount,\r\n                                    read: teamMsgReceipt.readCount,\r\n                                });\r\n                            }\r\n                            return item;\r\n                        });\r\n                        this.addMsg(conversationId, newMsgs);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * pin 一条消息\r\n     * @param message 需要被 pin 的消息体\r\n     * @param serverExtension 扩展字段\r\n     */\r\n    MsgStore.prototype.pinMessageActive = function (message, serverExtension) {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_15;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('pinMessageActive', message, serverExtension);\r\n                        _c.label = 1;\r\n                    case 1:\r\n                        _c.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.nim.V2NIMMessageService.pinMessage(message, serverExtension)];\r\n                    case 2:\r\n                        _c.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_15 = _c.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.warn('pinMessageActive failed but continue: ', error_15.toString());\r\n                        // 这里需要把错误抛出去，让 ui 层感知到\r\n                        throw error_15;\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 取消一条Pin消息\r\n     * @param messageRefer 需要被取消 pin 的消息摘要\r\n     * @param serverExtension 扩展字段\r\n     */\r\n    MsgStore.prototype.unpinMessageActive = function (messageRefer, serverExtension) {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_16;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('uppinMessageActive', messageRefer, serverExtension);\r\n                        _c.label = 1;\r\n                    case 1:\r\n                        _c.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.nim.V2NIMMessageService.unpinMessage(messageRefer, serverExtension)];\r\n                    case 2:\r\n                        _c.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_16 = _c.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.warn('uppinMessageActive failed but continue: ', error_16.toString());\r\n                        // 这里需要把错误抛出去，让 ui 层感知到\r\n                        throw error_16;\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 取消一条Pin消息\r\n     * @param messageRefer 需要被取消 pin 的消息摘要\r\n     * @param serverExtension 扩展字段\r\n     */\r\n    MsgStore.prototype.updatePinMessageActive = function (message, serverExtension) {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_17;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('updatePinMessageActive', message, serverExtension);\r\n                        _c.label = 1;\r\n                    case 1:\r\n                        _c.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.nim.V2NIMMessageService.updatePinMessage(message, serverExtension)];\r\n                    case 2:\r\n                        _c.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_17 = _c.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.warn('updatePinMessageActive failed but continue: ', error_17.toString());\r\n                        // 这里需要把错误抛出去，让 ui 层感知到\r\n                        throw error_17;\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取 pin 消息列表\r\n     * @param conversationId 会话id\r\n     */\r\n    MsgStore.prototype.getPinnedMessageListActive = function (conversationId) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var curPinMsgsMap, pinInfos;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        curPinMsgsMap = this.pinMsgs.get(conversationId);\r\n                        pinInfos = [];\r\n                        if (!curPinMsgsMap) return [3 /*break*/, 1];\r\n                        // 如果内存里面有，从内存里面获取\r\n                        pinInfos = __spreadArray([], __read(curPinMsgsMap.values()), false);\r\n                        return [3 /*break*/, 3];\r\n                    case 1: return [4 /*yield*/, this._getPinnedMessageListByServer(conversationId)];\r\n                    case 2:\r\n                        // 这里不做 try catch，底层方法已处理\r\n                        // 如果内存里面没有，那么像服务器获取\r\n                        pinInfos = _a.sent();\r\n                        _a.label = 3;\r\n                    case 3: return [4 /*yield*/, this.completePinnedMessageList(conversationId, pinInfos)\r\n                        // 这里\r\n                    ];\r\n                    case 4:\r\n                        // 这里不做 try catch，底层方法已处理\r\n                        // 补全 pinInfos message 信息\r\n                        pinInfos = _a.sent();\r\n                        // 这里\r\n                        pinInfos = pinInfos\r\n                            .filter(function (pinInfo) { return pinInfo.pinState > 0 && pinInfo.message; })\r\n                            .sort(function (a, b) { return b.message.createTime - a.message.createTime; });\r\n                        return [2 /*return*/, pinInfos];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 停止流式输出\r\n     * @param message 消息体\r\n     * @param params 停止模式等入参\r\n     */\r\n    MsgStore.prototype.stopAIStreamMessageActive = function (message, params) {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_18;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('stopAIStreamMessageActive', message);\r\n                        _c.label = 1;\r\n                    case 1:\r\n                        _c.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.nim.V2NIMMessageService.stopAIStreamMessage(message, params)];\r\n                    case 2:\r\n                        _c.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_18 = _c.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.error('stopAIStreamMessageActive failed ', error_18.toString());\r\n                        throw error_18;\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 重新生成 ai 消息\r\n     *\r\n     * 注: 若是流式消息, 必须等到流式分片输出完毕, 才允许调用此 API\r\n     *\r\n     * 此外他支持两种配置\r\n     *\r\n     * 1. 更新，新消息覆盖老消息---只允许更新3天内的消息\r\n     * 2. 新消息，产生一条新消息\r\n     *\r\n     * @param message 需要重新输出的原始数字人消息\r\n     * @param params 确定重新输出的操作类型\r\n     */\r\n    MsgStore.prototype.regenAIMessageActive = function (message, params) {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_19;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('regenAIMessageActive', message);\r\n                        _c.label = 1;\r\n                    case 1:\r\n                        _c.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.nim.V2NIMMessageService.regenAIMessage(message, params)];\r\n                    case 2:\r\n                        _c.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_19 = _c.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.error('regenAIMessageActive failed ', error_19.toString());\r\n                        throw error_19;\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    MsgStore.prototype.voiceToTextActive = function (message) {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var text, error_20;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        // 已经有转过的消息不要再次转\r\n                        if (message.textOfVoice)\r\n                            return [2 /*return*/];\r\n                        // 判定如果没有附件, 或者附件不是语音类型的, 也 return\r\n                        if (!message.attachment)\r\n                            return [2 /*return*/];\r\n                        // 类型保护, 判定一定是音视频才能走入这段逻辑\r\n                        if (!('url' in message.attachment))\r\n                            return [2 /*return*/];\r\n                        // 经过了上面的类型保护后, 这一段直接访问 message.attachment.url 才不会 ts 提示说不存在\r\n                        if (!message.attachment.url)\r\n                            return [2 /*return*/];\r\n                        if (!('duration' in message.attachment))\r\n                            return [2 /*return*/];\r\n                        if (!message.attachment.duration)\r\n                            return [2 /*return*/];\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('voiceToTextActive', message);\r\n                        _c.label = 1;\r\n                    case 1:\r\n                        _c.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.nim.V2NIMMessageService.voiceToText({\r\n                                voiceUrl: message.attachment.url,\r\n                                duration: message.attachment.duration,\r\n                                sceneName: message.attachment.sceneName,\r\n                                // 在群里与产品孙有军交流, 得知可以写死 aac 和 16000\r\n                                mimeType: 'aac',\r\n                                sampleRate: '16000',\r\n                            })];\r\n                    case 2:\r\n                        text = _c.sent();\r\n                        if (!text)\r\n                            throw new Error('voiceToText empty');\r\n                        this.updateMsg(message.conversationId, message.messageClientId, {\r\n                            textOfVoice: text,\r\n                        });\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_20 = _c.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.warn('voiceToTextActive failed: ', error_20.toString());\r\n                        // 这里需要把错误抛出去，让 ui 层感知到\r\n                        throw error_20;\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 往内存中添加消息\r\n     * @param conversationId - 消息所属的会话的ID\r\n     * @param msgs- 消息对象数组\r\n     */\r\n    MsgStore.prototype.addMsg = function (conversationId, msgs) {\r\n        var _this = this;\r\n        var sortFunc = function (a, b) {\r\n            return a.createTime - b.createTime;\r\n        };\r\n        var _msgs = this.msgs.get(conversationId) || [];\r\n        // 获取当前会话的 pinMsgsMap\r\n        var curPinMsgsMap = this.pinMsgs.get(conversationId);\r\n        msgs\r\n            .filter(function (item) { return !!item.messageClientId; })\r\n            .map(function (item) {\r\n            // 这里做消息处理\r\n            item = _this.handleReceiveAIMsg(item);\r\n            if (curPinMsgsMap)\r\n                item = _this.handleMsgPinState(item, curPinMsgsMap);\r\n            return item;\r\n        })\r\n            .forEach(function (item) {\r\n            var newMsg = __assign({}, item);\r\n            var _msg = _msgs.find(function (msg) { return msg.messageClientId === newMsg.messageClientId; });\r\n            // SDK 可能会返回多条 messageClientId 相同的数据，此时取 createTime 最新的\r\n            if (_msg) {\r\n                if (_msg.createTime <= newMsg.createTime ||\r\n                    _msg.sendingState ===\r\n                        3 /* V2NIMConst.V2NIMMessageSendingState\r\n                                        .V2NIM_MESSAGE_SENDING_STATE_SENDING */) {\r\n                    // 如果之前的消息有撤回相关字段，则更新时保留\r\n                    if (_msg.canRecall !== void 0 && _msg.reCallTimer !== void 0) {\r\n                        newMsg.canRecall = _msg.canRecall;\r\n                        newMsg.reCallTimer = _msg.reCallTimer;\r\n                    }\r\n                    // 如果之前已经请求过 voiceToText 语音转文字的结果, 那么更新时保留\r\n                    if (_msg.textOfVoice) {\r\n                        newMsg.textOfVoice = _msg.textOfVoice;\r\n                    }\r\n                    _msgs.splice(_msgs.indexOf(_msg), 1, newMsg);\r\n                }\r\n            }\r\n            else {\r\n                _msgs.push(item);\r\n            }\r\n        });\r\n        this.msgs.set(conversationId, __spreadArray([], __read(_msgs), false).sort(sortFunc), this.rootStore.uiStore.selectedConversation === conversationId);\r\n    };\r\n    /**\r\n     * 从内存中删除消息\r\n     * @param conversationId - 消息所属的会话的ID\r\n     * @param idClients - 端测生成的消息id数组\r\n     */\r\n    MsgStore.prototype.removeMsg = function (conversationId, idClients) {\r\n        var _this = this;\r\n        if (!conversationId) {\r\n            this.getMsg().forEach(function (item) {\r\n                _this._handleClearMsgTimer(item);\r\n            });\r\n            this.msgs.clear();\r\n            return;\r\n        }\r\n        var msgs = this.msgs.get(conversationId);\r\n        if (!msgs) {\r\n            return;\r\n        }\r\n        if (!idClients || !idClients.length) {\r\n            msgs.forEach(function (item) {\r\n                _this._handleClearMsgTimer(item);\r\n            });\r\n            this.msgs.delete(conversationId);\r\n            return;\r\n        }\r\n        this.msgs.set(conversationId, msgs.filter(function (msg) {\r\n            var isDelete = idClients.includes(msg.messageClientId) &&\r\n                // 无法删除撤回消息\r\n                !(msg.messageType ===\r\n                    100 /* V2NIMConst.V2NIMMessageType.V2NIM_MESSAGE_TYPE_CUSTOM */ &&\r\n                    msg.recallType === 'beReCallMsg');\r\n            if (isDelete) {\r\n                _this._handleClearMsgTimer(msg);\r\n            }\r\n            return !isDelete;\r\n        }), this.rootStore.uiStore.selectedConversation === conversationId);\r\n    };\r\n    MsgStore.prototype.deletePinInfoByMessageClientId = function (conversationId, messageClientIds) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('deletePinInfoByMessageClientId', conversationId, messageClientIds);\r\n        this.pinMsgs.delete(conversationId, messageClientIds);\r\n    };\r\n    /**\r\n     * 从内存中获取消息\r\n     * @param conversationId - 消息所属的会话的ID\r\n     * @param idClients - 端测生成的消息id数组\r\n     */\r\n    MsgStore.prototype.getMsg = function (conversationId, idClients) {\r\n        if (!conversationId) {\r\n            return this.msgs.values();\r\n        }\r\n        var msgs = this.msgs.get(conversationId) || [];\r\n        if (!idClients || !idClients.length) {\r\n            return msgs;\r\n        }\r\n        // 如果有 idClients，只返回 idClients 中的消息，新数组\r\n        return msgs.filter(function (item) { return idClients.includes(item.messageClientId); });\r\n    };\r\n    MsgStore.prototype.updateMsg = function (conversationId, idClient, updateParam) {\r\n        var msgs = this.msgs.get(conversationId);\r\n        if (!msgs)\r\n            return;\r\n        var msg = msgs.findIndex(function (item) { return item.messageClientId === idClient; });\r\n        if (!msg)\r\n            return;\r\n        this.msgs.set(conversationId, msgs.map(function (msg) {\r\n            if (msg.messageClientId === idClient) {\r\n                msg = __assign(__assign({}, msg), updateParam);\r\n            }\r\n            return msg;\r\n        }), this.rootStore.uiStore.selectedConversation === conversationId);\r\n    };\r\n    MsgStore.prototype.handleReceiveAIMsg = function (msg) {\r\n        var myAccountId = this.rootStore.userStore.myUserInfo.accountId;\r\n        var aiConfig = msg.aiConfig;\r\n        var senderId = aiConfig\r\n            ? aiConfig.aiStatus === 2\r\n                ? aiConfig.accountId\r\n                : msg.senderId\r\n            : msg.senderId;\r\n        var isSelf = senderId === myAccountId;\r\n        return __assign(__assign({}, msg), { __kit__isSelf: msg.isSelf, __kit__senderId: msg.senderId, isSelf: isSelf });\r\n    };\r\n    /** 处理消息的 pinState */\r\n    MsgStore.prototype.handleMsgPinState = function (msg, curPinMsgsMap) {\r\n        var pinInfo = curPinMsgsMap.get(msg.messageClientId);\r\n        if (pinInfo) {\r\n            msg.pinState = pinInfo.pinState;\r\n            msg.operatorId = pinInfo.operatorId;\r\n        }\r\n        return msg;\r\n    };\r\n    MsgStore.prototype.handleMsgForSDK = function (msg) {\r\n        var __kit__isSelf = msg.__kit__isSelf, __kit__senderId = msg.__kit__senderId, rest = __rest(msg, [\"__kit__isSelf\", \"__kit__senderId\"]);\r\n        var senderId = msg.senderId, isSelf = msg.isSelf;\r\n        if (__kit__isSelf) {\r\n            isSelf = __kit__isSelf;\r\n        }\r\n        if (__kit__senderId) {\r\n            senderId = __kit__senderId;\r\n        }\r\n        return __assign(__assign({}, rest), { senderId: senderId, isSelf: isSelf });\r\n    };\r\n    MsgStore.prototype._getMessageListByRefer = function (messageRefers) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var res, error_21;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        res = [];\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.nim.V2NIMMessageService.getMessageListByRefers(messageRefers)];\r\n                    case 2:\r\n                        res = _b.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_21 = _b.sent();\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.warn('_getMessageListByRefer failed but continue: ', error_21.toString());\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [2 /*return*/, res];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /** 从服务器拉 pin 消息列表 */\r\n    MsgStore.prototype._getPinnedMessageListByServer = function (conversationId) {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var res, pinInfos, error_22;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_getPinnedMessageListByServer', conversationId);\r\n                        res = [];\r\n                        pinInfos = [];\r\n                        _c.label = 1;\r\n                    case 1:\r\n                        _c.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.nim.V2NIMMessageService.getPinnedMessageList(conversationId)];\r\n                    case 2:\r\n                        res = _c.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_22 = _c.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.warn('_getPinnedMessageListByServer failed but continue: ', error_22.toString());\r\n                        return [3 /*break*/, 4];\r\n                    case 4:\r\n                        res.forEach(function (pin) {\r\n                            pinInfos.push(__assign({ pinState: 1 }, pin));\r\n                        });\r\n                        this.pinMsgs.set(conversationId, pinInfos);\r\n                        if (pinInfos.length) {\r\n                            // 主动获取 pin 消息时需要更新 msg 的 pin 状态\r\n                            this._updateMsgsPinState(conversationId, pinInfos);\r\n                        }\r\n                        return [2 /*return*/, pinInfos];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /** 补全被 pin 的消息 */\r\n    MsgStore.prototype.completePinnedMessageList = function (conversationId, pinInfos) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var res, messageRefers;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        res = [];\r\n                        if (!pinInfos.length)\r\n                            return [2 /*return*/, pinInfos];\r\n                        messageRefers = [];\r\n                        // 找出缺少 message 的 pinInfo，说明这个 pinInfo 没有补全消息\r\n                        pinInfos.forEach(function (pinInfo) {\r\n                            if (!pinInfo.message) {\r\n                                messageRefers.push(pinInfo.messageRefer);\r\n                            }\r\n                        });\r\n                        if (!messageRefers.length)\r\n                            return [2 /*return*/, pinInfos\r\n                                // 这里不做 try catch，因为 _getMessageListByRefer 已经处理了\r\n                                // 这里全都从服务器获取补全的消息，不从内存中获取已有的补全消息\r\n                            ];\r\n                        return [4 /*yield*/, this._getMessageListByRefer(messageRefers)];\r\n                    case 1:\r\n                        // 这里不做 try catch，因为 _getMessageListByRefer 已经处理了\r\n                        // 这里全都从服务器获取补全的消息，不从内存中获取已有的补全消息\r\n                        res = _a.sent();\r\n                        if (res.length) {\r\n                            pinInfos = pinInfos.map(function (pinInfo) {\r\n                                var msg = res.find(function (item) {\r\n                                    return item.messageClientId === pinInfo.messageRefer.messageClientId;\r\n                                });\r\n                                if (msg) {\r\n                                    pinInfo = __assign(__assign({}, pinInfo), { message: msg });\r\n                                }\r\n                                return pinInfo;\r\n                            });\r\n                            this.pinMsgs.set(conversationId, pinInfos);\r\n                        }\r\n                        return [2 /*return*/, pinInfos];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    MsgStore.prototype._handleSendMsgSuccess = function (msg) {\r\n        if (msg && msg.conversationId) {\r\n            // const canRecallMsg: V2NIMMessageForUI = {\r\n            //   ...msg,\r\n            //   canRecall: true,\r\n            //   reCallTimer: setTimeout(() => {\r\n            //     // 从内存中取最新的，因为中间可能有其他更新\r\n            //     const _msg = this.getMsg(msg.conversationId, [msg.messageClientId])[0]\r\n            //     if (_msg) {\r\n            //       delete _msg.canRecall\r\n            //       delete _msg.reCallTimer\r\n            //       this.addMsg(msg.conversationId, [_msg])\r\n            //     }\r\n            //   }, RECALL_TIME) as unknown as number,\r\n            // }\r\n            // delete canRecallMsg.uploadProgress\r\n            // delete canRecallMsg.previewImg\r\n            // delete canRecallMsg.errorCode\r\n            this.addMsg(msg.conversationId, [msg]);\r\n        }\r\n    };\r\n    MsgStore.prototype._handleSendMsgFail = function (msg, errorCode) {\r\n        // 发送失败，拉黑的情况不能撤回、可以删除；网络情况不能撤回、不能删除\r\n        // 因此删除那边做一下 try catch 处理，忽略错误消息\r\n        // 先清除老消息的定时器，再更新消息\r\n        if (msg && msg.conversationId) {\r\n            var oldMsg = this.getMsg(msg.conversationId, [msg.messageClientId])[0];\r\n            this._handleClearMsgTimer(oldMsg);\r\n            this.addMsg(msg.conversationId, [\r\n                __assign(__assign(__assign({}, oldMsg), msg), { messageStatus: {\r\n                        errorCode: errorCode,\r\n                    }, uploadProgress: void 0, sendingState: 2 /* V2NIMConst.V2NIMMessageSendingState\r\n                                  .V2NIM_MESSAGE_SENDING_STATE_FAILED */, errorCode: errorCode }),\r\n            ]);\r\n        }\r\n    };\r\n    MsgStore.prototype._handleClearMsgTimer = function (msg) {\r\n        if (msg) {\r\n            clearTimeout(msg.canEditTimer);\r\n            clearTimeout(msg.reCallTimer);\r\n        }\r\n    };\r\n    MsgStore.prototype._onReceiveMessages = function (data) {\r\n        var _this = this;\r\n        var _a, _b, _c, _d;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onReceiveMessages: ', data);\r\n        data.forEach(function (item) {\r\n            _this.addMsg(item.conversationId, [item]);\r\n        });\r\n        if ((_b = this.rootStore.sdkOptions) === null || _b === void 0 ? void 0 : _b.enableV2CloudConversation) {\r\n            (_c = this.rootStore.conversationStore) === null || _c === void 0 ? void 0 : _c.handleConversationWithAit(data);\r\n        }\r\n        else {\r\n            (_d = this.rootStore.localConversationStore) === null || _d === void 0 ? void 0 : _d.handleConversationWithAit(data);\r\n        }\r\n    };\r\n    MsgStore.prototype._onReceiveMessagesModified = function (data) {\r\n        var _this = this;\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onReceiveMessagesModified: ', data);\r\n        data.forEach(function (item) {\r\n            _this.addMsg(item.conversationId, [item]);\r\n        });\r\n    };\r\n    MsgStore.prototype._onClearHistoryNotifications = function (data) {\r\n        var _this = this;\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onClearHistory: ', data);\r\n        data.forEach(function (item) {\r\n            _this.removeMsg(item.conversationId);\r\n        });\r\n    };\r\n    MsgStore.prototype._onMessageDeletedNotifications = function (data) {\r\n        var _this = this;\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onMessageDeletedNotifications: ', data);\r\n        var res = {};\r\n        data.forEach(function (item) {\r\n            var conversationId = item.messageRefer.conversationId;\r\n            if (res[conversationId]) {\r\n                res[conversationId].push(item);\r\n            }\r\n            else {\r\n                res[conversationId] = [item];\r\n            }\r\n        });\r\n        Object.keys(res).forEach(function (conversationId) {\r\n            var messageClientIds = res[conversationId].map(function (item) { return item.messageRefer.messageClientId; });\r\n            _this.removeMsg(conversationId, messageClientIds);\r\n            _this.deletePinInfoByMessageClientId(conversationId, messageClientIds);\r\n        });\r\n    };\r\n    MsgStore.prototype._onMessagePinNotification = function (data) {\r\n        var _this = this;\r\n        var _a = data.pin, operatorId = _a.operatorId, messageRefer = _a.messageRefer, serverExtension = _a.serverExtension, createTime = _a.createTime, updateTime = _a.updateTime;\r\n        var curPinMsgsMap = this.pinMsgs.get(messageRefer.conversationId);\r\n        // 如果内存里面没有当前会话的 pin map，直接返回；等主动调用了 getPinnedMessageListActive 内存才会有 pin map，才处理相应的 _onMessagePinNotification\r\n        if (!curPinMsgsMap)\r\n            return;\r\n        var pinState = data.pinState;\r\n        var pinInfo = curPinMsgsMap === null || curPinMsgsMap === void 0 ? void 0 : curPinMsgsMap.get(messageRefer.messageClientId);\r\n        var newPinInfo = [\r\n            {\r\n                pinState: pinState,\r\n                messageRefer: messageRefer,\r\n                operatorId: operatorId,\r\n                serverExtension: serverExtension,\r\n                // @ts-ignore\r\n                createTime: (pinInfo === null || pinInfo === void 0 ? void 0 : pinInfo.createTime) || createTime,\r\n                updateTime: updateTime,\r\n            },\r\n        ];\r\n        // 补全 message。咨询过产品，nim.V2NIMMessageService.getMessageListByRefers 这个接口不会有频控的问题，一个人1分钟可以调用几百次。所以这里可以实时补全 message\r\n        this.completePinnedMessageList(messageRefer.conversationId, newPinInfo).then(function (pinInfo) {\r\n            _this._updateMsgsPinState(messageRefer.conversationId, pinInfo);\r\n        });\r\n    };\r\n    MsgStore.prototype._updateMsgsPinState = function (conversationId, pinInfos) {\r\n        // 获取会话内存中维护的所有消息\r\n        var _msgs = this.getMsg(conversationId) || [];\r\n        var hasChange = false;\r\n        pinInfos.forEach(function (pinInfo) {\r\n            // 找到需要更新 pin 状态的 msg\r\n            var msg = _msgs.find(function (msg) { return msg.messageClientId === pinInfo.messageRefer.messageClientId; });\r\n            // 如果内存里有对应的消息，再更新 pin 状态；没有，会在之后拉取到对应消息再更新\r\n            if (msg && msg.pinState !== pinInfo.pinState) {\r\n                var newMsg = __assign({}, msg);\r\n                newMsg.pinState = pinInfo.pinState;\r\n                newMsg.operatorId = pinInfo.operatorId;\r\n                _msgs.splice(_msgs.indexOf(msg), 1, newMsg);\r\n                hasChange = true;\r\n            }\r\n        });\r\n        if (hasChange) {\r\n            this.msgs.set(conversationId, _msgs, this.rootStore.uiStore.selectedConversation === conversationId);\r\n        }\r\n    };\r\n    MsgStore.prototype._onMessageQuickCommentNotification = function () {\r\n        // 暂不支持\r\n    };\r\n    MsgStore.prototype._onMessageRevokeNotifications = function (data) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onMessageRevokeNotifications: ', data);\r\n                data.forEach(function (item) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var oldMsg, conversationId, messageClientIds, msg, conversation, aitMsgs, messageClientId_1;\r\n                    var _a, _b, _c, _d, _e, _f;\r\n                    return __generator(this, function (_g) {\r\n                        oldMsg = this.getMsg(item.messageRefer.conversationId, [\r\n                            item.messageRefer.messageClientId,\r\n                        ])[0];\r\n                        // 这里只处理新的撤回消息，老的表示是自己主动撤回的，不处理。\r\n                        if (oldMsg && oldMsg.recallType) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        conversationId = item.messageRefer.conversationId;\r\n                        messageClientIds = [item.messageRefer.messageClientId];\r\n                        this.removeMsg(conversationId, messageClientIds);\r\n                        this.deletePinInfoByMessageClientId(conversationId, messageClientIds);\r\n                        msg = this._createBeReCallMsg(item);\r\n                        this.addMsg(msg.conversationId, [msg]);\r\n                        if (item.messageRefer.conversationType ===\r\n                            2 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_TEAM */) {\r\n                            conversation = ((_a = this.rootStore.sdkOptions) === null || _a === void 0 ? void 0 : _a.enableV2CloudConversation)\r\n                                ? (_b = this.rootStore.conversationStore) === null || _b === void 0 ? void 0 : _b.conversations.get(conversationId)\r\n                                : (_c = this.rootStore.localConversationStore) === null || _c === void 0 ? void 0 : _c.conversations.get(conversationId);\r\n                            if (conversation) {\r\n                                aitMsgs = conversation.aitMsgs || [];\r\n                                messageClientId_1 = item.messageRefer.messageClientId;\r\n                                if (aitMsgs.includes(messageClientId_1)) {\r\n                                    aitMsgs = aitMsgs.filter(function (item) { return item !== messageClientId_1; });\r\n                                    if ((_d = this.rootStore.sdkOptions) === null || _d === void 0 ? void 0 : _d.enableV2CloudConversation) {\r\n                                        (_e = this.rootStore.conversationStore) === null || _e === void 0 ? void 0 : _e.updateConversation([\r\n                                            __assign(__assign({}, conversation), { aitMsgs: aitMsgs }),\r\n                                        ]);\r\n                                    }\r\n                                    else {\r\n                                        (_f = this.rootStore.localConversationStore) === null || _f === void 0 ? void 0 : _f.updateConversation([\r\n                                            __assign(__assign({}, conversation), { aitMsgs: aitMsgs }),\r\n                                        ]);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        return [2 /*return*/];\r\n                    });\r\n                }); });\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    MsgStore.prototype._onReceiveP2PMessageReadReceipts = function (data) {\r\n        var _this = this;\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onReceiveP2PMessageReadReceipts: ', data);\r\n        data.forEach(function (item) {\r\n            var _a, _b, _c, _d, _e, _f;\r\n            var oldConversation = ((_a = _this.rootStore.sdkOptions) === null || _a === void 0 ? void 0 : _a.enableV2CloudConversation)\r\n                ? (_b = _this.rootStore.conversationStore) === null || _b === void 0 ? void 0 : _b.conversations.get(item.conversationId)\r\n                : (_c = _this.rootStore.localConversationStore) === null || _c === void 0 ? void 0 : _c.conversations.get(item.conversationId);\r\n            if (oldConversation &&\r\n                item.timestamp > (oldConversation.msgReceiptTime || 0)) {\r\n                if ((_d = _this.rootStore.sdkOptions) === null || _d === void 0 ? void 0 : _d.enableV2CloudConversation) {\r\n                    (_e = _this.rootStore.conversationStore) === null || _e === void 0 ? void 0 : _e.updateConversation([\r\n                        __assign(__assign({}, oldConversation), { msgReceiptTime: item.timestamp }),\r\n                    ]);\r\n                }\r\n                else {\r\n                    (_f = _this.rootStore.localConversationStore) === null || _f === void 0 ? void 0 : _f.updateConversation([\r\n                        __assign(__assign({}, oldConversation), { msgReceiptTime: item.timestamp }),\r\n                    ]);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    MsgStore.prototype._onReceiveTeamMessageReadReceipts = function (data) {\r\n        var _this = this;\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onReceiveTeamMessageReadReceipts: ', data);\r\n        // 群消息中，同一条消息可能收到多条消息的回执，需要按照已读数量排序，服务端下发可能顺序不一致，端上排序，保证最后的已读未读情况覆盖之前的\r\n        data.sort(function (a, b) { return a.readCount - b.readCount; });\r\n        data.forEach(function (msgReadReceipt) {\r\n            var conversationId = msgReadReceipt.conversationId;\r\n            var msg = _this.getMsg(conversationId, [\r\n                msgReadReceipt.messageClientId,\r\n            ])[0];\r\n            if (msg) {\r\n                var newMsg = _this._updateReceiptMsg(msg, {\r\n                    unread: msgReadReceipt.unreadCount,\r\n                    read: msgReadReceipt.readCount,\r\n                });\r\n                _this.addMsg(conversationId, [newMsg]);\r\n            }\r\n        });\r\n    };\r\n    MsgStore.prototype._formatExtField = function (conversationId, serverExtension) {\r\n        var extObj = serverExtension || {};\r\n        // 有回复消息的情况，需要把回复消息的信息放到 serverExtension 中\r\n        var replyMsg = this.getReplyMsgActive(conversationId);\r\n        if (replyMsg) {\r\n            extObj.yxReplyMsg = {\r\n                idClient: replyMsg.messageClientId,\r\n                scene: replyMsg.conversationType,\r\n                from: replyMsg.senderId,\r\n                receiverId: replyMsg.receiverId,\r\n                to: replyMsg.conversationId,\r\n                idServer: replyMsg.messageServerId,\r\n                time: replyMsg.createTime,\r\n            };\r\n        }\r\n        return extObj;\r\n    };\r\n    MsgStore.prototype._updateReceiptMsg = function (originMsg, data) {\r\n        return __assign(__assign({}, originMsg), { yxUnread: Number(data.unread), yxRead: Number(data.read) });\r\n    };\r\n    MsgStore.prototype._formatExtAitToPushInfo = function (yxAitMsg, content) {\r\n        function getForcePushIDsList(obj) {\r\n            return Object.keys(obj).includes(AT_ALL_ACCOUNT)\r\n                ? void 0\r\n                : Object.keys(obj);\r\n        }\r\n        var pushInfo = {\r\n            forcePushAccountIds: getForcePushIDsList(yxAitMsg),\r\n            forcePush: true,\r\n            forcePushContent: content,\r\n        };\r\n        return pushInfo;\r\n    };\r\n    MsgStore.prototype._createReCallMsg = function (msg) {\r\n        var _this = this;\r\n        var recallMsg = __assign(__assign({}, msg), { isSelf: true, sendingState: 1 /* V2NIMConst.V2NIMMessageSendingState\r\n                      .V2NIM_MESSAGE_SENDING_STATE_SUCCEEDED */, messageType: 100 /* V2NIMConst.V2NIMMessageType.V2NIM_MESSAGE_TYPE_CUSTOM */, recallType: 'reCallMsg', messageClientId: \"recall-\".concat(msg.messageClientId) });\r\n        // 只有 type 为 custom 和 text 的消息可以被重新编辑\r\n        if ([\r\n            100 /* V2NIMConst.V2NIMMessageType.V2NIM_MESSAGE_TYPE_CUSTOM */,\r\n            0 /* V2NIMConst.V2NIMMessageType.V2NIM_MESSAGE_TYPE_TEXT */,\r\n        ].includes(msg.messageType)) {\r\n            recallMsg.oldText = msg.text;\r\n            recallMsg.canEdit = true;\r\n            recallMsg.isRecallMsg = true;\r\n            recallMsg.canEditTimer = setTimeout(function () {\r\n                var newMsg = _this.getMsg(recallMsg.conversationId, [\r\n                    recallMsg.messageClientId,\r\n                ])[0];\r\n                if (newMsg) {\r\n                    _this.addMsg(newMsg.conversationId, [\r\n                        __assign(__assign({}, newMsg), { canEdit: false }),\r\n                    ]);\r\n                }\r\n            }, RECALL_TIME);\r\n        }\r\n        return recallMsg;\r\n    };\r\n    MsgStore.prototype._createBeReCallMsg = function (data) {\r\n        // @ts-ignore\r\n        return __assign(__assign({}, data.messageRefer), { isSelf: data.messageRefer.senderId ===\r\n                this.rootStore.userStore.myUserInfo.accountId, sendingState: 1 /* V2NIMConst.V2NIMMessageSendingState\r\n                      .V2NIM_MESSAGE_SENDING_STATE_SUCCEEDED */, messageType: 100 /* V2NIMConst.V2NIMMessageType.V2NIM_MESSAGE_TYPE_CUSTOM */, recallType: 'beReCallMsg', messageClientId: \"recall-\".concat(data.messageRefer.messageClientId) });\r\n    };\r\n    MsgStore.prototype._getAIConfig = function (msg) {\r\n        var _this = this;\r\n        var _a;\r\n        var serverExtension = msg.serverExtension, conversationId = msg.conversationId, receiverId = msg.receiverId, messageType = msg.messageType, _b = msg.text, text = _b === void 0 ? '' : _b;\r\n        var serverExt;\r\n        try {\r\n            serverExt = JSON.parse(serverExtension || '{}');\r\n        }\r\n        catch (error) {\r\n            serverExt = {};\r\n        }\r\n        // at 消息\r\n        var yxAitMsg = serverExt.yxAitMsg || {};\r\n        // 回复消息\r\n        var replyMsg = this.getReplyMsgActive(conversationId);\r\n        var relation = this.rootStore.uiStore.getRelation(receiverId).relation;\r\n        var myAccountId = this.rootStore.userStore.myUserInfo.accountId;\r\n        var aiConfig = void 0;\r\n        if (relation === 'ai') {\r\n            if (messageType === 0 /* V2NIMConst.V2NIMMessageType.V2NIM_MESSAGE_TYPE_TEXT */) {\r\n                // 取最近的30条文本会话\r\n                var _msgs = (this.msgs.get(conversationId) || [])\r\n                    .slice(-AI_MESSAGE_LIMIT)\r\n                    .filter(function (item) {\r\n                    return item.messageType ===\r\n                        0 /* V2NIMConst.V2NIMMessageType.V2NIM_MESSAGE_TYPE_TEXT */;\r\n                });\r\n                // 找到第一条自己发的消息，从此时开始作为真正的上下文\r\n                var myIndex = _msgs.findIndex(function (item) { return item.senderId === myAccountId; });\r\n                _msgs = myIndex === -1 ? [] : _msgs.slice(myIndex);\r\n                aiConfig = {\r\n                    accountId: receiverId,\r\n                    content: { msg: text, type: 0 },\r\n                    // 取最后30条消息作为上下文\r\n                    messages: _msgs.map(function (item) {\r\n                        var role = item.senderId === myAccountId\r\n                            ? 'user'\r\n                            : 'assistant';\r\n                        return {\r\n                            role: role,\r\n                            msg: item.text || '',\r\n                            type: 0,\r\n                        };\r\n                    }),\r\n                };\r\n            }\r\n            else {\r\n                aiConfig = {\r\n                    accountId: receiverId,\r\n                };\r\n            }\r\n        }\r\n        // 只保留 at 数字人的 yxAitMsg\r\n        var newYxAitMsg = {};\r\n        Object.keys(yxAitMsg).forEach(function (account) {\r\n            if (_this.rootStore.aiUserStore.aiUsers.has(account)) {\r\n                newYxAitMsg[account] = yxAitMsg[account];\r\n            }\r\n        });\r\n        // 找到最早的 at 数字人\r\n        var aiAtAccount = this._findMinStart(newYxAitMsg);\r\n        var aiAtMember = this.rootStore.aiUserStore.aiUsers.get(aiAtAccount || '');\r\n        // 表示 at 数字人\r\n        if (aiAtMember) {\r\n            aiConfig = {\r\n                accountId: aiAtMember.accountId,\r\n                content: { msg: text, type: 0 },\r\n            };\r\n        }\r\n        // 表示此时有回复消息\r\n        if (replyMsg && aiConfig) {\r\n            // 只有回复的是文本消息需要带上下文，其他类型消息不用带上下文\r\n            if (replyMsg.messageType ===\r\n                0 /* V2NIMConst.V2NIMMessageType.V2NIM_MESSAGE_TYPE_TEXT */) {\r\n                aiConfig.messages = [\r\n                    {\r\n                        role: 'user',\r\n                        msg: replyMsg.text || '',\r\n                        type: 0,\r\n                    },\r\n                ];\r\n            }\r\n            else {\r\n                aiConfig.messages = void 0;\r\n            }\r\n        }\r\n        //@ts-ignore\r\n        aiConfig === null || aiConfig === void 0 ? void 0 : aiConfig.aiStream = (_a = this.localOptions) === null || _a === void 0 ? void 0 : _a.aiStream;\r\n        return aiConfig;\r\n    };\r\n    MsgStore.prototype._findMinStart = function (data) {\r\n        var e_1, _a;\r\n        var minStart = Number.MAX_VALUE;\r\n        var minStartKey = void 0;\r\n        for (var key in data) {\r\n            var segments = data[key].segments;\r\n            try {\r\n                for (var segments_1 = (e_1 = void 0, __values(segments)), segments_1_1 = segments_1.next(); !segments_1_1.done; segments_1_1 = segments_1.next()) {\r\n                    var segment = segments_1_1.value;\r\n                    if (segment.start < minStart) {\r\n                        minStart = segment.start;\r\n                        minStartKey = key;\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (segments_1_1 && !segments_1_1.done && (_a = segments_1.return)) _a.call(segments_1);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n        return minStartKey;\r\n    };\r\n    return MsgStore;\r\n}());\n\n/**Mobx 可观察对象，负责管理黑名单和静音列表的子store */\r\nvar RelationStore = /** @class */ (function () {\r\n    function RelationStore(rootStore, nim) {\r\n        this.rootStore = rootStore;\r\n        this.nim = nim;\r\n        this.blacklist = [];\r\n        this.mutes = [];\r\n        this.logger = null;\r\n        makeAutoObservable(this);\r\n        this.logger = rootStore.logger;\r\n        this._onBlockListAdded = this._onBlockListAdded.bind(this);\r\n        this._onBlockListRemoved = this._onBlockListRemoved.bind(this);\r\n        this._onP2PMessageMuteModeChanged =\r\n            this._onP2PMessageMuteModeChanged.bind(this);\r\n        /** 黑名单新增用户回调，返回新加入黑名单的用户列表。当客户端本端添加用户到黑名单，或者其他端同步添加用户到黑名单时触发该回调 */\r\n        nim.V2NIMUserService.on('onBlockListAdded', this._onBlockListAdded);\r\n        /** 黑名单移除用户回调，返回移出黑名单的用户列表。当客户端本端从黑名单移除用户，或者其他端同步从黑名单移除用户时触发该回调 */\r\n        nim.V2NIMUserService.on('onBlockListRemoved', this._onBlockListRemoved);\r\n        /** 单聊消息免打扰模式变更事件 */\r\n        nim.V2NIMSettingService.on('onP2PMessageMuteModeChanged', this._onP2PMessageMuteModeChanged);\r\n    }\r\n    RelationStore.prototype.resetState = function () {\r\n        this.blacklist = [];\r\n        this.mutes = [];\r\n    };\r\n    /**\r\n     * 销毁RelationStore，会取消相关事件监听\r\n     */\r\n    RelationStore.prototype.destroy = function () {\r\n        this.resetState();\r\n        this.nim.V2NIMUserService.off('onBlockListAdded', this._onBlockListAdded);\r\n        this.nim.V2NIMUserService.off('onBlockListRemoved', this._onBlockListRemoved);\r\n        this.nim.V2NIMSettingService.off('onP2PMessageMuteModeChanged', this._onP2PMessageMuteModeChanged);\r\n    };\r\n    /**\r\n     * 内存中增加黑名单列表\r\n     * @param accounts - 账号数组\r\n     */\r\n    RelationStore.prototype.addBlacklist = function (accounts) {\r\n        this.blacklist = __spreadArray([], __read(new Set(this.blacklist.concat(accounts))), false);\r\n    };\r\n    /**\r\n     * 内存中删除黑名单列表\r\n     * @param accounts - 账号数组\r\n     */\r\n    RelationStore.prototype.removeBlacklist = function (accounts) {\r\n        this.blacklist = this.blacklist.filter(function (i) {\r\n            return accounts.every(function (j) { return i !== j; });\r\n        });\r\n    };\r\n    /**\r\n     * 是否在黑名单列表\r\n     */\r\n    RelationStore.prototype.isInBlacklist = function (account) {\r\n        return this.blacklist.includes(account);\r\n    };\r\n    /**\r\n     * 内存中增加静音列表\r\n     * @param accounts - 账号数组\r\n     */\r\n    RelationStore.prototype.addMutes = function (accounts) {\r\n        this.mutes = __spreadArray([], __read(new Set(this.mutes.concat(accounts))), false);\r\n    };\r\n    /**\r\n     * 内存中删除静音列表\r\n     * @param accounts - 账号数组\r\n     */\r\n    RelationStore.prototype.removeMutes = function (accounts) {\r\n        this.mutes = this.mutes.filter(function (i) { return accounts.every(function (j) { return i !== j; }); });\r\n    };\r\n    // 获取黑名单列表\r\n    RelationStore.prototype.getBlockListActive = function () {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var res, error_1;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        _c.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('getBlockListActive');\r\n                        return [4 /*yield*/, this.nim.V2NIMUserService.getBlockList()];\r\n                    case 1:\r\n                        res = _c.sent();\r\n                        this.addBlacklist(res);\r\n                        return [2 /*return*/, res];\r\n                    case 2:\r\n                        error_1 = _c.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.error('getBlockListActive failed: ', error_1);\r\n                        throw error_1;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // 获取P2P消息免打扰列表\r\n    RelationStore.prototype.getP2PMuteListActive = function () {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var res, error_2;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        _c.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('getP2PMuteListActive');\r\n                        return [4 /*yield*/, this.nim.V2NIMSettingService.getP2PMessageMuteList()];\r\n                    case 1:\r\n                        res = _c.sent();\r\n                        this.addMutes(res);\r\n                        return [2 /*return*/, res];\r\n                    case 2:\r\n                        error_2 = _c.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.error('getP2PMuteListActive failed: ', error_2);\r\n                        throw error_2;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 加入 黑名单\r\n     * @param accountId 账号\r\n     */\r\n    RelationStore.prototype.addUserToBlockListActive = function (accountId) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_3;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('addUserToBlockListActive', accountId);\r\n                        return [4 /*yield*/, this.nim.V2NIMUserService.addUserToBlockList(accountId)];\r\n                    case 1:\r\n                        _d.sent();\r\n                        this.addBlacklist([accountId]);\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('addUserToBlockListActive success', accountId);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_3 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('addUserToBlockListActive failed: ', accountId, error_3);\r\n                        throw error_3;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 移除 黑名单\r\n     * @param accountId 账号\r\n     */\r\n    RelationStore.prototype.removeUserFromBlockListActive = function (accountId) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_4;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('removeUserFromBlockListActive', accountId);\r\n                        return [4 /*yield*/, this.nim.V2NIMUserService.removeUserFromBlockList(accountId)];\r\n                    case 1:\r\n                        _d.sent();\r\n                        this.removeBlacklist([accountId]);\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('removeUserFromBlockListActive success', accountId);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_4 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('removeUserFromBlockListActive failed: ', accountId, error_4);\r\n                        throw error_4;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 设置/取消 单聊（点对点）消息免打扰模式\r\n     * @param accountId 账号\r\n     * @param muteMode  消息免打扰模式：免打扰开启或免打扰关闭\r\n     */\r\n    RelationStore.prototype.setP2PMessageMuteModeActive = function (accountId, muteMode) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_5;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('setP2PMessageMuteModeActive', accountId, muteMode);\r\n                        return [4 /*yield*/, this.nim.V2NIMSettingService.setP2PMessageMuteMode(accountId, muteMode)];\r\n                    case 1:\r\n                        _d.sent();\r\n                        if (muteMode ===\r\n                            1 /* V2NIMConst.V2NIMP2PMessageMuteMode.V2NIM_P2P_MESSAGE_MUTE_MODE_ON */) {\r\n                            this.addMutes([accountId]);\r\n                        }\r\n                        else if (muteMode ===\r\n                            0 /* V2NIMConst.V2NIMP2PMessageMuteMode.V2NIM_P2P_MESSAGE_MUTE_MODE_OFF */) {\r\n                            this.removeMutes([accountId]);\r\n                        }\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('setP2PMessageMuteModeActive success', {\r\n                            accountId: accountId,\r\n                            muteMode: muteMode,\r\n                        });\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_5 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('setP2PMessageMuteModeActive failed: ', { accountId: accountId, muteMode: muteMode }, error_5);\r\n                        throw error_5;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 黑名单新增用户回调，返回新加入黑名单的用户列表。当客户端本端添加用户到黑名单，或者其他端同步添加用户到黑名单时触发该回调\r\n     */\r\n    RelationStore.prototype._onBlockListAdded = function (user) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onBlockListAdded', user);\r\n        this.addBlacklist([user.accountId]);\r\n    };\r\n    /**\r\n     * 黑名单移除用户回调，返回移出黑名单的用户列表。当客户端本端从黑名单移除用户，或者其他端同步从黑名单移除用户时触发该回调。\r\n     */\r\n    RelationStore.prototype._onBlockListRemoved = function (accountId) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onBlockListRemoved', accountId);\r\n        this.removeBlacklist([accountId]);\r\n    };\r\n    /**\r\n     * 单聊消息免打扰模式变更事件\r\n     */\r\n    RelationStore.prototype._onP2PMessageMuteModeChanged = function (accountId, muteMode) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onP2PMessageMuteModeChanged', accountId, muteMode);\r\n        if (muteMode ===\r\n            1 /* V2NIMConst.V2NIMP2PMessageMuteMode.V2NIM_P2P_MESSAGE_MUTE_MODE_ON */) {\r\n            this.addMutes([accountId]);\r\n        }\r\n        else if (muteMode ===\r\n            0 /* V2NIMConst.V2NIMP2PMessageMuteMode.V2NIM_P2P_MESSAGE_MUTE_MODE_OFF */) {\r\n            this.removeMutes([accountId]);\r\n        }\r\n    };\r\n    return RelationStore;\r\n}());\n\n/**Mobx 可观察对象，负责管理会话列表的子 store */\r\nvar ConversationStore = /** @class */ (function () {\r\n    function ConversationStore(rootStore, nim) {\r\n        this.rootStore = rootStore;\r\n        this.nim = nim;\r\n        this.conversations = new Map();\r\n        this.totalUnreadCount = 0;\r\n        this.logger = null;\r\n        makeAutoObservable(this);\r\n        this._onSyncStarted = this._onSyncStarted.bind(this);\r\n        this._onSyncFinished = this._onSyncFinished.bind(this);\r\n        this._onSyncFailed = this._onSyncFailed.bind(this);\r\n        this._onConversationCreated = this._onConversationCreated.bind(this);\r\n        this._onConversationDeleted = this._onConversationDeleted.bind(this);\r\n        this._onConversationChanged = this._onConversationChanged.bind(this);\r\n        this._onTotalUnreadCountChanged = this._onTotalUnreadCountChanged.bind(this);\r\n        this.logger = rootStore.logger;\r\n        /** 数据同步开始 */\r\n        nim.V2NIMConversationService.on('onSyncStarted', this._onSyncStarted);\r\n        /** 数据同步结束 */\r\n        nim.V2NIMConversationService.on('onSyncFinished', this._onSyncFinished);\r\n        /** 数据同步失败 */\r\n        nim.V2NIMConversationService.on('onSyncFailed', this._onSyncFailed);\r\n        /** 会话创建 */\r\n        nim.V2NIMConversationService.on('onConversationCreated', this._onConversationCreated);\r\n        /** 会话删除 */\r\n        nim.V2NIMConversationService.on('onConversationDeleted', this._onConversationDeleted);\r\n        /** 会话更新 */\r\n        nim.V2NIMConversationService.on('onConversationChanged', this._onConversationChanged);\r\n        /** 会话总未读数变化 */\r\n        nim.V2NIMConversationService.on('onTotalUnreadCountChanged', this._onTotalUnreadCountChanged);\r\n    }\r\n    ConversationStore.prototype.resetState = function () {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('Conversation resetState');\r\n        this.conversations.clear();\r\n        this.totalUnreadCount = 0;\r\n    };\r\n    /**\r\n     * 销毁\r\n     */\r\n    ConversationStore.prototype.destroy = function () {\r\n        this.resetState();\r\n        this.nim.V2NIMConversationService.off('onSyncStarted', this._onSyncStarted);\r\n        this.nim.V2NIMConversationService.off('onSyncFinished', this._onSyncFinished);\r\n        this.nim.V2NIMConversationService.off('onSyncFailed', this._onSyncFailed);\r\n        this.nim.V2NIMConversationService.off('onConversationCreated', this._onConversationCreated);\r\n        this.nim.V2NIMConversationService.off('onConversationDeleted', this._onConversationDeleted);\r\n        this.nim.V2NIMConversationService.off('onConversationChanged', this._onConversationChanged);\r\n        this.nim.V2NIMConversationService.off('onTotalUnreadCountChanged', this._onTotalUnreadCountChanged);\r\n    };\r\n    /**\r\n     * 添加内存中的会话\r\n     * @param conversations 会话数组\r\n     */\r\n    ConversationStore.prototype.addConversation = function (conversations) {\r\n        var _this = this;\r\n        conversations\r\n            .filter(function (item) { return !!item.conversationId; })\r\n            // 暂时仅支持 p2p 和 team\r\n            .filter(function (item) {\r\n            return [\r\n                1 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_P2P */,\r\n                2 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_TEAM */,\r\n            ].includes(item.type);\r\n        })\r\n            .forEach(function (item) { return __awaiter(_this, void 0, void 0, function () {\r\n            var oldConversation;\r\n            return __generator(this, function (_a) {\r\n                oldConversation = this.conversations.get(item.conversationId);\r\n                // 先更新一次\r\n                this.conversations.set(item.conversationId, __assign(__assign({}, oldConversation), item));\r\n                return [2 /*return*/];\r\n            });\r\n        }); });\r\n    };\r\n    /**\r\n     * 更新内存中的会话\r\n     * @param conversations 会话数组\r\n     */\r\n    ConversationStore.prototype.updateConversation = function (conversations) {\r\n        var _this = this;\r\n        conversations\r\n            .filter(function (item) { return !!item.conversationId; })\r\n            // 暂时仅支持 p2p 和 team\r\n            .filter(function (item) {\r\n            return [\r\n                1 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_P2P */,\r\n                2 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_TEAM */,\r\n            ].includes(item.type);\r\n        })\r\n            .forEach(function (item) {\r\n            var oldConversation = _this.conversations.get(item.conversationId);\r\n            _this.conversations.set(item.conversationId, __assign(__assign({}, oldConversation), item));\r\n        });\r\n    };\r\n    /**\r\n     * 移除内存中的会话\r\n     * @param conversationId 会话ID\r\n     */\r\n    ConversationStore.prototype.removeConversation = function (conversationIds) {\r\n        var _this = this;\r\n        conversationIds.forEach(function (item) {\r\n            _this.conversations.delete(item);\r\n            if (_this.rootStore.uiStore.selectedConversation === item) {\r\n                _this.rootStore.uiStore.unselectConversation();\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * 重置会话未读数\r\n     * @param conversationId - 消息所属的会话的ID\r\n     */\r\n    ConversationStore.prototype.resetConversation = function (conversationId) {\r\n        var _a, _b, _c, _d;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var conversation, error_1;\r\n            return __generator(this, function (_e) {\r\n                switch (_e.label) {\r\n                    case 0:\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('resetConversation', conversationId);\r\n                        conversation = this.conversations.get(conversationId);\r\n                        if (!conversation) {\r\n                            (_b = this.logger) === null || _b === void 0 ? void 0 : _b.warn('resetConversation: conversation is not found.', conversationId);\r\n                            return [2 /*return*/];\r\n                        }\r\n                        _e.label = 1;\r\n                    case 1:\r\n                        _e.trys.push([1, 4, , 5]);\r\n                        if (!conversation.unreadCount) return [3 /*break*/, 3];\r\n                        // 请求前也清理一次会话未读数，fix http://jira.netease.com/browse/YYTX-34326\r\n                        this._resetMemoryConversationUnreadCount(conversation);\r\n                        return [4 /*yield*/, this.nim.V2NIMConversationService.clearUnreadCountByIds([\r\n                                conversation.conversationId,\r\n                            ])];\r\n                    case 2:\r\n                        _e.sent();\r\n                        this._resetMemoryConversationUnreadCount(conversation);\r\n                        _e.label = 3;\r\n                    case 3:\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.log('resetConversation success');\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        error_1 = _e.sent();\r\n                        (_d = this.logger) === null || _d === void 0 ? void 0 : _d.error('resetConversation failed: ', error_1);\r\n                        throw error_1;\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 插入一条会话记录\r\n     * @param conversationType\r\n     * @param receiverId - 接收方, 对方帐号或者群id\r\n     * @param isSelected - 是否选中\r\n     */\r\n    ConversationStore.prototype.insertConversationActive = function (conversationType, receiverId, isSelected) {\r\n        var _a, _b, _c;\r\n        if (isSelected === void 0) { isSelected = true; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var conversationId, conversation, error_2;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 5, , 6]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('insertConversationActive', {\r\n                            conversationType: conversationType,\r\n                            receiverId: receiverId,\r\n                            isSelected: isSelected,\r\n                        });\r\n                        conversationId = '';\r\n                        if (conversationType ===\r\n                            1 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_P2P */) {\r\n                            conversationId =\r\n                                this.nim.V2NIMConversationIdUtil.p2pConversationId(receiverId);\r\n                        }\r\n                        else if (conversationType ===\r\n                            2 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_TEAM */) {\r\n                            conversationId =\r\n                                this.nim.V2NIMConversationIdUtil.teamConversationId(receiverId);\r\n                        }\r\n                        else {\r\n                            throw new Error('Unsupported conversation type');\r\n                        }\r\n                        if (!!this.conversations.has(conversationId)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.nim.V2NIMConversationService.createConversation(conversationId)];\r\n                    case 1:\r\n                        conversation = _d.sent();\r\n                        this.addConversation([conversation]);\r\n                        _d.label = 2;\r\n                    case 2:\r\n                        if (!isSelected) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, this.rootStore.uiStore.selectConversation(conversationId)];\r\n                    case 3:\r\n                        _d.sent();\r\n                        _d.label = 4;\r\n                    case 4:\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('insertConversationActive success', {\r\n                            conversationType: conversationType,\r\n                            receiverId: receiverId,\r\n                            isSelected: isSelected,\r\n                        });\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        error_2 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('insertConversationActive failed: ', { conversationType: conversationType, receiverId: receiverId, isSelected: isSelected }, error_2);\r\n                        throw error_2;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 删除会话记录\r\n     * @param conversationId - 消息所属的会话的ID\r\n     */\r\n    ConversationStore.prototype.deleteConversationActive = function (conversationId) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_4;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 6, , 7]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('deleteConversationActive', conversationId);\r\n                        _d.label = 1;\r\n                    case 1:\r\n                        _d.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.stickTopConversationActive(conversationId, false)];\r\n                    case 2:\r\n                        _d.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        _d.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 4:\r\n                        // 先删除内存，防止删除失败导致一些问题\r\n                        this.removeConversation([conversationId]);\r\n                        // 不删除历史消息，让表现跟线上一致，后续可根据需求调整\r\n                        return [4 /*yield*/, this.nim.V2NIMConversationService.deleteConversation(conversationId, false)];\r\n                    case 5:\r\n                        // 不删除历史消息，让表现跟线上一致，后续可根据需求调整\r\n                        _d.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('deleteConversationActive success');\r\n                        return [3 /*break*/, 7];\r\n                    case 6:\r\n                        error_4 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.warn('deleteConversationActive failed but continue: ', error_4);\r\n                        return [3 /*break*/, 7];\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 新增会话置顶\r\n     * @param conversationId - 消息所属的会话的ID\r\n     * @param stickTop - 是否置顶\r\n     */\r\n    ConversationStore.prototype.stickTopConversationActive = function (conversationId, stickTop) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_5;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('stickTopConversationActive', conversationId, stickTop);\r\n                        return [4 /*yield*/, this.nim.V2NIMConversationService.stickTopConversation(conversationId, stickTop)];\r\n                    case 1:\r\n                        _d.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('stickTopConversationActive success');\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_5 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('stickTopConversationActive failed: ', error_5);\r\n                        throw error_5;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取会话列表\r\n     * @param offset 分页偏移量\r\n     * @param limit 分页拉取数量\r\n     */\r\n    ConversationStore.prototype.getConversationListActive = function (offset, limit) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var res, error_6;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 3, , 4]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('getConversationListActive', offset, limit);\r\n                        return [4 /*yield*/, this.nim.V2NIMConversationService.getConversationList(offset, limit)];\r\n                    case 1:\r\n                        res = _d.sent();\r\n                        this.addConversation(res.conversationList);\r\n                        return [4 /*yield*/, this.getP2PMessageReceipt(res.conversationList\r\n                                .filter(function (item) {\r\n                                return item.type ===\r\n                                    1 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_P2P */;\r\n                            })\r\n                                .map(function (item) { return item.conversationId; }))];\r\n                    case 2:\r\n                        _d.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('getConversationListActive success', offset, limit, res);\r\n                        return [2 /*return*/, res];\r\n                    case 3:\r\n                        error_6 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('getConversationListActive failed: ', error_6, offset, limit);\r\n                        throw error_6;\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ConversationStore.prototype.getP2PMessageReceipt = function (conversationIds) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var res, conversations, error_7;\r\n            var _this = this;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('getP2PMessageReceipt', conversationIds);\r\n                        return [4 /*yield*/, Promise.all(conversationIds.map(function (item) {\r\n                                return _this.nim.V2NIMMessageService.getP2PMessageReceipt(item);\r\n                            }))];\r\n                    case 1:\r\n                        res = _d.sent();\r\n                        conversations = res\r\n                            .map(function (item) {\r\n                            var conversation = _this.conversations.get(item.conversationId);\r\n                            if (conversation) {\r\n                                return __assign(__assign({}, conversation), { msgReceiptTime: item.timestamp });\r\n                            }\r\n                        })\r\n                            .filter(function (item) { return !!item; });\r\n                        this.updateConversation(conversations);\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('getP2PMessageReceipt success', conversationIds, res);\r\n                        return [2 /*return*/, res];\r\n                    case 2:\r\n                        error_7 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('getP2PMessageReceipt failed: ', error_7, conversationIds);\r\n                        throw error_7;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ConversationStore.prototype._resetMemoryConversationUnreadCount = function (conversation) {\r\n        var newConversation = this.conversations.get(conversation.conversationId);\r\n        if (newConversation) {\r\n            this.updateConversation([__assign(__assign({}, newConversation), { unreadCount: 0 })]);\r\n        }\r\n    };\r\n    /**\r\n     * 获取会话已读时间戳。该时间包含多端已读时间戳\r\n     */\r\n    ConversationStore.prototype.getConversationReadTimeActive = function (conversationId) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var res, error_8;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('getConversationReadTimeActive', conversationId);\r\n                        return [4 /*yield*/, this.nim.V2NIMConversationService.getConversationReadTime(conversationId)];\r\n                    case 1:\r\n                        res = _d.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('getConversationReadTimeActive success', conversationId, res);\r\n                        return [2 /*return*/, res];\r\n                    case 2:\r\n                        error_8 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('getConversationReadTimeActive failed: ', error_8, conversationId);\r\n                        throw error_8;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 标记会话已读时间戳\r\n     *\r\n     * 注: 当该方法调用后，SDK 可能给多端账户抛出以下的事件\r\n     *\r\n     * {@link V2NIMConversationListener.onConversationReadTimeUpdated | V2NIMConversationListener.onConversationReadTimeUpdated} <br/>\r\n     *\r\n     */\r\n    ConversationStore.prototype.markConversationReadActive = function (conversationId) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var res, error_9;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('markConversationReadActive', conversationId);\r\n                        return [4 /*yield*/, this.nim.V2NIMConversationService.markConversationRead(conversationId)];\r\n                    case 1:\r\n                        res = _d.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('markConversationReadActive success', conversationId, res);\r\n                        return [2 /*return*/, res];\r\n                    case 2:\r\n                        error_9 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('markConversationReadActive failed: ', error_9, conversationId);\r\n                        throw error_9;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 处理会话中的@ 消息\r\n     */\r\n    ConversationStore.prototype.handleConversationWithAit = function (msgs) {\r\n        var _this = this;\r\n        msgs.map(function (item) { return __awaiter(_this, void 0, void 0, function () {\r\n            var hasAitMsg, conversationReadTime, isCurConversation, isSendFromMe, conversation, aitMsgs;\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!(item.conversationType ===\r\n                            2 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_TEAM */ ||\r\n                            item.conversationType ===\r\n                                3 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_SUPER_TEAM */)) return [3 /*break*/, 2];\r\n                        if (!(item === null || item === void 0 ? void 0 : item.serverExtension)) return [3 /*break*/, 2];\r\n                        hasAitMsg = this.hasAitMsg([item.serverExtension]);\r\n                        return [4 /*yield*/, this.getConversationReadTimeActive(item.conversationId)];\r\n                    case 1:\r\n                        conversationReadTime = _b.sent();\r\n                        isCurConversation = item.conversationId == this.rootStore.uiStore.selectedConversation;\r\n                        isSendFromMe = item.senderId === ((_a = this.rootStore.userStore.myUserInfo) === null || _a === void 0 ? void 0 : _a.accountId);\r\n                        // 当前通过_onReceiveMessages获取的新消息时间戳大于会话的最后已读时间戳，且有@消息，且没有选中当前该会话，则标记为已读\r\n                        if (item.createTime > conversationReadTime &&\r\n                            hasAitMsg &&\r\n                            !isCurConversation &&\r\n                            !isSendFromMe) {\r\n                            conversation = this.conversations.get(item.conversationId);\r\n                            // 如果此时conversation为空，则可能的情况为，该用户删除了该会话后，又收到了@消息（onReceiveMessages会先于onConversationCreated触发），此时需要在onConversationCreated处理@消息相关\r\n                            if (conversation) {\r\n                                aitMsgs = conversation.aitMsgs || [];\r\n                                if (aitMsgs.length === 0) {\r\n                                    this.updateConversation([\r\n                                        __assign(__assign({}, conversation), { aitMsgs: [item.messageClientId] }),\r\n                                    ]);\r\n                                }\r\n                                else {\r\n                                    this.updateConversation([\r\n                                        __assign(__assign({}, conversation), { aitMsgs: __spreadArray(__spreadArray([], __read(aitMsgs), false), [item.messageClientId], false) }),\r\n                                    ]);\r\n                                }\r\n                            }\r\n                        }\r\n                        _b.label = 2;\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        }); });\r\n    };\r\n    /**\r\n     * 重置会话中的@ 消息\r\n     */\r\n    ConversationStore.prototype.resetConversationAit = function (conversationId) {\r\n        var conversation = this.conversations.get(conversationId);\r\n        if ((conversation === null || conversation === void 0 ? void 0 : conversation.type) ===\r\n            2 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_TEAM */ ||\r\n            (conversation === null || conversation === void 0 ? void 0 : conversation.type) ===\r\n                3 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_SUPER_TEAM */) {\r\n            this.updateConversation([\r\n                __assign(__assign({}, conversation), { aitMsgs: [] }),\r\n            ]);\r\n        }\r\n    };\r\n    ConversationStore.prototype.hasAitMsg = function (serverExtensions) {\r\n        var _this = this;\r\n        var flag = false;\r\n        if (serverExtensions === null || serverExtensions === void 0 ? void 0 : serverExtensions.length) {\r\n            serverExtensions === null || serverExtensions === void 0 ? void 0 : serverExtensions.forEach(function (item) {\r\n                var _a, _b;\r\n                try {\r\n                    var extObj = JSON.parse(item || '{}');\r\n                    var yxAitMsg = extObj.yxAitMsg;\r\n                    var account_1 = _this.rootStore.userStore.myUserInfo.accountId;\r\n                    if (yxAitMsg) {\r\n                        (_a = Object.keys(yxAitMsg)) === null || _a === void 0 ? void 0 : _a.forEach(function (key) {\r\n                            if (key === account_1 || key === AT_ALL_ACCOUNT) {\r\n                                flag = true;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                catch (_c) {\r\n                    (_b = _this.logger) === null || _b === void 0 ? void 0 : _b.error('parse serverExtension failed: ', item);\r\n                }\r\n            });\r\n        }\r\n        return flag;\r\n    };\r\n    ConversationStore.prototype._onSyncStarted = function () {\r\n        var _a, _b, _c;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onSyncStarted');\r\n        // 获取会话列表\r\n        (_b = this.rootStore.conversationStore) === null || _b === void 0 ? void 0 : _b.getConversationListActive(0, this.rootStore.localOptions.conversationLimit || 100);\r\n        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.log('_onSyncFinished');\r\n    };\r\n    ConversationStore.prototype._onSyncFinished = function () {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_c) {\r\n                // 获取会话列表\r\n                (_a = this.rootStore.conversationStore) === null || _a === void 0 ? void 0 : _a.getConversationListActive(0, this.rootStore.localOptions.conversationLimit || 100);\r\n                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('_onSyncFinished');\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    ConversationStore.prototype._onSyncFailed = function (e) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onSyncFailed', e);\r\n    };\r\n    ConversationStore.prototype._onConversationCreated = function (data) {\r\n        var _this = this;\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onConversationCreated', data);\r\n        // 如果是创群，此时_onConversationCreated 返回的data可能没有avatar和name，需要getConversation\r\n        if (data.type ===\r\n            2 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_TEAM */) {\r\n            this.nim.V2NIMConversationService.getConversation(data.conversationId).then(function (conversation) {\r\n                _this.addConversation([conversation]);\r\n                // 处理@消息 情况为\r\n                if (conversation.lastMessage) {\r\n                    _this.handleConversationWithAit([\r\n                        __assign(__assign({}, conversation.lastMessage), conversation.lastMessage.messageRefer),\r\n                    ]);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.addConversation([data]);\r\n            // 会话创建的时候，获取一下当前会话的最后已读时间，便于展示消息已读未读\r\n            if (data.type ===\r\n                1 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_P2P */) {\r\n                var conversationId_1 = data.conversationId;\r\n                this.nim.V2NIMMessageService.getP2PMessageReceipt(conversationId_1).then(function (res) {\r\n                    var conversation = _this.conversations.get(conversationId_1);\r\n                    if (conversation) {\r\n                        _this.updateConversation([\r\n                            __assign(__assign({}, conversation), { msgReceiptTime: res.timestamp }),\r\n                        ]);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n    ConversationStore.prototype._onConversationDeleted = function (conversationIds) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onConversationDeleted', conversationIds);\r\n        this.removeConversation(conversationIds);\r\n    };\r\n    ConversationStore.prototype._onConversationChanged = function (data) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onConversationChanged', data);\r\n                this.addConversation(data);\r\n                data.forEach(function (item) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var attachment, type;\r\n                    var _a, _b, _c, _d;\r\n                    return __generator(this, function (_e) {\r\n                        switch (_e.label) {\r\n                            case 0:\r\n                                attachment = (_a = item.lastMessage) === null || _a === void 0 ? void 0 : _a.attachment;\r\n                                type = attachment === null || attachment === void 0 ? void 0 : attachment.type;\r\n                                if (!(((_b = item.lastMessage) === null || _b === void 0 ? void 0 : _b.messageType) ===\r\n                                    5 /* V2NIMConst.V2NIMMessageType.V2NIM_MESSAGE_TYPE_NOTIFICATION */ &&\r\n                                    ((type ===\r\n                                        1 /* V2NIMConst.V2NIMMessageNotificationType\r\n                                                    .V2NIM_MESSAGE_NOTIFICATION_TYPE_TEAM_KICK */ &&\r\n                                        ((_c = attachment === null || attachment === void 0 ? void 0 : attachment.targetIds) === null || _c === void 0 ? void 0 : _c.includes(this.rootStore.userStore.myUserInfo.accountId))) ||\r\n                                        (type ===\r\n                                            2 /* V2NIMConst.V2NIMMessageNotificationType\r\n                                                          .V2NIM_MESSAGE_NOTIFICATION_TYPE_TEAM_LEAVE */ &&\r\n                                            ((_d = item.lastMessage) === null || _d === void 0 ? void 0 : _d.messageRefer.senderId) ===\r\n                                                this.rootStore.userStore.myUserInfo.accountId) ||\r\n                                        type ===\r\n                                            4 /* V2NIMConst.V2NIMMessageNotificationType\r\n                                                          .V2NIM_MESSAGE_NOTIFICATION_TYPE_TEAM_DISMISS */))) return [3 /*break*/, 2];\r\n                                return [4 /*yield*/, this.deleteConversationActive(item.conversationId)];\r\n                            case 1:\r\n                                _e.sent();\r\n                                return [3 /*break*/, 4];\r\n                            case 2:\r\n                                if (!(this.rootStore.uiStore.selectedConversation === item.conversationId)) return [3 /*break*/, 4];\r\n                                return [4 /*yield*/, this.resetConversation(item.conversationId)];\r\n                            case 3:\r\n                                _e.sent();\r\n                                _e.label = 4;\r\n                            case 4:\r\n                                if (item.type ===\r\n                                    2 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_TEAM */ &&\r\n                                    item.unreadCount == 0) {\r\n                                    this.resetConversationAit(item.conversationId);\r\n                                }\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    ConversationStore.prototype._onTotalUnreadCountChanged = function (data) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onTotalUnreadCountChanged', data);\r\n        this.totalUnreadCount = data;\r\n    };\r\n    return ConversationStore;\r\n}());\n\n/**Mobx 可观察对象，负责管理群组的子 store */\r\nvar TeamStore = /** @class */ (function () {\r\n    function TeamStore(rootStore, nim, localOptions) {\r\n        this.rootStore = rootStore;\r\n        this.nim = nim;\r\n        this.localOptions = localOptions;\r\n        this.teams = new Map();\r\n        this.logger = null;\r\n        makeAutoObservable(this);\r\n        this.logger = rootStore.logger;\r\n        this._onReceiveTeamJoinActionInfo =\r\n            this._onReceiveTeamJoinActionInfo.bind(this);\r\n        this._onSyncFailed = this._onSyncFailed.bind(this);\r\n        this._onSyncFinished = this._onSyncFinished.bind(this);\r\n        this._onSyncStarted = this._onSyncStarted.bind(this);\r\n        this._onTeamCreated = this._onTeamCreated.bind(this);\r\n        this._onTeamDismissed = this._onTeamDismissed.bind(this);\r\n        this._onTeamInfoUpdated = this._onTeamInfoUpdated.bind(this);\r\n        this._onTeamJoined = this._onTeamJoined.bind(this);\r\n        this._onTeamLeft = this._onTeamLeft.bind(this);\r\n        this._onTeamMemberInfoUpdated = this._onTeamMemberInfoUpdated.bind(this);\r\n        this._onTeamMemberJoined = this._onTeamMemberJoined.bind(this);\r\n        this._onTeamMemberKicked = this._onTeamMemberKicked.bind(this);\r\n        this._onTeamMemberLeft = this._onTeamMemberLeft.bind(this);\r\n        /** 群组申请动作回调 */\r\n        nim.V2NIMTeamService.on('onReceiveTeamJoinActionInfo', this._onReceiveTeamJoinActionInfo);\r\n        /** 群组信息数据同步失败 */\r\n        nim.V2NIMTeamService.on('onSyncFailed', this._onSyncFailed);\r\n        /** 群组信息数据同步完成 */\r\n        nim.V2NIMTeamService.on('onSyncFinished', this._onSyncFinished);\r\n        /** 群组信息数据同步开始 */\r\n        nim.V2NIMTeamService.on('onSyncStarted', this._onSyncStarted);\r\n        /** 创建群组回调 */\r\n        nim.V2NIMTeamService.on('onTeamCreated', this._onTeamCreated);\r\n        /** 解散群组回调 */\r\n        nim.V2NIMTeamService.on('onTeamDismissed', this._onTeamDismissed);\r\n        /** 更新群组信息回调 */\r\n        nim.V2NIMTeamService.on('onTeamInfoUpdated', this._onTeamInfoUpdated);\r\n        /** 自己被邀请后接受邀请， 或申请通过，或直接被拉入群组回调 */\r\n        nim.V2NIMTeamService.on('onTeamJoined', this._onTeamJoined);\r\n        /** 自己主动离开群组或被管理员踢出回调 */\r\n        nim.V2NIMTeamService.on('onTeamLeft', this._onTeamLeft);\r\n        /** 群组成员信息更新回调 */\r\n        nim.V2NIMTeamService.on('onTeamMemberInfoUpdated', this._onTeamMemberInfoUpdated);\r\n        /** 群组成员加入回调(非自己) */\r\n        nim.V2NIMTeamService.on('onTeamMemberJoined', this._onTeamMemberJoined);\r\n        /** 群组成员被踢回调(非自己) */\r\n        nim.V2NIMTeamService.on('onTeamMemberKicked', this._onTeamMemberKicked);\r\n        /** 群组成员离开回调(非自己) */\r\n        nim.V2NIMTeamService.on('onTeamMemberLeft', this._onTeamMemberLeft);\r\n        /** 监听群消息免打扰模式变更事件 */\r\n        nim.V2NIMSettingService.on('onTeamMessageMuteModeChanged', this._onTeamMessageMuteModeChanged);\r\n    }\r\n    TeamStore.prototype.resetState = function () {\r\n        this.teams.clear();\r\n    };\r\n    /**\r\n     * 销毁TeamStore，会取消群组相关事件监听\r\n     */\r\n    TeamStore.prototype.destroy = function () {\r\n        this.resetState();\r\n        this.nim.V2NIMTeamService.off('onReceiveTeamJoinActionInfo', this._onReceiveTeamJoinActionInfo);\r\n        this.nim.V2NIMTeamService.off('onSyncFailed', this._onSyncFailed);\r\n        this.nim.V2NIMTeamService.off('onSyncFinished', this._onSyncFinished);\r\n        this.nim.V2NIMTeamService.off('onSyncStarted', this._onSyncStarted);\r\n        this.nim.V2NIMTeamService.off('onTeamCreated', this._onTeamCreated);\r\n        this.nim.V2NIMTeamService.off('onTeamDismissed', this._onTeamDismissed);\r\n        this.nim.V2NIMTeamService.off('onTeamInfoUpdated', this._onTeamInfoUpdated);\r\n        this.nim.V2NIMTeamService.off('onTeamJoined', this._onTeamJoined);\r\n        this.nim.V2NIMTeamService.off('onTeamLeft', this._onTeamLeft);\r\n        this.nim.V2NIMTeamService.off('onTeamMemberInfoUpdated', this._onTeamMemberInfoUpdated);\r\n        this.nim.V2NIMTeamService.off('onTeamMemberJoined', this._onTeamMemberJoined);\r\n        this.nim.V2NIMTeamService.off('onTeamMemberKicked', this._onTeamMemberKicked);\r\n        this.nim.V2NIMTeamService.off('onTeamMemberLeft', this._onTeamMemberLeft);\r\n        this.nim.V2NIMSettingService.off('onTeamMessageMuteModeChanged', this._onTeamMessageMuteModeChanged);\r\n    };\r\n    /**\r\n     * TeamStore 内存中增加群组\r\n     * @param teams - 群组\r\n     */\r\n    TeamStore.prototype.addTeam = function (teams) {\r\n        var _this = this;\r\n        teams\r\n            .filter(function (item) { return !!item.isValidTeam; })\r\n            .filter(function (item) { return !!item.teamId; })\r\n            .forEach(function (item) {\r\n            _this.teams.set(item.teamId, item);\r\n        });\r\n    };\r\n    /**\r\n     * TeamStore 内存中移除群组\r\n     * @param teamIds - 群id数组\r\n     */\r\n    TeamStore.prototype.removeTeam = function (teamIds) {\r\n        var _this = this;\r\n        teamIds.forEach(function (item) {\r\n            _this.teams.delete(item);\r\n        });\r\n    };\r\n    /**\r\n     * TeamStore 内存中更新群组\r\n     * @param data - 群组信息\r\n     */\r\n    TeamStore.prototype.updateTeam = function (data) {\r\n        var _this = this;\r\n        data\r\n            .filter(function (item) { return !!item.teamId; })\r\n            .forEach(function (item) {\r\n            var oldTeam = _this.teams.get(item.teamId);\r\n            if (oldTeam) {\r\n                var newTeam = __assign(__assign({}, oldTeam), item);\r\n                _this.teams.set(item.teamId, newTeam);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * 创建群\r\n     * @param __namedParameters.accounts - 要拉进群的成员的帐号列表\r\n     * @param __namedParameters.type - 群类型，默认高级群\r\n     * @param __namedParameters.avatar - 群头像\r\n     * @param __namedParameters.name - 群名称\r\n     * @param __namedParameters.intro - 群简介\r\n     * @param __namedParameters.serverExtension - 群扩展字段\r\n     */\r\n    TeamStore.prototype.createTeamActive = function (_a) {\r\n        var _b, _c, _d;\r\n        var accounts = _a.accounts, _e = _a.type, type = _e === void 0 ? 1 /* V2NIMConst.V2NIMTeamType.V2NIM_TEAM_TYPE_ADVANCED */ : _e, avatar = _a.avatar, name = _a.name, intro = _a.intro, serverExtension = _a.serverExtension, joinMode = _a.joinMode, agreeMode = _a.agreeMode, inviteMode = _a.inviteMode, updateInfoMode = _a.updateInfoMode, updateExtensionMode = _a.updateExtensionMode;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var team, error_1;\r\n            return __generator(this, function (_f) {\r\n                switch (_f.label) {\r\n                    case 0:\r\n                        _f.trys.push([0, 2, , 3]);\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('createTeamActive', {\r\n                            accounts: accounts,\r\n                            type: type,\r\n                            avatar: avatar,\r\n                            name: name,\r\n                            intro: intro,\r\n                            serverExtension: serverExtension,\r\n                        });\r\n                        return [4 /*yield*/, this.nim.V2NIMTeamService.createTeam({\r\n                                avatar: avatar,\r\n                                teamType: type,\r\n                                joinMode: joinMode || this.localOptions.teamJoinMode,\r\n                                agreeMode: agreeMode || this.localOptions.teamAgreeMode,\r\n                                inviteMode: inviteMode || this.localOptions.teamInviteMode,\r\n                                updateInfoMode: updateInfoMode || this.localOptions.teamUpdateTeamMode,\r\n                                updateExtensionMode: updateExtensionMode || this.localOptions.teamUpdateExtMode,\r\n                                name: name,\r\n                                intro: intro,\r\n                                serverExtension: serverExtension,\r\n                            }, accounts, '')];\r\n                    case 1:\r\n                        team = (_f.sent()).team;\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.log('createTeamActive success', team);\r\n                        return [2 /*return*/, team];\r\n                    case 2:\r\n                        error_1 = _f.sent();\r\n                        (_d = this.logger) === null || _d === void 0 ? void 0 : _d.error('createTeamActive failed: ', { accounts: accounts, type: type, avatar: avatar, name: name, intro: intro, serverExtension: serverExtension }, error_1, error_1.code, error_1.detail);\r\n                        throw error_1;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 申请入群\r\n     * @param teamId - 群id\r\n     * @param type - 群类型，默认高级群\r\n     */\r\n    TeamStore.prototype.applyTeamActive = function (teamId, type) {\r\n        var _a, _b, _c;\r\n        if (type === void 0) { type = 1 /* V2NIMConst.V2NIMTeamType.V2NIM_TEAM_TYPE_ADVANCED */; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var team, error_2;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('applyTeamActive', teamId);\r\n                        return [4 /*yield*/, this.nim.V2NIMTeamService.applyJoinTeam(teamId, type)];\r\n                    case 1:\r\n                        team = _d.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('applyTeamActive success', teamId);\r\n                        return [2 /*return*/, team];\r\n                    case 2:\r\n                        error_2 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('applyTeamActive failed: ', teamId, error_2);\r\n                        throw error_2;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 主动退群\r\n     * @param teamId - 群id\r\n     * @param type - 群类型，默认高级群\r\n     */\r\n    TeamStore.prototype.leaveTeamActive = function (teamId, type) {\r\n        var _a, _b, _c;\r\n        if (type === void 0) { type = 1 /* V2NIMConst.V2NIMTeamType.V2NIM_TEAM_TYPE_ADVANCED */; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_3;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('leaveTeamActive', teamId);\r\n                        return [4 /*yield*/, this.nim.V2NIMTeamService.leaveTeam(teamId, type)];\r\n                    case 1:\r\n                        _d.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('leaveTeamActive success', teamId);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_3 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('leaveTeamActive failed: ', teamId, error_3);\r\n                        throw error_3;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 解散群\r\n     * @param teamId - 群id\r\n     * @param type - 群类型，默认高级群\r\n     */\r\n    TeamStore.prototype.dismissTeamActive = function (teamId, type) {\r\n        var _a, _b, _c;\r\n        if (type === void 0) { type = 1 /* V2NIMConst.V2NIMTeamType.V2NIM_TEAM_TYPE_ADVANCED */; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_4;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('dismissTeamActive', teamId);\r\n                        return [4 /*yield*/, this.nim.V2NIMTeamService.dismissTeam(teamId, type)\r\n                            // 会收到一条 onDissmiss 事件\r\n                        ];\r\n                    case 1:\r\n                        _d.sent();\r\n                        // 会收到一条 onDissmiss 事件\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('dismissTeamActive success', teamId);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_4 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('dismissTeamActive failed: ', teamId, error_4);\r\n                        throw error_4;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 转让群主\r\n     * @param teamId - 群id\r\n     * @param type - 群类型，默认高级群\r\n     * @param account - 新群主帐号\r\n     * @param leave - 是否同时退出群聊，默认 false\r\n     */\r\n    TeamStore.prototype.transferTeamActive = function (_a) {\r\n        var _b, _c, _d;\r\n        var teamId = _a.teamId, _e = _a.type, type = _e === void 0 ? 1 /* V2NIMConst.V2NIMTeamType.V2NIM_TEAM_TYPE_ADVANCED */ : _e, account = _a.account, leave = _a.leave;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_5;\r\n            return __generator(this, function (_f) {\r\n                switch (_f.label) {\r\n                    case 0:\r\n                        _f.trys.push([0, 2, , 3]);\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('transferTeamActive', { teamId: teamId, type: type, account: account, leave: leave });\r\n                        return [4 /*yield*/, this.nim.V2NIMTeamService.transferTeamOwner(teamId, type, account, leave !== null && leave !== void 0 ? leave : this.localOptions.leaveOnTransfer)];\r\n                    case 1:\r\n                        _f.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.log('transferTeamActive success', {\r\n                            teamId: teamId,\r\n                            type: type,\r\n                            account: account,\r\n                            leave: leave,\r\n                        });\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_5 = _f.sent();\r\n                        (_d = this.logger) === null || _d === void 0 ? void 0 : _d.error('transferTeamActive failed: ', { teamId: teamId, type: type, account: account, leave: leave }, error_5);\r\n                        throw error_5;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 群禁言\r\n     * @param options\r\n     * options.teamId - 群id <br>\r\n     * options.type - 群类型，默认高级群 <br>\r\n     * options.chatBannedMode - 禁言模式\r\n     */\r\n    TeamStore.prototype.setTeamChatBannedActive = function (options) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_6;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('muteTeamActive', options);\r\n                        return [4 /*yield*/, this.nim.V2NIMTeamService.setTeamChatBannedMode(options.teamId, options.type || 1 /* V2NIMConst.V2NIMTeamType.V2NIM_TEAM_TYPE_ADVANCED */, options.chatBannedMode)];\r\n                    case 1:\r\n                        _d.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('muteTeamActive success', options);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_6 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('muteTeamActive failed: ', options, error_6);\r\n                        throw error_6;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 更新群\r\n     * @param options\r\n     * options.teamId - 群id <br>\r\n     * options.type - 群类型，默认高级群  <br>\r\n     * options.info - 群信息 <br>\r\n     */\r\n    TeamStore.prototype.updateTeamActive = function (options) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var teamId, _d, type, info, error_7;\r\n            return __generator(this, function (_e) {\r\n                switch (_e.label) {\r\n                    case 0:\r\n                        _e.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('updateTeamActive', options);\r\n                        teamId = options.teamId, _d = options.type, type = _d === void 0 ? 1 /* V2NIMConst.V2NIMTeamType.V2NIM_TEAM_TYPE_ADVANCED */ : _d, info = options.info;\r\n                        return [4 /*yield*/, this.nim.V2NIMTeamService.updateTeamInfo(teamId, type, info)\r\n                            // 后续在事件中处理\r\n                        ];\r\n                    case 1:\r\n                        _e.sent();\r\n                        // 后续在事件中处理\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('updateTeamActive success', options);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_7 = _e.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('updateTeamActive failed: ', options, error_7);\r\n                        throw error_7;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 从内存中获取群信息\r\n     * @param teamId - 群id\r\n     * @param type - 群类型，默认高级群\r\n     */\r\n    TeamStore.prototype.getTeamActive = function (teamId, type) {\r\n        var _a;\r\n        if (type === void 0) { type = 1 /* V2NIMConst.V2NIMTeamType.V2NIM_TEAM_TYPE_ADVANCED */; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var team;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('getTeamActive: ', teamId);\r\n                        team = this.teams.get(teamId);\r\n                        if (team) {\r\n                            return [2 /*return*/, team];\r\n                        }\r\n                        return [4 /*yield*/, this.getTeamForceActive(teamId, type)];\r\n                    case 1:\r\n                        team = _b.sent();\r\n                        this.addTeam([team]);\r\n                        return [2 /*return*/, team];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 从服务端获取群信息\r\n     * @param teamId - 群id\r\n     * @param type - 群类型，默认高级群\r\n     */\r\n    TeamStore.prototype.getTeamForceActive = function (teamId, type) {\r\n        var _a, _b, _c;\r\n        if (type === void 0) { type = 1 /* V2NIMConst.V2NIMTeamType.V2NIM_TEAM_TYPE_ADVANCED */; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var res, error_8;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('getTeamForceActive: ', teamId);\r\n                        return [4 /*yield*/, this.nim.V2NIMTeamService.getTeamInfo(teamId, type)];\r\n                    case 1:\r\n                        res = _d.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('getTeamForceActive success', res);\r\n                        // 这里不能存入 teamStore，因为 teamStore 只有在群中的内容\r\n                        return [2 /*return*/, res];\r\n                    case 2:\r\n                        error_8 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('getTeamForceActive failed: ', teamId, error_8);\r\n                        throw error_8;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 设置群消息免打扰\r\n     * @param teamId - 群id\r\n     * @param teamType - 群类型，默认高级群\r\n     * @param muteMode - 消息免打扰模式\r\n     */\r\n    TeamStore.prototype.setTeamMessageMuteModeActive = function (teamId, teamType, muteMode) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_9;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('setTeamMessageMuteModeActive', {\r\n                            teamId: teamId,\r\n                            teamType: teamType,\r\n                            muteMode: muteMode,\r\n                        });\r\n                        return [4 /*yield*/, this.nim.V2NIMSettingService.setTeamMessageMuteMode(teamId, teamType, muteMode)];\r\n                    case 1:\r\n                        _d.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('setTeamMessageMuteModeActive success', {\r\n                            teamId: teamId,\r\n                            teamType: teamType,\r\n                            muteMode: muteMode,\r\n                        });\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_9 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('setTeamMessageMuteModeActive failed: ', { teamId: teamId, teamType: teamType, muteMode: muteMode }, error_9);\r\n                        throw error_9;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 被邀请者接受入群邀请\r\n     * @param options V2NIMTeamJoinActionInfo\r\n     */\r\n    TeamStore.prototype.acceptTeamInviteActive = function (options) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_10;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('acceptTeamInviteActive: ', options);\r\n                        return [4 /*yield*/, this.nim.V2NIMTeamService.acceptInvitation(options)];\r\n                    case 1:\r\n                        _d.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('acceptTeamInviteActive success', options);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_10 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('acceptTeamInviteActive failed: ', options, error_10);\r\n                        throw error_10;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 被邀请者拒绝入群邀请\r\n     * @param options V2NIMTeamJoinActionInfo\r\n     */\r\n    TeamStore.prototype.rejectTeamInviteActive = function (options) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_11;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('rejectTeamInviteActive: ', options);\r\n                        return [4 /*yield*/, this.nim.V2NIMTeamService.rejectInvitation(options)];\r\n                    case 1:\r\n                        _d.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('rejectTeamInviteActive success', options);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_11 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('rejectTeamInviteActive failed: ', options, error_11);\r\n                        throw error_11;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 管理员通过入群申请\r\n     * @param options V2NIMTeamJoinActionInfo\r\n     */\r\n    TeamStore.prototype.acceptJoinApplicationActive = function (options) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_12;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('acceptJoinApplicationActive: ', options);\r\n                        return [4 /*yield*/, this.nim.V2NIMTeamService.acceptJoinApplication(options)];\r\n                    case 1:\r\n                        _d.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('acceptJoinApplicationActive success', options);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_12 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('acceptJoinApplicationActive failed: ', options, error_12);\r\n                        throw error_12;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 管理员拒绝入群申请\r\n     * @param options V2NIMTeamJoinActionInfo\r\n     */\r\n    TeamStore.prototype.rejectTeamApplyActive = function (options) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_13;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('rejectTeamApplyActive: ', options);\r\n                        return [4 /*yield*/, this.nim.V2NIMTeamService.rejectJoinApplication(options)];\r\n                    case 1:\r\n                        _d.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('rejectTeamApplyActive success', options);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_13 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('rejectTeamApplyActive failed: ', options, error_13);\r\n                        throw error_13;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 设置成员角色\r\n     * @param options\r\n     * options.teamId - 群id <br>\r\n     * options.type - 群类型，默认高级群 <br>\r\n     * options.accounts - 群管理员 accid\r\n     * options.role - 角色\r\n     */\r\n    TeamStore.prototype.updateTeamMemberRoleActive = function (options) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var teamId, _d, type, accounts, role, error_14;\r\n            return __generator(this, function (_e) {\r\n                switch (_e.label) {\r\n                    case 0:\r\n                        _e.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('addTeamManagersActive: ', options);\r\n                        teamId = options.teamId, _d = options.type, type = _d === void 0 ? 1 /* V2NIMConst.V2NIMTeamType.V2NIM_TEAM_TYPE_ADVANCED */ : _d, accounts = options.accounts, role = options.role;\r\n                        return [4 /*yield*/, this.nim.V2NIMTeamService.updateTeamMemberRole(teamId, type, accounts, role)];\r\n                    case 1:\r\n                        _e.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('addTeamManagersActive success', options);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_14 = _e.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('addTeamManagersActive failed: ', options, error_14);\r\n                        throw error_14;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /** 获取群组申请动作信息 */\r\n    TeamStore.prototype.getTeamJoinActionInfoListActive = function (options) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var res, error_15;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('getTeamJoinActionInfoListActive: ', options);\r\n                        return [4 /*yield*/, this.nim.V2NIMTeamService.getTeamJoinActionInfoList(options)];\r\n                    case 1:\r\n                        res = _d.sent();\r\n                        this.rootStore.sysMsgStore.addTeamJoinActionMsg(res.infos);\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('getTeamJoinActionInfoListActive success', res);\r\n                        return [2 /*return*/, res];\r\n                    case 2:\r\n                        error_15 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('getTeamJoinActionInfoListActive failed: ', options, error_15);\r\n                        throw error_15;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /** 获取已加入的群组列表 */\r\n    TeamStore.prototype.getJoinedTeamListActive = function () {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var teams, error_16;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('getJoinedTeamListActive');\r\n                        return [4 /*yield*/, this.nim.V2NIMTeamService.getJoinedTeamList([1])];\r\n                    case 1:\r\n                        teams = _d.sent();\r\n                        this.addTeam(teams);\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('getJoinedTeamListActive success', teams);\r\n                        return [2 /*return*/, teams];\r\n                    case 2:\r\n                        error_16 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('getJoinedTeamListActive failed: ', error_16);\r\n                        throw error_16;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取群消息免打扰状态\r\n     * @param teamId - 群id <br>\r\n     * @param teamType - 群组类型，包括高级群和超大群。 <br>\r\n     */\r\n    TeamStore.prototype.getTeamMessageMuteModeActive = function (teamId, teamType) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var muteMode, error_17;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('getTeamMessageMuteModeActive', teamId, teamType);\r\n                        return [4 /*yield*/, this.nim.V2NIMSettingService.getTeamMessageMuteMode(teamId, teamType)];\r\n                    case 1:\r\n                        muteMode = _d.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('getTeamMessageMuteModeActive success', teamId, teamType);\r\n                        return [2 /*return*/, muteMode];\r\n                    case 2:\r\n                        error_17 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('getTeamMessageMuteModeActive failed: ', teamId, teamType, error_17);\r\n                        throw error_17;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    TeamStore.prototype._onReceiveTeamJoinActionInfo = function (data) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onReceiveTeamJoinActionInfo: ', data);\r\n        this.rootStore.sysMsgStore.addTeamJoinActionMsg([data]);\r\n    };\r\n    TeamStore.prototype._onSyncFailed = function (data) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('V2NIMTeamService _onSyncFailed: ', data);\r\n    };\r\n    TeamStore.prototype._onSyncFinished = function () {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_c) {\r\n                // 获取会话列表\r\n                (_a = this.rootStore.conversationStore) === null || _a === void 0 ? void 0 : _a.getConversationListActive(0, this.rootStore.localOptions.conversationLimit || 100);\r\n                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('V2NIMTeamService _onSyncFinished');\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    TeamStore.prototype._onSyncStarted = function () {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('V2NIMTeamService _onSyncStarted');\r\n    };\r\n    TeamStore.prototype._onTeamCreated = function (data) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('V2NIMTeamService _onTeamCreated: ', data);\r\n        this.addTeam([data]);\r\n        // 不用自己插入会话了，因为 SDK 会有会话创建回调\r\n    };\r\n    TeamStore.prototype._onTeamDismissed = function (data) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('V2NIMTeamService _onTeamDismissed: ', data);\r\n        this._handleRemoveTeam(data.teamId);\r\n    };\r\n    TeamStore.prototype._onTeamInfoUpdated = function (data) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('V2NIMTeamService _onTeamInfoUpdated: ', data);\r\n        this.updateTeam([data]);\r\n    };\r\n    TeamStore.prototype._onTeamJoined = function (data) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('V2NIMTeamService _onTeamJoined: ', data);\r\n        this.addTeam([data]);\r\n        // 不用自己插入会话了，因为 SDK 会有会话创建回调\r\n    };\r\n    TeamStore.prototype._onTeamLeft = function (data) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_b) {\r\n                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('V2NIMTeamService _onTeamLeft: ', data);\r\n                this._handleRemoveTeam(data.teamId);\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    TeamStore.prototype._onTeamMemberInfoUpdated = function (data) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('V2NIMTeamService _onTeamMemberInfoUpdated: ', data);\r\n        var teamId = data[0].teamId;\r\n        this.rootStore.teamMemberStore.updateTeamMember(teamId, data);\r\n    };\r\n    TeamStore.prototype._onTeamMemberJoined = function (data) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var teamId;\r\n            return __generator(this, function (_b) {\r\n                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('V2NIMTeamService _onTeamMemberJoined: ', data);\r\n                teamId = data[0].teamId;\r\n                this.rootStore.teamMemberStore.addTeamMember(teamId, data);\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    TeamStore.prototype._onTeamMemberKicked = function (opeartorId, data) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var teamId;\r\n            return __generator(this, function (_b) {\r\n                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('V2NIMTeamService _onTeamMemberKicked: ', opeartorId, data);\r\n                teamId = data[0].teamId;\r\n                this.rootStore.teamMemberStore.removeTeamMember(teamId, data.map(function (item) { return item.accountId; }));\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    TeamStore.prototype._onTeamMemberLeft = function (data) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var teamId;\r\n            return __generator(this, function (_b) {\r\n                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('V2NIMTeamService _onTeamMemberLeft: ', data);\r\n                teamId = data[0].teamId;\r\n                this.rootStore.teamMemberStore.removeTeamMember(teamId, data.map(function (item) { return item.accountId; }));\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    TeamStore.prototype._handleRemoveTeam = function (teamId) {\r\n        this.removeTeam([teamId]);\r\n        // 手动释放内存\r\n        this.rootStore.teamMemberStore.removeTeamMember(teamId);\r\n    };\r\n    TeamStore.prototype._onTeamMessageMuteModeChanged = function (teamId, teamType, muteMode) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('V2NIMTeamService _onTeamMessageMuteModeChanged: ', teamId, teamType, muteMode);\r\n    };\r\n    return TeamStore;\r\n}());\n\n/**Mobx 可观察对象，负责管理群组成员的子 store*/\r\nvar TeamMemberStore = /** @class */ (function () {\r\n    function TeamMemberStore(rootStore, nim) {\r\n        this.rootStore = rootStore;\r\n        this.nim = nim;\r\n        this.teamMembers = new Map();\r\n        this.logger = null;\r\n        makeAutoObservable(this);\r\n        this.logger = rootStore.logger;\r\n    }\r\n    TeamMemberStore.prototype.resetState = function () {\r\n        this.teamMembers.clear();\r\n    };\r\n    /**\r\n     * 销毁TeamMemberStore，会取消相关事件监听\r\n     */\r\n    TeamMemberStore.prototype.destroy = function () {\r\n        this.resetState();\r\n    };\r\n    /**\r\n     * 拉人入群\r\n     * @param options\r\n     * options.teamId - 群id <br>\r\n     * options.type - 群类型, 默认高级群 <br>\r\n     * options.accounts - 要拉进群的成员的帐号列表 <br>\r\n     * options.ps - 邀请附言 <br>\r\n     */\r\n    TeamMemberStore.prototype.addTeamMemberActive = function (options) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var teamId, _d, type, accounts, ps, error_1;\r\n            return __generator(this, function (_e) {\r\n                switch (_e.label) {\r\n                    case 0:\r\n                        _e.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('addTeamMemberActive', options);\r\n                        teamId = options.teamId, _d = options.type, type = _d === void 0 ? 1 /* V2NIMConst.V2NIMTeamType.V2NIM_TEAM_TYPE_ADVANCED */ : _d, accounts = options.accounts, ps = options.ps;\r\n                        return [4 /*yield*/, this.nim.V2NIMTeamService.inviteMember(teamId, type, accounts, ps)\r\n                            // 事件中处理\r\n                        ];\r\n                    case 1:\r\n                        _e.sent();\r\n                        // 事件中处理\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('addTeamMemberActive success', options);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_1 = _e.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('addTeamMemberActive failed: ', options, error_1);\r\n                        throw error_1;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 踢人出群\r\n     * @param options\r\n     * options.teamId - 群id <br>\r\n     * options.type - 群类型, 默认高级群 <br>\r\n     * options.accounts - 要拉进群的成员的帐号列表 <br>\r\n     */\r\n    TeamMemberStore.prototype.removeTeamMemberActive = function (options) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var teamId, _d, type, accounts, error_2;\r\n            return __generator(this, function (_e) {\r\n                switch (_e.label) {\r\n                    case 0:\r\n                        _e.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('removeTeamMemberActive', options);\r\n                        teamId = options.teamId, _d = options.type, type = _d === void 0 ? 1 /* V2NIMConst.V2NIMTeamType.V2NIM_TEAM_TYPE_ADVANCED */ : _d, accounts = options.accounts;\r\n                        return [4 /*yield*/, this.nim.V2NIMTeamService.kickMember(teamId, type, accounts)\r\n                            // 事件中处理\r\n                        ];\r\n                    case 1:\r\n                        _e.sent();\r\n                        // 事件中处理\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('removeTeamMemberActive success', options);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_2 = _e.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('removeTeamMemberActive failed: ', options, error_2);\r\n                        throw error_2;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取群成员\r\n     * @param options\r\n     * options.teamId - 群id <br>\r\n     * options.queryOption - 查询选项 <br>\r\n     * options.type - 群类型, 默认高级群 <br>\r\n     */\r\n    TeamMemberStore.prototype.getTeamMemberActive = function (options) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var teamId, queryOption, _d, type, res, error_3;\r\n            return __generator(this, function (_e) {\r\n                switch (_e.label) {\r\n                    case 0:\r\n                        _e.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('getTeamMemberActive', options);\r\n                        teamId = options.teamId, queryOption = options.queryOption, _d = options.type, type = _d === void 0 ? 1 /* V2NIMConst.V2NIMTeamType.V2NIM_TEAM_TYPE_ADVANCED */ : _d;\r\n                        return [4 /*yield*/, this.nim.V2NIMTeamService.getTeamMemberList(teamId, type, queryOption)];\r\n                    case 1:\r\n                        res = _e.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('getTeamMemberActive success: ', teamId, type, queryOption, res);\r\n                        this.setTeamMembers(teamId, res.memberList);\r\n                        return [2 /*return*/, res];\r\n                    case 2:\r\n                        error_3 = _e.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('getTeamMemberActive failed: ', options, error_3);\r\n                        throw error_3;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 更新我在群中的信息\r\n     * @param options\r\n     * options.teamId - 群id <br>\r\n     * options.type - 群类型, 默认高级群 <br>\r\n     * options.memberInfo - 更新的信息 <br>\r\n     */\r\n    TeamMemberStore.prototype.updateMyMemberInfoActive = function (options) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var teamId, _d, type, memberInfo, error_4;\r\n            return __generator(this, function (_e) {\r\n                switch (_e.label) {\r\n                    case 0:\r\n                        _e.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('updateMyMemberInfo', options);\r\n                        teamId = options.teamId, _d = options.type, type = _d === void 0 ? 1 /* V2NIMConst.V2NIMTeamType.V2NIM_TEAM_TYPE_ADVANCED */ : _d, memberInfo = options.memberInfo;\r\n                        return [4 /*yield*/, this.nim.V2NIMTeamService.updateSelfTeamMemberInfo(teamId, type, memberInfo)];\r\n                    case 1:\r\n                        _e.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('updateMyMemberInfo success: ', options);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_4 = _e.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('updateMyMemberInfo failed: ', options, error_4);\r\n                        throw error_4;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 内存中设置群成员，会覆盖原有的成员\r\n     * @param teamId - 群id\r\n     * @param members - 群成员\r\n     */\r\n    TeamMemberStore.prototype.setTeamMembers = function (teamId, members) {\r\n        var teamMembers = new Map();\r\n        members.forEach(function (item) {\r\n            teamMembers.set(item.accountId, item);\r\n        });\r\n        this.teamMembers.set(teamId, teamMembers);\r\n    };\r\n    /**\r\n     * 内存中添加群成员\r\n     * @param teamId - 群id\r\n     * @param members - 群成员\r\n     */\r\n    TeamMemberStore.prototype.addTeamMember = function (teamId, members) {\r\n        var teamMembers = this.teamMembers.get(teamId);\r\n        if (!teamMembers) {\r\n            teamMembers = new Map();\r\n        }\r\n        members\r\n            .filter(function (item) { return !!item.inTeam; })\r\n            .filter(function (item) { return !!item.accountId; })\r\n            .forEach(function (item) {\r\n            teamMembers.set(item.accountId, item);\r\n        });\r\n        this.teamMembers.set(teamId, teamMembers);\r\n    };\r\n    /**\r\n     * 内存中移除群成员\r\n     * @param teamId - 群id\r\n     * @param accounts - 群成员数组\r\n     */\r\n    TeamMemberStore.prototype.removeTeamMember = function (teamId, accounts) {\r\n        if (!accounts || !accounts.length) {\r\n            this.teamMembers.delete(teamId);\r\n            return;\r\n        }\r\n        var teamMembers = this.teamMembers.get(teamId);\r\n        if (!teamMembers) {\r\n            return;\r\n        }\r\n        accounts.forEach(function (item) {\r\n            teamMembers.delete(item);\r\n        });\r\n        this.teamMembers.set(teamId, teamMembers);\r\n    };\r\n    /**\r\n     * 内存中更新群成员处理函数\r\n     * @param teamId - 群id\r\n     * @param members - 群成员\r\n     */\r\n    TeamMemberStore.prototype.updateTeamMember = function (teamId, members) {\r\n        var teamMembers = this.teamMembers.get(teamId);\r\n        if (!teamMembers) {\r\n            return;\r\n        }\r\n        members.forEach(function (item) {\r\n            var m = teamMembers.get(item.accountId);\r\n            if (m) {\r\n                m = __assign(__assign({}, m), item);\r\n                teamMembers.set(item.accountId, m);\r\n            }\r\n        });\r\n        this.teamMembers.set(teamId, teamMembers);\r\n    };\r\n    /**\r\n     * 从内存中获取群成员信息\r\n     * @param teamId - 群id\r\n     * @param accounts - 群成员数组\r\n     */\r\n    TeamMemberStore.prototype.getTeamMember = function (teamId, accounts) {\r\n        var _a;\r\n        var teamMembers = __spreadArray([], __read((((_a = this.teamMembers.get(teamId)) === null || _a === void 0 ? void 0 : _a.values()) || [])), false);\r\n        if (!accounts || !accounts.length) {\r\n            return teamMembers;\r\n        }\r\n        return teamMembers.filter(function (item) {\r\n            return accounts.some(function (j) { return j === item.accountId; });\r\n        });\r\n    };\r\n    return TeamMemberStore;\r\n}());\n\n/**Mobx 可观察对象，负责管理系统消息的子 store */\r\nvar SysMsgStore = /** @class */ (function () {\r\n    function SysMsgStore(rootStore, nim) {\r\n        this.rootStore = rootStore;\r\n        this.nim = nim;\r\n        /** 好友申请消息 */\r\n        this.friendApplyMsg = new Map();\r\n        this.teamJoinActionMsg = new Map();\r\n        this.logger = null;\r\n        makeAutoObservable(this);\r\n        this.logger = rootStore.logger;\r\n    }\r\n    SysMsgStore.prototype.resetState = function () {\r\n        this.friendApplyMsg.clear();\r\n        this.teamJoinActionMsg.clear();\r\n    };\r\n    /**\r\n     * 销毁SysMsgStore，会取消系统消息事件监听\r\n     */\r\n    SysMsgStore.prototype.destroy = function () {\r\n        this.resetState();\r\n    };\r\n    Object.defineProperty(SysMsgStore.prototype, \"friendApplyMsgs\", {\r\n        get: function () {\r\n            return Array.from(this.friendApplyMsg.values()).sort(function (a, b) { return b.timestamp - a.timestamp; });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SysMsgStore.prototype, \"teamJoinActionMsgs\", {\r\n        get: function () {\r\n            return Array.from(this.teamJoinActionMsg.values()).sort(function (a, b) { return b.timestamp - a.timestamp; });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * 增加内存中的好友申请消息\r\n     * @param msgs 系统消息对象数组\r\n     */\r\n    SysMsgStore.prototype.addFriendApplyMsg = function (msgs) {\r\n        var _this = this;\r\n        msgs.forEach(function (msg) {\r\n            var key = _this.createFriendApplyMsgKey(msg);\r\n            _this.friendApplyMsg.set(key, msg);\r\n        });\r\n    };\r\n    /**\r\n     * 删除内存中的好友申请消息\r\n     * @param msgs 系统消息对象数组\r\n     */\r\n    SysMsgStore.prototype.deleteFriendApplyMsg = function (msgs) {\r\n        var _this = this;\r\n        msgs.forEach(function (msg) {\r\n            var key = _this.createFriendApplyMsgKey(msg);\r\n            _this.friendApplyMsg.delete(key);\r\n        });\r\n    };\r\n    /**\r\n     * 更新内存中的好友申请消息\r\n     * @param msgs 系统消息对象数组\r\n     */\r\n    SysMsgStore.prototype.updateFriendApplyMsg = function (msgs) {\r\n        var _this = this;\r\n        msgs.forEach(function (msg) {\r\n            var key = _this.createFriendApplyMsgKey(msg);\r\n            var oldMsg = _this.friendApplyMsg.get(key);\r\n            if (oldMsg) {\r\n                _this.friendApplyMsg.set(key, __assign(__assign({}, oldMsg), msg));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * 增加内存中的入群申请消息\r\n     * @param msgs 系统消息对象数组\r\n     */\r\n    SysMsgStore.prototype.addTeamJoinActionMsg = function (msgs) {\r\n        var _this = this;\r\n        msgs.forEach(function (msg) {\r\n            var key = _this.createTeamJoinActionMsgKey(msg);\r\n            _this.teamJoinActionMsg.set(key, msg);\r\n        });\r\n    };\r\n    /**\r\n     * 删除内存中的入群申请消息\r\n     * @param msgs 系统消息对象数组\r\n     */\r\n    SysMsgStore.prototype.deleteTeamJoinActionMsg = function (msgs) {\r\n        var _this = this;\r\n        msgs.forEach(function (msg) {\r\n            var key = _this.createTeamJoinActionMsgKey(msg);\r\n            _this.teamJoinActionMsg.delete(key);\r\n        });\r\n    };\r\n    /**\r\n     * 更新内存中的入群申请消息\r\n     * @param msgs 系统消息对象数组\r\n     */\r\n    SysMsgStore.prototype.updateTeamJoinActionMsg = function (msgs) {\r\n        var _this = this;\r\n        msgs.forEach(function (msg) {\r\n            var key = _this.createTeamJoinActionMsgKey(msg);\r\n            var oldMsg = _this.teamJoinActionMsg.get(key);\r\n            var newMsg = __assign(__assign({}, oldMsg), msg);\r\n            _this.teamJoinActionMsg.set(key, newMsg);\r\n        });\r\n    };\r\n    /** 获取未读好友申请消息数量 */\r\n    SysMsgStore.prototype.getUnreadFriendApplyMsgsCount = function () {\r\n        return this.friendApplyMsgs.filter(function (msg) { return !msg.isRead; }).length;\r\n    };\r\n    /** 获取未读入群申请消息数量 */\r\n    SysMsgStore.prototype.getUnreadTeamJoinActionMsgsCount = function () {\r\n        return this.teamJoinActionMsgs.filter(function (msg) { return !msg.isRead; }).length;\r\n    };\r\n    /** 获取未读消息总数 */\r\n    SysMsgStore.prototype.getTotalUnreadMsgsCount = function () {\r\n        return (this.getUnreadFriendApplyMsgsCount() +\r\n            this.getUnreadTeamJoinActionMsgsCount());\r\n    };\r\n    /** 设置所有申请消息为已读 */\r\n    SysMsgStore.prototype.setAllApplyMsgRead = function () {\r\n        this.updateFriendApplyMsg(this.friendApplyMsgs.map(function (msg) { return (__assign(__assign({}, msg), { isRead: true })); }));\r\n        this.updateTeamJoinActionMsg(this.teamJoinActionMsgs.map(function (msg) { return (__assign(__assign({}, msg), { isRead: true })); }));\r\n    };\r\n    /** 创建群组申请消息的 key */\r\n    SysMsgStore.prototype.createTeamJoinActionMsgKey = function (msg) {\r\n        return \"\".concat(msg.teamId, \"_\").concat(msg.operatorAccountId, \"_\").concat(msg.actionType);\r\n    };\r\n    /** 创建好友申请消息的 key */\r\n    SysMsgStore.prototype.createFriendApplyMsgKey = function (msg) {\r\n        return \"\".concat(msg.applicantAccountId, \"_\").concat(msg.recipientAccountId);\r\n    };\r\n    return SysMsgStore;\r\n}());\n\n/**Mobx 可观察对象，负责管理用户信息（包含陌生人）的子 store */\r\nvar UserStore = /** @class */ (function () {\r\n    function UserStore(rootStore, nim) {\r\n        this.rootStore = rootStore;\r\n        this.nim = nim;\r\n        this.users = new Map();\r\n        this.myUserInfo = {\r\n            accountId: this.nim.V2NIMLoginService.getLoginUser(),\r\n            name: '',\r\n            createTime: Date.now(),\r\n            updateTime: Date.now(),\r\n        };\r\n        this.logger = null;\r\n        this._getUserInfo = frequencyControl(this._getUserInfos, 1000, 100);\r\n        makeAutoObservable(this);\r\n        this._onUserProfileChanged = this._onUserProfileChanged.bind(this);\r\n        this.logger = rootStore.logger;\r\n        // 用户资料变更回调，返回变更的用户资料列表\r\n        nim.V2NIMUserService.on('onUserProfileChanged', this._onUserProfileChanged);\r\n    }\r\n    UserStore.prototype.resetState = function () {\r\n        this.users.clear();\r\n        this.myUserInfo = {\r\n            accountId: this.nim.V2NIMLoginService.getLoginUser(),\r\n            name: '',\r\n            createTime: Date.now(),\r\n            updateTime: Date.now(),\r\n        };\r\n    };\r\n    /**\r\n     * 销毁UserStore，会取消相关事件监听\r\n     */\r\n    UserStore.prototype.destroy = function () {\r\n        this.resetState();\r\n        this.nim.V2NIMUserService.off('onUserProfileChanged', this._onUserProfileChanged);\r\n    };\r\n    /**\r\n     * 内存中增加users\r\n     * @param users - users数组\r\n     */\r\n    UserStore.prototype.addUsers = function (users) {\r\n        var _this = this;\r\n        users\r\n            .filter(function (item) { return !!item.accountId; })\r\n            .forEach(function (item) {\r\n            _this.users.set(item.accountId, item);\r\n        });\r\n    };\r\n    /**\r\n     * 内存中删除users\r\n     * @param users - users数组\r\n     */\r\n    UserStore.prototype.removeUsers = function (accounts) {\r\n        var _this = this;\r\n        accounts.forEach(function (item) {\r\n            _this.users.delete(item);\r\n        });\r\n    };\r\n    /**\r\n     * 获取我自己的 serverExtension 字段\r\n     */\r\n    UserStore.prototype.getMyUserServerExt = function () {\r\n        var _a;\r\n        var serverExt = {};\r\n        try {\r\n            serverExt = JSON.parse(((_a = this.myUserInfo) === null || _a === void 0 ? void 0 : _a.serverExtension) || '{}');\r\n        }\r\n        catch (error) {\r\n            //\r\n        }\r\n        return serverExt;\r\n    };\r\n    /**\r\n     * 更新自己的用户资料\r\n     * @param updateParams\r\n     * updateParams.nick - 昵称 <br>\r\n     * updateParams.avatar - 头像 <br>\r\n     * updateParams.sign - 签名 <br>\r\n     * updateParams.gender - 性别 <br>\r\n     * updateParams.email - 邮箱 <br>\r\n     * updateParams.birth - 生日 <br>\r\n     * updateParams.tel - 手机号 <br>\r\n     * updateParams.serverExtension - 扩展字段 <br>\r\n     *\r\n     * @param fileObj - 头像文件对象、或者在小程序中，文件路径\r\n     */\r\n    UserStore.prototype.updateSelfUserProfileActive = function (updateParams, fileObj) {\r\n        var _a, _b, _c, _d;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var task, avatarUrl, error_1, error_2;\r\n            return __generator(this, function (_e) {\r\n                switch (_e.label) {\r\n                    case 0:\r\n                        _e.trys.push([0, 6, , 7]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('updateSelfUserProfileActive', updateParams, fileObj);\r\n                        if (!fileObj) return [3 /*break*/, 4];\r\n                        _e.label = 1;\r\n                    case 1:\r\n                        _e.trys.push([1, 3, , 4]);\r\n                        task = this.nim.V2NIMStorageService.createUploadFileTask({\r\n                            fileObj: fileObj,\r\n                        });\r\n                        return [4 /*yield*/, this.nim.V2NIMStorageService.uploadFile(task, function () {\r\n                                /**/\r\n                            })];\r\n                    case 2:\r\n                        avatarUrl = _e.sent();\r\n                        updateParams.avatar = avatarUrl;\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_1 = _e.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.warn('upload avatar error and save continue.', error_1);\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [4 /*yield*/, this.nim.V2NIMUserService.updateSelfUserProfile(updateParams)];\r\n                    case 5:\r\n                        _e.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.log('updateSelfUserProfileActive success', updateParams, fileObj);\r\n                        return [3 /*break*/, 7];\r\n                    case 6:\r\n                        error_2 = _e.sent();\r\n                        (_d = this.logger) === null || _d === void 0 ? void 0 : _d.error('updateSelfUserProfileActive failed:', updateParams, error_2, fileObj);\r\n                        throw error_2;\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取用户最新信息（如果内存中存在，就不去服务器取最新的了）\r\n     * @param accountIds - 账号id数组\r\n     */\r\n    UserStore.prototype.getUserActive = function (accountId) {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var user;\r\n            return __generator(this, function (_c) {\r\n                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('getUserListActive', accountId);\r\n                user = this.users.get(accountId);\r\n                if (user) {\r\n                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('getUserListActive success', user, accountId);\r\n                    return [2 /*return*/, user];\r\n                }\r\n                return [2 /*return*/, this.getUserForceActive(accountId)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取用户最新信息\r\n     * @param accountIds - 账号id数组\r\n     */\r\n    UserStore.prototype.getUserForceActive = function (accountId) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var user, error_3;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('getUserForceActive', accountId);\r\n                        return [4 /*yield*/, this._getUserInfo(accountId)];\r\n                    case 1:\r\n                        user = _d.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('getUserForceActive success', user, accountId);\r\n                        return [2 /*return*/, user];\r\n                    case 2:\r\n                        error_3 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('getUserForceActive failed: ', accountId, error_3);\r\n                        throw error_3;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取用户最新信息（始终从服务器取最新的，用于点开用户头像时）\r\n     * @param accountIds - 账号id数组\r\n     */\r\n    UserStore.prototype.getUserListFromCloudActive = function (accountIds) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var users, error_4;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('getUserListFromCloudActive', accountIds);\r\n                        return [4 /*yield*/, this.nim.V2NIMUserService.getUserListFromCloud(accountIds)];\r\n                    case 1:\r\n                        users = _d.sent();\r\n                        this.addUsers(users);\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('getUserListFromCloudActive success', users, accountIds);\r\n                        return [2 /*return*/, users];\r\n                    case 2:\r\n                        error_4 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('getUserListFromCloudActive failed: ', accountIds, error_4);\r\n                        throw error_4;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // 获取自己的用户信息\r\n    UserStore.prototype.getMyUserInfoActive = function () {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var myUserInfo, error_5;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('getMyUserInfoActive');\r\n                        return [4 /*yield*/, this.nim.V2NIMUserService.getUserList([\r\n                                this.nim.V2NIMLoginService.getLoginUser(),\r\n                            ])];\r\n                    case 1:\r\n                        myUserInfo = _d.sent();\r\n                        this.myUserInfo = myUserInfo[0];\r\n                        this.addUsers(myUserInfo);\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('getMyUserInfoActive success', myUserInfo);\r\n                        return [2 /*return*/, myUserInfo[0]];\r\n                    case 2:\r\n                        error_5 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('getMyUserInfoActive failed: ', error_5);\r\n                        throw error_5;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    UserStore.prototype._getUserInfos = function (accountIds) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var users;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.nim.V2NIMUserService.getUserList(accountIds)];\r\n                    case 1:\r\n                        users = _a.sent();\r\n                        this.addUsers(users);\r\n                        return [2 /*return*/, users];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    UserStore.prototype._onUserProfileChanged = function (data) {\r\n        var _this = this;\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onUserProfileChanged: ', data);\r\n        data.forEach(function (item) {\r\n            if (item.accountId === _this.myUserInfo.accountId) {\r\n                _this.myUserInfo = item;\r\n            }\r\n        });\r\n        this.addUsers(data);\r\n    };\r\n    return UserStore;\r\n}());\n\nvar AIUserStore = /** @class */ (function () {\r\n    function AIUserStore(rootStore, nim, localOptions) {\r\n        this.rootStore = rootStore;\r\n        this.nim = nim;\r\n        this.localOptions = localOptions;\r\n        this.aiUsers = new Map();\r\n        this.aiReqMsgs = [];\r\n        this.aiResMsgs = [];\r\n        this.logger = null;\r\n        this.onSendAIProxyErrorHandler = function () {\r\n            //\r\n        };\r\n        this.requestIds = [];\r\n        this.proxyAccountId = '';\r\n        makeAutoObservable(this);\r\n        this.logger = rootStore.logger;\r\n        this._onProxyAIModelCall = this._onProxyAIModelCall.bind(this);\r\n        this.nim.V2NIMAIService.on('onProxyAIModelCall', this._onProxyAIModelCall);\r\n    }\r\n    Object.defineProperty(AIUserStore.prototype, \"aiProxying\", {\r\n        get: function () {\r\n            return this.aiReqMsgs.length > this.aiResMsgs.length;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    AIUserStore.prototype.resetState = function () {\r\n        this.aiUsers.clear();\r\n        this.aiReqMsgs = [];\r\n        this.aiResMsgs = [];\r\n    };\r\n    /**\r\n     * 销毁 AIUserStore，会取消相关事件监听\r\n     */\r\n    AIUserStore.prototype.destroy = function () {\r\n        this.resetState();\r\n        this.nim.V2NIMAIService.off('onProxyAIModelCall', this._onProxyAIModelCall);\r\n    };\r\n    /** 内存中增加 AIUsers */\r\n    AIUserStore.prototype.addAIUsers = function (aiUsers) {\r\n        var _this = this;\r\n        aiUsers\r\n            .filter(function (item) { return !!item.accountId; })\r\n            .forEach(function (item) {\r\n            _this.aiUsers.set(item.accountId, item);\r\n        });\r\n    };\r\n    /** 内存中删除 AIUsers */\r\n    AIUserStore.prototype.removeAIUsers = function (accounts) {\r\n        var _this = this;\r\n        accounts.forEach(function (item) {\r\n            _this.aiUsers.delete(item);\r\n        });\r\n    };\r\n    /**\r\n     * 获取 AIUsers\r\n     */\r\n    AIUserStore.prototype.getAIUserList = function (accountIds) {\r\n        var aiUsers = __spreadArray([], __read(this.aiUsers.values()), false);\r\n        var sortHandler = function (a, b) {\r\n            return b.createTime - a.createTime;\r\n        };\r\n        if (accountIds && accountIds.length) {\r\n            return aiUsers\r\n                .filter(function (item) { return accountIds.includes(item.accountId); })\r\n                .sort(sortHandler);\r\n        }\r\n        return aiUsers.sort(sortHandler);\r\n    };\r\n    /**\r\n     * 获取 AI 划词数字人\r\n     */\r\n    AIUserStore.prototype.getAISearchUser = function () {\r\n        var _a, _b;\r\n        var aiUsers = this.getAIUserList();\r\n        return (_b = (_a = this.localOptions.aiUserAgentProvider) === null || _a === void 0 ? void 0 : _a.getAISearchUser) === null || _b === void 0 ? void 0 : _b.call(_a, aiUsers);\r\n    };\r\n    /**\r\n     * 获取 AI 翻译数字人\r\n     */\r\n    AIUserStore.prototype.getAITranslateUser = function () {\r\n        var _a, _b;\r\n        var aiUsers = this.getAIUserList();\r\n        return (_b = (_a = this.localOptions.aiUserAgentProvider) === null || _a === void 0 ? void 0 : _a.getAITranslateUser) === null || _b === void 0 ? void 0 : _b.call(_a, aiUsers);\r\n    };\r\n    /**\r\n     * 获取 AI 翻译语言\r\n     */\r\n    AIUserStore.prototype.getAITranslateLangs = function () {\r\n        var _a, _b;\r\n        var aiUsers = this.getAIUserList();\r\n        return (((_b = (_a = this.localOptions.aiUserAgentProvider) === null || _a === void 0 ? void 0 : _a.getAITranslateLangs) === null || _b === void 0 ? void 0 : _b.call(_a, aiUsers)) ||\r\n            []);\r\n    };\r\n    /**\r\n     * 获取 AI 数字人的 serverExtension\r\n     */\r\n    AIUserStore.prototype.getAIUserServerExt = function (accountId) {\r\n        var aiUser = this.aiUsers.get(accountId);\r\n        if (!aiUser) {\r\n            return {};\r\n        }\r\n        try {\r\n            return JSON.parse(aiUser.serverExtension || '{}');\r\n        }\r\n        catch (error) {\r\n            return {};\r\n        }\r\n    };\r\n    /**\r\n     * 获取 AI 聊数字人，AI 聊是指可以被 @ 的数字人\r\n     */\r\n    AIUserStore.prototype.getAIChatUser = function () {\r\n        var _this = this;\r\n        var aiUsers = this.getAIUserList();\r\n        return aiUsers.filter(function (item) {\r\n            var serverExt = _this.getAIUserServerExt(item.accountId);\r\n            return serverExt.aiChat === 1;\r\n        });\r\n    };\r\n    /**\r\n     * 获取配置过默认置顶的数字人，仅代表配置过，不代表当前置顶\r\n     */\r\n    AIUserStore.prototype.getAIPinDefaultUser = function () {\r\n        var _this = this;\r\n        var aiUsers = this.getAIUserList();\r\n        return aiUsers.filter(function (item) {\r\n            var serverExt = _this.getAIUserServerExt(item.accountId);\r\n            return serverExt.pinDefault === 1;\r\n        });\r\n    };\r\n    /**\r\n     * 获取当前置顶的数字人\r\n     */\r\n    AIUserStore.prototype.getAIPinUser = function () {\r\n        var myUserServerExt = this.rootStore.userStore.getMyUserServerExt();\r\n        return this.getAIPinDefaultUser().filter(function (item) {\r\n            var _a;\r\n            return !((_a = myUserServerExt.unpinAIUsers) === null || _a === void 0 ? void 0 : _a.includes(item.accountId));\r\n        });\r\n    };\r\n    /**\r\n     * 判断一个数字人是否 pin 置顶\r\n     */\r\n    AIUserStore.prototype.isAIPinUser = function (accountId) {\r\n        return this.getAIPinUser().some(function (item) { return item.accountId === accountId; });\r\n    };\r\n    /**\r\n     * 判断是否正在 AI 划词中\r\n     */\r\n    AIUserStore.prototype.isAISearching = function () {\r\n        var _a;\r\n        return this.proxyAccountId === ((_a = this.getAISearchUser()) === null || _a === void 0 ? void 0 : _a.accountId);\r\n    };\r\n    /**\r\n     * 判断是否正在 AI 翻译中\r\n     */\r\n    AIUserStore.prototype.isAITranslating = function () {\r\n        var _a;\r\n        return this.proxyAccountId === ((_a = this.getAITranslateUser()) === null || _a === void 0 ? void 0 : _a.accountId);\r\n    };\r\n    /**\r\n     * 判断是否AI数字人\r\n     */\r\n    AIUserStore.prototype.isAIUser = function (accountId) {\r\n        return this.aiUsers.has(accountId);\r\n    };\r\n    /**\r\n     * 重置 AI 代理状态\r\n     */\r\n    AIUserStore.prototype.resetAIProxy = function () {\r\n        this.requestIds = [];\r\n        this.aiReqMsgs = [];\r\n        this.aiResMsgs = [];\r\n        this.proxyAccountId = '';\r\n        this.onSendAIProxyErrorHandler = function () {\r\n            //\r\n        };\r\n    };\r\n    /**\r\n     * 从 sdk 获取 AI 数字人列表并维护到内存中\r\n     */\r\n    AIUserStore.prototype.getAIUserListActive = function () {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var aiUsers, error_1;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('getAIUserListActive');\r\n                        return [4 /*yield*/, this.nim.V2NIMAIService.getAIUserList()];\r\n                    case 1:\r\n                        aiUsers = _d.sent();\r\n                        this.addAIUsers(aiUsers);\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('getAIUserListActive success:', aiUsers);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_1 = _d.sent();\r\n                        // 未开通ai聊功能的 此处不需要报错\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.log('getAIUserListActive failed:', error_1);\r\n                        return [3 /*break*/, 3];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 发送 AI 代理请求\r\n     * @params requestId 请求 ID，用于区分不同的请求，传就表示新的请求，不传表示继续上次的请求\r\n     */\r\n    AIUserStore.prototype.sendAIProxyActive = function (params) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var finalParams, error_2;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('sendAIProxyActive', params);\r\n                        finalParams = __assign({}, params);\r\n                        // 表示新的请求，重置 requestId、aiResMsgs、proxyAccountId\r\n                        if (params.requestId) {\r\n                            this.resetAIProxy();\r\n                            this.requestIds.push(params.requestId);\r\n                            this.proxyAccountId = params.accountId;\r\n                        }\r\n                        else {\r\n                            finalParams.requestId = Math.random().toString(36).slice(2);\r\n                            this.requestIds.push(finalParams.requestId);\r\n                        }\r\n                        if (params.onSendAIProxyErrorHandler) {\r\n                            this.onSendAIProxyErrorHandler = params.onSendAIProxyErrorHandler;\r\n                        }\r\n                        return [4 /*yield*/, this.nim.V2NIMAIService.proxyAIModelCall(finalParams)];\r\n                    case 1:\r\n                        _d.sent();\r\n                        this.aiReqMsgs.push(params.content);\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('sendAIProxyActive success:', params);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_2 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('sendAIProxyActive failed:', error_2.toString());\r\n                        this.onSendAIProxyErrorHandler(error_2.code);\r\n                        throw error_2;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AIUserStore.prototype._onProxyAIModelCall = function (res) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('_onProxyAIModelCall', res);\r\n        if (this.requestIds.includes(res.requestId)) {\r\n            if (res.code === 200) {\r\n                this.aiResMsgs.push(res.content.msg);\r\n            }\r\n            else {\r\n                this.aiReqMsgs.pop();\r\n                this.onSendAIProxyErrorHandler(res.code);\r\n            }\r\n        }\r\n    };\r\n    return AIUserStore;\r\n}());\n\n/** Mobx 可观察对象，负责 UI 会用到的属性的子 store */\r\nvar UiStore = /** @class */ (function () {\r\n    function UiStore(rootStore) {\r\n        this.rootStore = rootStore;\r\n        // 这边使用 undefined 会导致无法被注册成 observable，但是 demo 上没问题，不知道是为什么，很懵逼，但是先把这边附上默认值就可以解决\r\n        this.selectedContactType = '';\r\n        /**\r\n         * 当前选中的会话\r\n         */\r\n        this.selectedConversation = '';\r\n        this.logger = null;\r\n        makeAutoObservable(this);\r\n        this.logger = rootStore.logger;\r\n    }\r\n    /**\r\n     * 重置状态\r\n     */\r\n    UiStore.prototype.resetState = function () {\r\n        this.selectedContactType = '';\r\n        this.selectedConversation = '';\r\n    };\r\n    /**\r\n     * 销毁UiStore，使UI重置\r\n     */\r\n    UiStore.prototype.destroy = function () {\r\n        this.resetState();\r\n    };\r\n    /**\r\n     * 通讯录选中类型\r\n     * @param contactType - 导航类型\r\n     */\r\n    UiStore.prototype.selectContactType = function (contactType) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('selectContactType: ', contactType);\r\n        this.selectedContactType = contactType;\r\n    };\r\n    /**\r\n     * 取消通讯录选中\r\n     */\r\n    UiStore.prototype.unselectContactType = function () {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('unselectContactType');\r\n        this.selectedContactType = '';\r\n    };\r\n    /**\r\n     * 切换会话\r\n     * @param conversationId - 会话ID\r\n     */\r\n    UiStore.prototype.selectConversation = function (conversationId) {\r\n        var _a, _b, _c, _d, _e, _f;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_g) {\r\n                switch (_g.label) {\r\n                    case 0:\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('selectConversation: ', conversationId);\r\n                        if (conversationId === this.selectedConversation) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        this.rootStore.msgStore.msgs.resetLimitState();\r\n                        this.selectedConversation = conversationId;\r\n                        if (!conversationId) return [3 /*break*/, 4];\r\n                        if (!((_b = this.rootStore.sdkOptions) === null || _b === void 0 ? void 0 : _b.enableV2CloudConversation)) return [3 /*break*/, 2];\r\n                        (_c = this.rootStore.conversationStore) === null || _c === void 0 ? void 0 : _c.resetConversationAit(conversationId);\r\n                        return [4 /*yield*/, ((_d = this.rootStore.conversationStore) === null || _d === void 0 ? void 0 : _d.resetConversation(conversationId))];\r\n                    case 1:\r\n                        _g.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 2:\r\n                        (_e = this.rootStore.localConversationStore) === null || _e === void 0 ? void 0 : _e.resetConversationAit(conversationId);\r\n                        return [4 /*yield*/, ((_f = this.rootStore.localConversationStore) === null || _f === void 0 ? void 0 : _f.resetConversation(conversationId))];\r\n                    case 3:\r\n                        _g.sent();\r\n                        _g.label = 4;\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 取消选中会话\r\n     */\r\n    UiStore.prototype.unselectConversation = function () {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('unselectConversation');\r\n        this.selectedConversation = '';\r\n        this.rootStore.msgStore.msgs.resetLimitState();\r\n    };\r\n    /**\r\n     * 获取用户关系\r\n     * @param account - 账号\r\n     */\r\n    UiStore.prototype.getRelation = function (account) {\r\n        var res = 'stranger';\r\n        if (this.rootStore.userStore.myUserInfo.accountId === account) {\r\n            res = 'myself';\r\n        }\r\n        else if (this.rootStore.aiUserStore.aiUsers.has(account)) {\r\n            res = 'ai';\r\n        }\r\n        else if (this.rootStore.friendStore.friends.has(account)) {\r\n            res = 'friend';\r\n        }\r\n        else {\r\n            res = 'stranger';\r\n        }\r\n        // this.logger?.log('getRelation success', account, res)\r\n        return {\r\n            relation: res,\r\n            isInBlacklist: this.rootStore.relationStore.isInBlacklist(account),\r\n        };\r\n    };\r\n    /**\r\n     * 获取好友名片\r\n     * * @param account - 账号\r\n     */\r\n    UiStore.prototype.getFriendWithUserNameCard = function (account) {\r\n        var friend = this.rootStore.friendStore.friends.get(account) || {\r\n            accountId: '',\r\n            serverExtension: '',\r\n            customerExtension: '',\r\n        };\r\n        var userCard = this.rootStore.userStore.users.get(account) || {\r\n            accountId: '',\r\n            name: '',\r\n            createTime: Date.now(),\r\n        };\r\n        return __assign(__assign({}, friend), userCard);\r\n    };\r\n    /**\r\n     * 查询用户称谓\r\n     * 优先级按照 备注 > 群昵称 > 好友昵称 > 消息上的昵称 > 好友账号 返回，如果是机器人则优先返回机器人名字\r\n     * * @param account - 账号\r\n     * * @param teamId - 群号\r\n     * * @param ignoreAlias - 是否忽略好友备注\r\n     * * @param nickFromMsg - 消息上的昵称\r\n     */\r\n    UiStore.prototype.getAppellation = function (_a) {\r\n        var _b;\r\n        var account = _a.account, _c = _a.teamId, teamId = _c === void 0 ? '' : _c, _d = _a.ignoreAlias, ignoreAlias = _d === void 0 ? false : _d, _e = _a.nickFromMsg, nickFromMsg = _e === void 0 ? '' : _e;\r\n        var aiUser = this.rootStore.aiUserStore.aiUsers.get(account);\r\n        if (aiUser) {\r\n            return aiUser.name || account;\r\n        }\r\n        var friend = this.rootStore.friendStore.friends.get(account);\r\n        var user = this.rootStore.userStore.users.get(account);\r\n        var teamMember = (_b = this.rootStore.teamMemberStore.teamMembers\r\n            .get(teamId)) === null || _b === void 0 ? void 0 : _b.get(account);\r\n        return ((!ignoreAlias && (friend === null || friend === void 0 ? void 0 : friend.alias)) ||\r\n            (teamMember === null || teamMember === void 0 ? void 0 : teamMember.teamNick) ||\r\n            (user === null || user === void 0 ? void 0 : user.name) ||\r\n            nickFromMsg ||\r\n            account);\r\n    };\r\n    Object.defineProperty(UiStore.prototype, \"friends\", {\r\n        get: function () {\r\n            return __spreadArray([], __read(this.rootStore.friendStore.friends.values()), false);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UiStore.prototype, \"conversations\", {\r\n        get: function () {\r\n            var _a;\r\n            return ((_a = this.rootStore.conversationStore) === null || _a === void 0 ? void 0 : _a.conversations.values())\r\n                ? __spreadArray([], __read(this.rootStore.conversationStore.conversations.values()), false) : [];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UiStore.prototype, \"localConversations\", {\r\n        get: function () {\r\n            var _a;\r\n            return ((_a = this.rootStore.localConversationStore) === null || _a === void 0 ? void 0 : _a.conversations.values())\r\n                ? __spreadArray([], __read(this.rootStore.localConversationStore.conversations.values()), false) : [];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UiStore.prototype, \"users\", {\r\n        get: function () {\r\n            return __spreadArray([], __read(this.rootStore.userStore.users.values()), false);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UiStore.prototype, \"teamList\", {\r\n        get: function () {\r\n            var teams = __spreadArray([], __read(this.rootStore.teamStore.teams.values()), false);\r\n            return teams\r\n                .filter(function (item) { return item.isValidTeam; })\r\n                .sort(function (a, b) { return b.createTime - a.createTime; });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UiStore.prototype, \"applyMsgs\", {\r\n        get: function () {\r\n            return __spreadArray([], __read(this.rootStore.sysMsgStore.friendApplyMsg.values()), false);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return UiStore;\r\n}());\n\n/**Mobx 可观察对象，负责管理文件存储的子 store */\r\nvar StorageStore = /** @class */ (function () {\r\n    function StorageStore(rootStore, nim) {\r\n        this.rootStore = rootStore;\r\n        this.nim = nim;\r\n        makeAutoObservable(this);\r\n    }\r\n    /**\r\n     * 上传文件\r\n     * @param fileObj - 文件对象或文件路径\r\n     */\r\n    StorageStore.prototype.uploadFileActive = function (fileObj) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var errorContent, avatarUrl, task, error_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        logger.log('uploadFileActive', fileObj);\r\n                        if (!fileObj) {\r\n                            errorContent = 'upload avatar error, no file or filepath';\r\n                            logger.warn(errorContent);\r\n                            throw new Error(errorContent);\r\n                        }\r\n                        avatarUrl = '';\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        task = this.nim.V2NIMStorageService.createUploadFileTask({\r\n                            fileObj: fileObj,\r\n                        });\r\n                        return [4 /*yield*/, this.nim.V2NIMStorageService.uploadFile(task, function () {\r\n                                /**/\r\n                            })];\r\n                    case 2:\r\n                        avatarUrl = _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_1 = _a.sent();\r\n                        logger.warn('upload avatar error ', error_1);\r\n                        throw error_1;\r\n                    case 4: return [2 /*return*/, avatarUrl];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return StorageStore;\r\n}());\n\nvar name = \"nim-web-sdk-ng\";\nvar version = \"10.9.30\";\nvar sdk = {\n\tversion: 100930,\n\tversionFormat: \"10.9.30\"\n};\nvar description = \"Yunxin IM SDK next generation\";\nvar main = \"./dist/v2/NIM_BROWSER_SDK.js\";\nvar types = \"./dist/v2/NIM_BROWSER_SDK/index.d.ts\";\nvar scripts = {\n\ttest: \"jest --maxWorkers 1 --silent\",\n\tlint: \"npx eslint ./src\",\n\tdev: \"cd pages/ && npm run dev\",\n\tclean: \"rm -rf ./dist\",\n\temitTypes: \"tsc --emitDeclarationOnly --declaration --declarationDir temp/types\",\n\t\"build:esm\": \"npm run emitTypes && rollup --config ./build/esm.config.js\",\n\tbuild: \"npm run clean && npm run emitTypes && node script/copyPlugin.js && rollup --config ./build/v1.config.js && rollup --config ./build/v2.config.js && rollup --config ./build/esm.config.js\",\n\tanalyze: \"npm run clean && npx rollup --config ./build/analyze.config.js && ls -lhR dist | grep \\\".js\\\"\",\n\t\"pages:build\": \"cd pages/ && npm install && npm run build && cp -rf dist/ ../dist/\",\n\tapi: \"npm run translate && node script/buildApi.js\",\n\ttranslate: \"rm -rf ./apidocs && multilingual-tool convert --indir=src/typings --outdir=apidocs --includes=ts\",\n\t\"api-diff\": \"multilingual-tool diff --dir=src/typings --receiver=3070898 --exclude=DS_Store\",\n\tupdateVerInNdp: \"node ./script/updateVerInNdp.js\"\n};\nvar repository = {\n\ttype: \"git\",\n\turl: \"ssh://git@g.hz.netease.com:22222/yunxin/im/sdk.git\"\n};\nvar keywords = [\n\t\"im\",\n\t\"sdk\"\n];\nvar author = \"yunxin\";\nvar license = \"ISC\";\nvar eslintIgnore = [\n\t\"dist/\"\n];\nvar files = [\n\t\"README.md\",\n\t\"CHANGELOG.md\",\n\t\"dist/v1/NIM*\",\n\t\"dist/v1/CHATROOM*\",\n\t\"dist/v1/QCHAT*\",\n\t\"dist/v2/NIM*\",\n\t\"dist/v2/CHATROOM*\",\n\t\"dist/esm/*\"\n];\nvar devDependencies = {\n\t\"@babel/core\": \"^7.13.15\",\n\t\"@babel/plugin-proposal-class-properties\": \"^7.13.0\",\n\t\"@babel/plugin-transform-block-scoping\": \"^7.23.4\",\n\t\"@babel/plugin-transform-runtime\": \"^7.13.15\",\n\t\"@babel/preset-env\": \"^7.13.15\",\n\t\"@babel/preset-typescript\": \"^7.13.0\",\n\t\"@babel/runtime\": \"^7.13.10\",\n\t\"@babel/runtime-corejs3\": \"^7.13.10\",\n\t\"@microsoft/api-extractor\": \"^7.19.4\",\n\t\"@rollup/plugin-babel\": \"^5.3.0\",\n\t\"@rollup/plugin-commonjs\": \"^18.0.0\",\n\t\"@rollup/plugin-json\": \"^4.1.0\",\n\t\"@rollup/plugin-node-resolve\": \"^11.2.1\",\n\t\"@rollup/plugin-replace\": \"^3.0.0\",\n\t\"@rollup/plugin-typescript\": \"^8.3.0\",\n\t\"@types/backo2\": \"^1.0.1\",\n\t\"@types/jest\": \"^27.4.1\",\n\t\"@types/lodash\": \"^4.14.177\",\n\t\"@types/platform\": \"^1.3.3\",\n\t\"@typescript-eslint/eslint-plugin\": \"^5.12.0\",\n\t\"@typescript-eslint/parser\": \"^5.12.0\",\n\t\"@yxfe/multilingual-tool\": \"^1.0.30\",\n\t\"@yxfe/nim-log-reporter\": \"^1.0.6\",\n\t\"@yxfe/nos-uploader\": \"^1.0.28\",\n\t\"@yxfe/request\": \"^0.2.12\",\n\tbacko2: \"^1.0.2\",\n\t\"browser-md5-file\": \"^1.1.1\",\n\t\"core-js\": \"^3.10.1\",\n\t\"cross-env\": \"^7.0.3\",\n\teslint: \"^8.9.0\",\n\t\"eslint-config-prettier\": \"^8.5.0\",\n\t\"eslint-plugin-prettier\": \"^4.0.0\",\n\teventemitter3: \"^4.0.7\",\n\thusky: \"^7.0.4\",\n\tjest: \"^27.5.1\",\n\t\"lodash-es\": \"^4.17.21\",\n\t\"neroom-web-sdk\": \"1.7.0\",\n\tplatform: \"^1.3.6\",\n\t\"pre-commit\": \"^1.2.2\",\n\tprettier: \"^2.6.1\",\n\t\"react-native\": \"^0.75.2\",\n\trollup: \"^2.45.2\",\n\t\"rollup-plugin-banner\": \"^0.2.1\",\n\t\"rollup-plugin-banner2\": \"^1.2.2\",\n\t\"rollup-plugin-copy\": \"^3.4.0\",\n\t\"rollup-plugin-insert\": \"^1.3.2\",\n\t\"rollup-plugin-terser\": \"^7.0.2\",\n\t\"rollup-plugin-visualizer\": \"^5.12.0\",\n\t\"ts-jest\": \"^27.1.4\",\n\ttslib: \"^2.3.1\",\n\ttypedoc: \"^0.22.11\",\n\ttypescript: \"^4.5.4\"\n};\nvar sdkPkg = {\n\tname: name,\n\tversion: version,\n\tsdk: sdk,\n\tdescription: description,\n\tmain: main,\n\ttypes: types,\n\tscripts: scripts,\n\trepository: repository,\n\tkeywords: keywords,\n\tauthor: author,\n\tlicense: license,\n\teslintIgnore: eslintIgnore,\n\tfiles: files,\n\tdevDependencies: devDependencies\n};\n\n/**Mobx 可观察对象，负责管理本地会话列表的子 store */\r\nvar LocalConversationStore = /** @class */ (function () {\r\n    function LocalConversationStore(rootStore, nim) {\r\n        this.rootStore = rootStore;\r\n        this.nim = nim;\r\n        this.conversations = new Map();\r\n        this.totalUnreadCount = 0;\r\n        this.logger = null;\r\n        makeAutoObservable(this);\r\n        this._onSyncStarted = this._onSyncStarted.bind(this);\r\n        this._onSyncFinished = this._onSyncFinished.bind(this);\r\n        this._onSyncFailed = this._onSyncFailed.bind(this);\r\n        this._onConversationCreated = this._onConversationCreated.bind(this);\r\n        this._onConversationDeleted = this._onConversationDeleted.bind(this);\r\n        this._onConversationChanged = this._onConversationChanged.bind(this);\r\n        this._onTotalUnreadCountChanged = this._onTotalUnreadCountChanged.bind(this);\r\n        this.logger = rootStore.logger;\r\n        /** 数据同步开始 */\r\n        nim.V2NIMLocalConversationService.on('onSyncStarted', this._onSyncStarted);\r\n        /** 数据同步结束 */\r\n        nim.V2NIMLocalConversationService.on('onSyncFinished', this._onSyncFinished);\r\n        /** 数据同步失败 */\r\n        nim.V2NIMLocalConversationService.on('onSyncFailed', this._onSyncFailed);\r\n        /** 会话创建 */\r\n        nim.V2NIMLocalConversationService.on('onConversationCreated', this._onConversationCreated);\r\n        /** 会话删除 */\r\n        nim.V2NIMLocalConversationService.on('onConversationDeleted', this._onConversationDeleted);\r\n        /** 会话更新 */\r\n        nim.V2NIMLocalConversationService.on('onConversationChanged', this._onConversationChanged);\r\n        /** 会话总未读数变化 */\r\n        nim.V2NIMLocalConversationService.on('onTotalUnreadCountChanged', this._onTotalUnreadCountChanged);\r\n    }\r\n    LocalConversationStore.prototype.resetState = function () {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('LocalConversationStore Conversation resetState');\r\n        this.conversations.clear();\r\n        this.totalUnreadCount = 0;\r\n    };\r\n    /**\r\n     * 销毁\r\n     */\r\n    LocalConversationStore.prototype.destroy = function () {\r\n        this.resetState();\r\n        this.nim.V2NIMLocalConversationService.off('onSyncStarted', this._onSyncStarted);\r\n        this.nim.V2NIMLocalConversationService.off('onSyncFinished', this._onSyncFinished);\r\n        this.nim.V2NIMLocalConversationService.off('onSyncFailed', this._onSyncFailed);\r\n        this.nim.V2NIMLocalConversationService.off('onConversationCreated', this._onConversationCreated);\r\n        this.nim.V2NIMLocalConversationService.off('onConversationDeleted', this._onConversationDeleted);\r\n        this.nim.V2NIMLocalConversationService.off('onConversationChanged', this._onConversationChanged);\r\n        this.nim.V2NIMLocalConversationService.off('onTotalUnreadCountChanged', this._onTotalUnreadCountChanged);\r\n    };\r\n    /**\r\n     * 添加内存中的会话\r\n     * @param conversations 会话数组\r\n     */\r\n    LocalConversationStore.prototype.addConversation = function (conversations) {\r\n        var _this = this;\r\n        conversations\r\n            .filter(function (item) { return !!item.conversationId; })\r\n            // 暂时仅支持 p2p 和 team\r\n            .filter(function (item) {\r\n            return [\r\n                1 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_P2P */,\r\n                2 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_TEAM */,\r\n            ].includes(item.type);\r\n        })\r\n            .forEach(function (item) { return __awaiter(_this, void 0, void 0, function () {\r\n            var oldConversation;\r\n            return __generator(this, function (_a) {\r\n                oldConversation = this.conversations.get(item.conversationId);\r\n                // 先更新一次\r\n                this.conversations.set(item.conversationId, __assign(__assign({}, oldConversation), item));\r\n                return [2 /*return*/];\r\n            });\r\n        }); });\r\n    };\r\n    /**\r\n     * 更新内存中的会话\r\n     * @param conversations 会话数组\r\n     */\r\n    LocalConversationStore.prototype.updateConversation = function (conversations) {\r\n        var _this = this;\r\n        conversations\r\n            .filter(function (item) { return !!item.conversationId; })\r\n            // 暂时仅支持 p2p 和 team\r\n            .filter(function (item) {\r\n            return [\r\n                1 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_P2P */,\r\n                2 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_TEAM */,\r\n            ].includes(item.type);\r\n        })\r\n            .forEach(function (item) {\r\n            var oldConversation = _this.conversations.get(item.conversationId);\r\n            _this.conversations.set(item.conversationId, __assign(__assign({}, oldConversation), item));\r\n        });\r\n    };\r\n    /**\r\n     * 移除内存中的会话\r\n     * @param conversationId 会话ID\r\n     */\r\n    LocalConversationStore.prototype.removeConversation = function (conversationIds) {\r\n        var _this = this;\r\n        conversationIds.forEach(function (item) {\r\n            _this.conversations.delete(item);\r\n            if (_this.rootStore.uiStore.selectedConversation === item) {\r\n                _this.rootStore.uiStore.unselectConversation();\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * 重置会话未读数\r\n     * @param conversationId - 消息所属的会话的ID\r\n     */\r\n    LocalConversationStore.prototype.resetConversation = function (conversationId) {\r\n        var _a, _b, _c, _d;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var conversation, error_1;\r\n            return __generator(this, function (_e) {\r\n                switch (_e.label) {\r\n                    case 0:\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('LocalConversationStore resetConversation', conversationId);\r\n                        conversation = this.conversations.get(conversationId);\r\n                        if (!conversation) {\r\n                            (_b = this.logger) === null || _b === void 0 ? void 0 : _b.warn('LocalConversationStore resetConversation: conversation is not found.', conversationId);\r\n                            return [2 /*return*/];\r\n                        }\r\n                        _e.label = 1;\r\n                    case 1:\r\n                        _e.trys.push([1, 4, , 5]);\r\n                        if (!conversation.unreadCount) return [3 /*break*/, 3];\r\n                        // 请求前也清理一次会话未读数，fix http://jira.netease.com/browse/YYTX-34326\r\n                        this._resetMemoryConversationUnreadCount(conversation);\r\n                        return [4 /*yield*/, this.nim.V2NIMLocalConversationService.clearUnreadCountByIds([\r\n                                conversation.conversationId,\r\n                            ])];\r\n                    case 2:\r\n                        _e.sent();\r\n                        this._resetMemoryConversationUnreadCount(conversation);\r\n                        _e.label = 3;\r\n                    case 3:\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.log('LocalConversationStore resetConversation success');\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        error_1 = _e.sent();\r\n                        (_d = this.logger) === null || _d === void 0 ? void 0 : _d.error('LocalConversationStore resetConversation failed: ', error_1);\r\n                        throw error_1;\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 插入一条会话记录\r\n     * @param conversationType\r\n     * @param receiverId - 接收方, 对方帐号或者群id\r\n     * @param isSelected - 是否选中\r\n     */\r\n    LocalConversationStore.prototype.insertConversationActive = function (conversationType, receiverId, isSelected) {\r\n        var _a, _b, _c;\r\n        if (isSelected === void 0) { isSelected = true; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var conversationId, conversation, error_2;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 5, , 6]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('LocalConversationStore insertConversationActive', {\r\n                            conversationType: conversationType,\r\n                            receiverId: receiverId,\r\n                            isSelected: isSelected,\r\n                        });\r\n                        conversationId = '';\r\n                        if (conversationType ===\r\n                            1 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_P2P */) {\r\n                            conversationId =\r\n                                this.nim.V2NIMConversationIdUtil.p2pConversationId(receiverId);\r\n                        }\r\n                        else if (conversationType ===\r\n                            2 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_TEAM */) {\r\n                            conversationId =\r\n                                this.nim.V2NIMConversationIdUtil.teamConversationId(receiverId);\r\n                        }\r\n                        else {\r\n                            throw new Error('Unsupported conversation type');\r\n                        }\r\n                        if (!!this.conversations.has(conversationId)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.nim.V2NIMLocalConversationService.createConversation(conversationId)];\r\n                    case 1:\r\n                        conversation = _d.sent();\r\n                        this.addConversation([conversation]);\r\n                        _d.label = 2;\r\n                    case 2:\r\n                        if (!isSelected) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, this.rootStore.uiStore.selectConversation(conversationId)];\r\n                    case 3:\r\n                        _d.sent();\r\n                        _d.label = 4;\r\n                    case 4:\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('LocalConversationStore insertConversationActive success', {\r\n                            conversationType: conversationType,\r\n                            receiverId: receiverId,\r\n                            isSelected: isSelected,\r\n                        });\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        error_2 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('LocalConversationStore insertConversationActive failed: ', { conversationType: conversationType, receiverId: receiverId, isSelected: isSelected }, error_2);\r\n                        throw error_2;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 删除会话记录\r\n     * @param conversationId - 消息所属的会话的ID\r\n     */\r\n    LocalConversationStore.prototype.deleteConversationActive = function (conversationId) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_4;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 6, , 7]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('LocalConversationStore deleteConversationActive', conversationId);\r\n                        _d.label = 1;\r\n                    case 1:\r\n                        _d.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.stickTopConversationActive(conversationId, false)];\r\n                    case 2:\r\n                        _d.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        _d.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 4:\r\n                        // 先删除内存，防止删除失败导致一些问题\r\n                        this.removeConversation([conversationId]);\r\n                        // 不删除历史消息，让表现跟线上一致，后续可根据需求调整\r\n                        return [4 /*yield*/, this.nim.V2NIMLocalConversationService.deleteConversation(conversationId, false)];\r\n                    case 5:\r\n                        // 不删除历史消息，让表现跟线上一致，后续可根据需求调整\r\n                        _d.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('LocalConversationStore deleteConversationActive success');\r\n                        return [3 /*break*/, 7];\r\n                    case 6:\r\n                        error_4 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.warn('LocalConversationStore deleteConversationActive failed but continue: ', error_4);\r\n                        return [3 /*break*/, 7];\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 新增会话置顶\r\n     * @param conversationId - 消息所属的会话的ID\r\n     * @param stickTop - 是否置顶\r\n     */\r\n    LocalConversationStore.prototype.stickTopConversationActive = function (conversationId, stickTop) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_5;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('LocalConversationStore stickTopConversationActive', conversationId, stickTop);\r\n                        return [4 /*yield*/, this.nim.V2NIMLocalConversationService.stickTopConversation(conversationId, stickTop)];\r\n                    case 1:\r\n                        _d.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('LocalConversationStore stickTopConversationActive success');\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_5 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('LocalConversationStore stickTopConversationActive failed: ', error_5);\r\n                        throw error_5;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取会话列表\r\n     * @param offset 分页偏移量\r\n     * @param limit 分页拉取数量\r\n     */\r\n    LocalConversationStore.prototype.getConversationListActive = function (offset, limit) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var res, error_6;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 3, , 4]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('LocalConversationStore getConversationListActive', offset, limit);\r\n                        return [4 /*yield*/, this.nim.V2NIMLocalConversationService.getConversationList(offset, limit)];\r\n                    case 1:\r\n                        res = _d.sent();\r\n                        this.addConversation(res.conversationList);\r\n                        return [4 /*yield*/, this.getP2PMessageReceipt(res.conversationList\r\n                                .filter(function (item) {\r\n                                return item.type ===\r\n                                    1 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_P2P */;\r\n                            })\r\n                                .map(function (item) { return item.conversationId; }))];\r\n                    case 2:\r\n                        _d.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('LocalConversationStore getConversationListActive success', offset, limit, res);\r\n                        return [2 /*return*/, res];\r\n                    case 3:\r\n                        error_6 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('LocalConversationStore getConversationListActive failed: ', error_6, offset, limit);\r\n                        throw error_6;\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    LocalConversationStore.prototype.getP2PMessageReceipt = function (conversationIds) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var res, conversations, error_7;\r\n            var _this = this;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('LocalConversationStore getP2PMessageReceipt', conversationIds);\r\n                        return [4 /*yield*/, Promise.all(conversationIds.map(function (item) {\r\n                                return _this.nim.V2NIMMessageService.getP2PMessageReceipt(item);\r\n                            }))];\r\n                    case 1:\r\n                        res = _d.sent();\r\n                        conversations = res\r\n                            .map(function (item) {\r\n                            var conversation = _this.conversations.get(item.conversationId);\r\n                            if (conversation) {\r\n                                return __assign(__assign({}, conversation), { msgReceiptTime: item.timestamp });\r\n                            }\r\n                        })\r\n                            .filter(function (item) { return !!item; });\r\n                        this.updateConversation(conversations);\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('LocalConversationStore getP2PMessageReceipt success', conversationIds, res);\r\n                        return [2 /*return*/, res];\r\n                    case 2:\r\n                        error_7 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('LocalConversationStore getP2PMessageReceipt failed: ', error_7, conversationIds);\r\n                        throw error_7;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    LocalConversationStore.prototype._resetMemoryConversationUnreadCount = function (conversation) {\r\n        var newConversation = this.conversations.get(conversation.conversationId);\r\n        if (newConversation) {\r\n            this.updateConversation([__assign(__assign({}, newConversation), { unreadCount: 0 })]);\r\n        }\r\n    };\r\n    /**\r\n     * 获取会话已读时间戳。该时间包含多端已读时间戳\r\n     */\r\n    LocalConversationStore.prototype.getConversationReadTimeActive = function (conversationId) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var res, error_8;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('LocalConversationStore getConversationReadTimeActive', conversationId);\r\n                        return [4 /*yield*/, this.nim.V2NIMLocalConversationService.getConversationReadTime(conversationId)];\r\n                    case 1:\r\n                        res = _d.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('LocalConversationStore getConversationReadTimeActive success', conversationId, res);\r\n                        return [2 /*return*/, res];\r\n                    case 2:\r\n                        error_8 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('LocalConversationStore getConversationReadTimeActive failed: ', error_8, conversationId);\r\n                        throw error_8;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 标记会话已读时间戳\r\n     *\r\n     * 注: 当该方法调用后，SDK 可能给多端账户抛出以下的事件\r\n     *\r\n     * {@link V2NIMConversationListener.onConversationReadTimeUpdated | V2NIMConversationListener.onConversationReadTimeUpdated} <br/>\r\n     *\r\n     */\r\n    LocalConversationStore.prototype.markConversationReadActive = function (conversationId) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var res, error_9;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('LocalConversationStore markConversationReadActive', conversationId);\r\n                        return [4 /*yield*/, this.nim.V2NIMLocalConversationService.markConversationRead(conversationId)];\r\n                    case 1:\r\n                        res = _d.sent();\r\n                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('LocalConversationStore markConversationReadActive success', conversationId, res);\r\n                        return [2 /*return*/, res];\r\n                    case 2:\r\n                        error_9 = _d.sent();\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error('LocalConversationStore markConversationReadActive failed: ', error_9, conversationId);\r\n                        throw error_9;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    LocalConversationStore.prototype.handleConversationWithAit = function (msgs) {\r\n        var _this = this;\r\n        msgs.map(function (item) { return __awaiter(_this, void 0, void 0, function () {\r\n            var hasAitMsg, conversationReadTime, isCurConversation, isSendFromMe, conversation, aitMsgs;\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!(item.conversationType ===\r\n                            2 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_TEAM */ ||\r\n                            item.conversationType ===\r\n                                3 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_SUPER_TEAM */)) return [3 /*break*/, 2];\r\n                        if (!(item === null || item === void 0 ? void 0 : item.serverExtension)) return [3 /*break*/, 2];\r\n                        hasAitMsg = this.hasAitMsg([item.serverExtension]);\r\n                        return [4 /*yield*/, this.getConversationReadTimeActive(item.conversationId)];\r\n                    case 1:\r\n                        conversationReadTime = _b.sent();\r\n                        isCurConversation = item.conversationId == this.rootStore.uiStore.selectedConversation;\r\n                        isSendFromMe = item.senderId === ((_a = this.rootStore.userStore.myUserInfo) === null || _a === void 0 ? void 0 : _a.accountId);\r\n                        // 当前通过_onReceiveMessages获取的新消息时间戳大于会话的最后已读时间戳，且有@消息，且没有选中当前该会话，则标记为已读\r\n                        if (item.createTime > conversationReadTime &&\r\n                            hasAitMsg &&\r\n                            !isCurConversation &&\r\n                            !isSendFromMe) {\r\n                            conversation = this.conversations.get(item.conversationId);\r\n                            // 如果此时conversation为空，则可能的情况为:\r\n                            // 1.该用户删除了该会话后，又收到了 @消息（onReceiveMessages会先于onConversationCreated触发），此时需要在onConversationCreated处理 @消息相关\r\n                            // 2.im sdk初始化过程中，onReceiveMessages 会先于onSyncFinished（因为实在onSyncFinished中拉取会话列表） 触发，此时由于会话列表为空，上面的if判断会为false，则在else中先在内存中构造一个会话，带上aitMsg，后等会话列表拉取完成进行合并\r\n                            if (conversation) {\r\n                                aitMsgs = conversation.aitMsgs || [];\r\n                                if (aitMsgs.length === 0) {\r\n                                    this.updateConversation([\r\n                                        __assign(__assign({}, conversation), { aitMsgs: [item.messageClientId] }),\r\n                                    ]);\r\n                                }\r\n                                else {\r\n                                    this.updateConversation([\r\n                                        __assign(__assign({}, conversation), { aitMsgs: __spreadArray(__spreadArray([], __read(aitMsgs), false), [item.messageClientId], false) }),\r\n                                    ]);\r\n                                }\r\n                            }\r\n                            else {\r\n                                this.addConversation([\r\n                                    //@ts-ignore\r\n                                    {\r\n                                        conversationId: item.conversationId,\r\n                                        type: item.conversationType,\r\n                                        aitMsgs: [item.messageClientId],\r\n                                    },\r\n                                ]);\r\n                            }\r\n                        }\r\n                        _b.label = 2;\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        }); });\r\n    };\r\n    LocalConversationStore.prototype.resetConversationAit = function (conversationId) {\r\n        var conversation = this.conversations.get(conversationId);\r\n        if ((conversation === null || conversation === void 0 ? void 0 : conversation.type) ===\r\n            2 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_TEAM */ ||\r\n            (conversation === null || conversation === void 0 ? void 0 : conversation.type) ===\r\n                3 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_SUPER_TEAM */) {\r\n            this.updateConversation([\r\n                __assign(__assign({}, conversation), { aitMsgs: [] }),\r\n            ]);\r\n        }\r\n    };\r\n    LocalConversationStore.prototype.hasAitMsg = function (serverExtensions) {\r\n        var _this = this;\r\n        var flag = false;\r\n        if (serverExtensions === null || serverExtensions === void 0 ? void 0 : serverExtensions.length) {\r\n            serverExtensions === null || serverExtensions === void 0 ? void 0 : serverExtensions.forEach(function (item) {\r\n                var _a, _b;\r\n                try {\r\n                    var extObj = JSON.parse(item || '{}');\r\n                    var yxAitMsg = extObj.yxAitMsg;\r\n                    var account_1 = _this.rootStore.userStore.myUserInfo.accountId;\r\n                    if (yxAitMsg) {\r\n                        (_a = Object.keys(yxAitMsg)) === null || _a === void 0 ? void 0 : _a.forEach(function (key) {\r\n                            if (key === account_1 || key === AT_ALL_ACCOUNT) {\r\n                                flag = true;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                catch (_c) {\r\n                    (_b = _this.logger) === null || _b === void 0 ? void 0 : _b.error('LocalConversationStore parse serverExtension failed: ', item);\r\n                }\r\n            });\r\n        }\r\n        return flag;\r\n    };\r\n    LocalConversationStore.prototype._onSyncStarted = function () {\r\n        var _a, _b;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('LocalConversationStore _onSyncStarted');\r\n        // 获取会话列表\r\n        (_b = this.rootStore.localConversationStore) === null || _b === void 0 ? void 0 : _b.getConversationListActive(0, this.rootStore.localOptions.conversationLimit || 100);\r\n    };\r\n    LocalConversationStore.prototype._onSyncFinished = function () {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_c) {\r\n                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('LocalConversationStore _onSyncFinished');\r\n                // 获取会话列表\r\n                (_b = this.rootStore.localConversationStore) === null || _b === void 0 ? void 0 : _b.getConversationListActive(0, this.rootStore.localOptions.conversationLimit || 100);\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    LocalConversationStore.prototype._onSyncFailed = function (e) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('LocalConversationStore _onSyncFailed', e);\r\n    };\r\n    LocalConversationStore.prototype._onConversationCreated = function (data) {\r\n        var _this = this;\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('LocalConversationStore _onConversationCreated', data);\r\n        // 如果是创群，此时_onConversationCreated 返回的data可能没有avatar和name，需要getConversation\r\n        if (data.type ===\r\n            2 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_TEAM */) {\r\n            this.nim.V2NIMLocalConversationService.getConversation(data.conversationId).then(function (conversation) {\r\n                _this.addConversation([conversation]);\r\n                // 处理@消息 情况为\r\n                if (conversation.lastMessage) {\r\n                    _this.handleConversationWithAit([\r\n                        __assign(__assign({}, conversation.lastMessage), conversation.lastMessage.messageRefer),\r\n                    ]);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.addConversation([data]);\r\n            // 会话创建的时候，获取一下当前会话的最后已读时间，便于展示消息已读未读\r\n            if (data.type ===\r\n                1 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_P2P */) {\r\n                var conversationId_1 = data.conversationId;\r\n                this.nim.V2NIMMessageService.getP2PMessageReceipt(conversationId_1).then(function (res) {\r\n                    var conversation = _this.conversations.get(conversationId_1);\r\n                    if (conversation) {\r\n                        _this.updateConversation([\r\n                            __assign(__assign({}, conversation), { msgReceiptTime: res.timestamp }),\r\n                        ]);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n    LocalConversationStore.prototype._onConversationDeleted = function (conversationIds) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('LocalConversationStore _onConversationDeleted', conversationIds);\r\n        this.removeConversation(conversationIds);\r\n    };\r\n    LocalConversationStore.prototype._onConversationChanged = function (data) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('LocalConversationStore _onConversationChanged', data);\r\n                this.addConversation(data);\r\n                data.forEach(function (item) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var attachment, type;\r\n                    var _a, _b, _c, _d;\r\n                    return __generator(this, function (_e) {\r\n                        switch (_e.label) {\r\n                            case 0:\r\n                                attachment = (_a = item.lastMessage) === null || _a === void 0 ? void 0 : _a.attachment;\r\n                                type = attachment === null || attachment === void 0 ? void 0 : attachment.type;\r\n                                if (!(((_b = item.lastMessage) === null || _b === void 0 ? void 0 : _b.messageType) ===\r\n                                    5 /* V2NIMConst.V2NIMMessageType.V2NIM_MESSAGE_TYPE_NOTIFICATION */ &&\r\n                                    ((type ===\r\n                                        1 /* V2NIMConst.V2NIMMessageNotificationType\r\n                                                    .V2NIM_MESSAGE_NOTIFICATION_TYPE_TEAM_KICK */ &&\r\n                                        ((_c = attachment === null || attachment === void 0 ? void 0 : attachment.targetIds) === null || _c === void 0 ? void 0 : _c.includes(this.rootStore.userStore.myUserInfo.accountId))) ||\r\n                                        (type ===\r\n                                            2 /* V2NIMConst.V2NIMMessageNotificationType\r\n                                                          .V2NIM_MESSAGE_NOTIFICATION_TYPE_TEAM_LEAVE */ &&\r\n                                            ((_d = item.lastMessage) === null || _d === void 0 ? void 0 : _d.messageRefer.senderId) ===\r\n                                                this.rootStore.userStore.myUserInfo.accountId) ||\r\n                                        type ===\r\n                                            4 /* V2NIMConst.V2NIMMessageNotificationType\r\n                                                          .V2NIM_MESSAGE_NOTIFICATION_TYPE_TEAM_DISMISS */))) return [3 /*break*/, 2];\r\n                                return [4 /*yield*/, this.deleteConversationActive(item.conversationId)];\r\n                            case 1:\r\n                                _e.sent();\r\n                                return [3 /*break*/, 4];\r\n                            case 2:\r\n                                if (!(this.rootStore.uiStore.selectedConversation === item.conversationId)) return [3 /*break*/, 4];\r\n                                return [4 /*yield*/, this.resetConversation(item.conversationId)];\r\n                            case 3:\r\n                                _e.sent();\r\n                                _e.label = 4;\r\n                            case 4:\r\n                                if (item.type ===\r\n                                    2 /* V2NIMConst.V2NIMConversationType.V2NIM_CONVERSATION_TYPE_TEAM */ &&\r\n                                    item.unreadCount == 0) {\r\n                                    this.resetConversationAit(item.conversationId);\r\n                                }\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    LocalConversationStore.prototype._onTotalUnreadCountChanged = function (data) {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('LocalConversationStore _onTotalUnreadCountChanged', data);\r\n        this.totalUnreadCount = data;\r\n    };\r\n    return LocalConversationStore;\r\n}());\n\n/**Mobx 可观察对象，负责管理在线离线等事件订阅的子store */\r\nvar SubscriptionStore = /** @class */ (function () {\r\n    function SubscriptionStore(rootStore, nim) {\r\n        this.rootStore = rootStore;\r\n        this.nim = nim;\r\n        this.stateMap = new Map();\r\n        this.logger = null;\r\n        makeAutoObservable(this);\r\n        this._onUserStatusChanged = this._onUserStatusChanged.bind(this);\r\n        this.nim.V2NIMSubscriptionService.on('onUserStatusChanged', this._onUserStatusChanged);\r\n        this.logger = rootStore.logger;\r\n    }\r\n    SubscriptionStore.prototype.resetState = function () {\r\n        var _a;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('SubscriptionStore resetState');\r\n        this.stateMap.clear();\r\n    };\r\n    /**\r\n     * 销毁SubscriptionStore，会取消相关事件监听\r\n     */\r\n    SubscriptionStore.prototype.destroy = function () {\r\n        this.resetState();\r\n        this.nim.V2NIMSubscriptionService.off('onUserStatusChanged', this._onUserStatusChanged);\r\n    };\r\n    /** 获取当前用户在线离线状态\r\n     * @param accountId 用户ID\r\n     **/\r\n    SubscriptionStore.prototype.getUserStatus = function (accountId) {\r\n        return this.stateMap.get(accountId);\r\n    };\r\n    /** 获取当前所有用户在线离线状态\r\n     **/\r\n    SubscriptionStore.prototype.getUserStatusList = function () {\r\n        return __spreadArray([], __read(this.stateMap.values()), false);\r\n    };\r\n    /**\r\n     * 订阅用户状态，包括在线状态或用户自定义的状态。\r\n     * 成功订阅用户状态后，当订阅的用户状态有变更时，会触发 onUserStatusChanged 回调。\r\n     * @param accountIds 要订阅的用户 ID 列表。\r\n     */\r\n    SubscriptionStore.prototype.subscribeUserStatusActive = function (accountIds) {\r\n        var _a, _b, _c, _d;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var failedAccounts, err_1;\r\n            return __generator(this, function (_e) {\r\n                switch (_e.label) {\r\n                    case 0:\r\n                        _e.trys.push([0, 2, , 3]);\r\n                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('subscribeUserStatusActive', accountIds);\r\n                        return [4 /*yield*/, this.nim.V2NIMSubscriptionService.subscribeUserStatus({\r\n                                accountIds: accountIds,\r\n                                duration: 3600 * 24 * 7,\r\n                                immediateSync: true,\r\n                            })];\r\n                    case 1:\r\n                        failedAccounts = _e.sent();\r\n                        if (failedAccounts.length > 0) {\r\n                            (_b = this.logger) === null || _b === void 0 ? void 0 : _b.warn('subscribeUserStatusActive failed accounts', failedAccounts);\r\n                            return [2 /*return*/, failedAccounts];\r\n                        }\r\n                        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.log('subscribeUserStatusActive success');\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        err_1 = _e.sent();\r\n                        (_d = this.logger) === null || _d === void 0 ? void 0 : _d.error('subscribeUserStatusActive err', err_1);\r\n                        return [3 /*break*/, 3];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 注册用户状态订阅相关监听。\r\n     */\r\n    SubscriptionStore.prototype._onUserStatusChanged = function (userStatusList) {\r\n        var e_1, _a;\r\n        var _b;\r\n        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log('_onUserStatusChanged', userStatusList);\r\n        try {\r\n            for (var userStatusList_1 = __values(userStatusList), userStatusList_1_1 = userStatusList_1.next(); !userStatusList_1_1.done; userStatusList_1_1 = userStatusList_1.next()) {\r\n                var userStatus = userStatusList_1_1.value;\r\n                this.stateMap.set(userStatus.accountId, userStatus);\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (userStatusList_1_1 && !userStatusList_1_1.done && (_a = userStatusList_1.return)) _a.call(userStatusList_1);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    };\r\n    return SubscriptionStore;\r\n}());\n\nvar RootStore = /** @class */ (function () {\r\n    function RootStore(nim, localOptions, platform) {\r\n        if (platform === void 0) { platform = 'Web'; }\r\n        var _this = this;\r\n        var _a, _b, _c, _d, _e;\r\n        this.localOptions = {\r\n            addFriendNeedVerify: true,\r\n            teamJoinMode: 0 /* V2NIMConst.V2NIMTeamJoinMode.V2NIM_TEAM_JOIN_MODE_FREE */,\r\n            teamAgreeMode: 1 /* V2NIMConst.V2NIMTeamAgreeMode.V2NIM_TEAM_AGREE_MODE_NO_AUTH */,\r\n            teamInviteMode: 0 /* V2NIMConst.V2NIMTeamInviteMode.V2NIM_TEAM_INVITE_MODE_MANAGER */,\r\n            teamUpdateTeamMode: 0 /* V2NIMConst.V2NIMTeamUpdateInfoMode.V2NIM_TEAM_UPDATE_INFO_MODE_MANAGER */,\r\n            teamUpdateExtMode: 1 /* V2NIMConst.V2NIMTeamUpdateExtensionMode\r\n                    .V2NIM_TEAM_UPDATE_EXTENSION_MODE_ALL */,\r\n            enableTeam: true,\r\n            enableChangeTeamJoinMode: true,\r\n            enableChangeTeamAgreeMode: true,\r\n            leaveOnTransfer: false,\r\n            needMention: true,\r\n            p2pMsgReceiptVisible: false,\r\n            teamMsgReceiptVisible: false,\r\n            loginStateVisible: false,\r\n            allowTransferTeamOwner: false,\r\n            teamManagerVisible: false,\r\n            aiVisible: true,\r\n            teamManagerLimit: 10,\r\n            sendMsgBefore: function (options) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\r\n                return [2 /*return*/, options];\r\n            }); }); },\r\n            aiUserAgentProvider: {},\r\n            conversationLimit: 100,\r\n            debug: 'debug',\r\n            aiStream: true,\r\n            iconfontUrl: [],\r\n        };\r\n        this.sdkOptions = {};\r\n        this.conversationStore = null;\r\n        this.localConversationStore = null;\r\n        this.logger = null;\r\n        makeAutoObservable(this);\r\n        this.nim = nim;\r\n        this.localOptions = __assign(__assign({}, this.localOptions), localOptions);\r\n        this.logger =\r\n            ((_a = this.localOptions) === null || _a === void 0 ? void 0 : _a.debug) == 'off'\r\n                ? null\r\n                : logDebug({\r\n                    level: (_b = this.localOptions) === null || _b === void 0 ? void 0 : _b.debug,\r\n                    version: packageJson.version,\r\n                    appName: packageJson.name,\r\n                    needStringify: false,\r\n                });\r\n        (_c = this.logger) === null || _c === void 0 ? void 0 : _c.log('store init', {\r\n            localOptions: this.localOptions,\r\n        });\r\n        this.sdkOptions = __assign({}, (_d = this.nim) === null || _d === void 0 ? void 0 : _d.getOptions());\r\n        this.connectStore = new ConnectStore(this, nim, this.localOptions);\r\n        this.friendStore = new FriendStore(this, nim);\r\n        this.msgStore = new MsgStore(this, nim, this.localOptions);\r\n        this.relationStore = new RelationStore(this, nim);\r\n        // 区分是本地会话还是云端会话\r\n        if ((_e = this.sdkOptions) === null || _e === void 0 ? void 0 : _e.enableV2CloudConversation) {\r\n            this.conversationStore = new ConversationStore(this, nim);\r\n        }\r\n        else {\r\n            this.localConversationStore = new LocalConversationStore(this, nim);\r\n        }\r\n        this.teamStore = new TeamStore(this, nim, this.localOptions);\r\n        this.teamMemberStore = new TeamMemberStore(this, nim);\r\n        this.sysMsgStore = new SysMsgStore(this, nim);\r\n        this.userStore = new UserStore(this, nim);\r\n        this.aiUserStore = new AIUserStore(this, nim, this.localOptions);\r\n        this.uiStore = new UiStore(this);\r\n        this.storageStore = new StorageStore(this, nim);\r\n        this.subscriptionStore = new SubscriptionStore(this, nim);\r\n        // 埋点上报\r\n        var reportComponents = [\r\n            'ContactKit',\r\n            'ConversationKit',\r\n            'ChatKit',\r\n            'SearchKit',\r\n        ];\r\n        reportComponents.forEach(function (item) {\r\n            var eventTracking = new EventTracking({\r\n                appKey: _this.nim.options.appkey,\r\n                version: '',\r\n                component: item,\r\n                imVersion: sdkPkg.version,\r\n                platform: platform,\r\n                channel: 'netease',\r\n                os: '',\r\n                framework: '',\r\n                language: detectLanguage(),\r\n                container: detectContainer(platform),\r\n            });\r\n            eventTracking.track('init', '');\r\n        });\r\n    }\r\n    RootStore.prototype.resetState = function () {\r\n        var _a, _b, _c, _d;\r\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('store resetState');\r\n        this.friendStore.resetState();\r\n        this.msgStore.resetState();\r\n        this.relationStore.resetState();\r\n        if ((_b = this.sdkOptions) === null || _b === void 0 ? void 0 : _b.enableV2CloudConversation) {\r\n            (_c = this.conversationStore) === null || _c === void 0 ? void 0 : _c.resetState();\r\n        }\r\n        else {\r\n            (_d = this.localConversationStore) === null || _d === void 0 ? void 0 : _d.resetState();\r\n        }\r\n        this.teamStore.resetState();\r\n        this.teamMemberStore.resetState();\r\n        this.sysMsgStore.resetState();\r\n        this.userStore.resetState();\r\n        this.aiUserStore.resetState();\r\n        this.uiStore.resetState();\r\n        this.subscriptionStore.resetState();\r\n    };\r\n    /**\r\n     * 销毁根store实例\r\n     */\r\n    RootStore.prototype.destroy = function () {\r\n        var _a, _b, _c;\r\n        logger.log('store destroyed');\r\n        this.connectStore.destroy();\r\n        this.friendStore.destroy();\r\n        this.msgStore.destroy();\r\n        this.relationStore.destroy();\r\n        if ((_a = this.sdkOptions) === null || _a === void 0 ? void 0 : _a.enableV2CloudConversation) {\r\n            (_b = this.conversationStore) === null || _b === void 0 ? void 0 : _b.destroy();\r\n        }\r\n        else {\r\n            (_c = this.localConversationStore) === null || _c === void 0 ? void 0 : _c.destroy();\r\n        }\r\n        this.teamStore.destroy();\r\n        this.teamMemberStore.destroy();\r\n        this.sysMsgStore.destroy();\r\n        this.userStore.destroy();\r\n        this.aiUserStore.destroy();\r\n        this.uiStore.destroy();\r\n        this.subscriptionStore.destroy();\r\n    };\r\n    /**\r\n     * 获取根store实例\r\n     * @param nim NIM SDK 实例\r\n     * @param t 国际化函数\r\n     */\r\n    RootStore.getInstance = function (nim, localOptions, platform) {\r\n        if (platform === void 0) { platform = 'Web'; }\r\n        if (!this.ins) {\r\n            this.ins = new RootStore(nim, localOptions, platform);\r\n        }\r\n        return this.ins;\r\n    };\r\n    return RootStore;\r\n}());\r\n// export * as V2NIM from 'nim-web-sdk-ng/dist/esm/nim'\n\nexport { AIUserStore, ConnectStore, ConversationStore, FriendStore, LocalConversationStore, MsgStore, RelationStore, RootStore, StorageStore, SubscriptionStore, SysMsgStore, TeamMemberStore, TeamStore, UiStore, UserStore, RootStore as default, constant as storeConstants, utils as storeUtils };\n"],
  "mappings": "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",
  "names": ["__assign", "ConnectStore", "FriendStore", "Queue", "QueueMap", "PinMsgsMap", "MsgStore", "msg", "pinInfo", "_a", "_b", "item", "RelationStore", "ConversationStore", "TeamStore", "name", "TeamMemberStore", "SysMsgStore", "UserStore", "AIUserStore", "UiStore", "StorageStore", "LocalConversationStore", "SubscriptionStore", "RootStore"]
}
